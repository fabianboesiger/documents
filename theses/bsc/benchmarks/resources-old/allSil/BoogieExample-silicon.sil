// Generated on 2021-03-23 at 23:29:28
domain TYPE {
  
  unique function class_java_DOT_lang_DOT_Object(): TYPE
  
  unique function class_BoogieExample(): TYPE
  
  unique function class_EncodedGlobalVariables(): TYPE
  
  function directSuperclass(t: TYPE): TYPE
  
  function type_of(val: Ref): TYPE
  
  axiom java_DOT_lang_DOT_Object_directSuperclass {
    directSuperclass(class_java_DOT_lang_DOT_Object()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom BoogieExample_directSuperclass {
    directSuperclass(class_BoogieExample()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom EncodedGlobalVariables_directSuperclass {
    directSuperclass(class_EncodedGlobalVariables()) == class_java_DOT_lang_DOT_Object()
  }
}

function instanceof_TYPE_TYPE(t: TYPE, u: TYPE): Bool
  ensures result == (t == u || directSuperclass(t) == u)


method java_DOT_lang_DOT_Object_Object_EncodedGlobalVariables(globals: Ref) returns (sys__result: Ref)
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Object()
{
  inhale false
}

method java_DOT_lang_DOT_Object_internal_Object_EncodedGlobalVariables(globals: Ref) returns (sys__result: Ref)
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Object()
{
  inhale false
}

method BoogieExample___contract_unsatisfiable__F_EncodedGlobalVariables_Integer(globals: Ref, n: Int) returns (sys__result: Int)
{
  inhale true && true
  // assert
  assert false
  inhale false
}

method BoogieExample_F_EncodedGlobalVariables_Integer(globals: Ref, n: Int) returns (sys__result: Int)
  ensures 100 < n ==> sys__result == n - 10
  ensures n <= 100 ==> sys__result == 91
{
  var sys__local__result__1: Int
  var r__2: Int
  if (100 < n) {
    r__2 := n - 10
  } else {
    r__2 := BoogieExample_F_EncodedGlobalVariables_Integer(globals, n + 11)
    r__2 := BoogieExample_F_EncodedGlobalVariables_Integer(globals, r__2)
  }
  sys__local__result__1 := r__2
  // assert
  assert (100 < n ==> sys__local__result__1 == n - 10) && (n <= 100 ==> sys__local__result__1 == 91)
  goto __return_F
  label __return_F
  sys__result := sys__local__result__1
  // assert
  assert (100 < n ==> sys__result == n - 10) && (n <= 100 ==> sys__result == 91)
  inhale false
}

method BoogieExample___contract_unsatisfiable__G_EncodedGlobalVariables_Integer(globals: Ref, n: Int) returns (sys__result: Int)
{
  inhale true && true
  // assert
  assert false
  inhale false
}

method BoogieExample_G_EncodedGlobalVariables_Integer(globals: Ref, n: Int) returns (sys__result: Int)
  ensures sys__result <= 91
{
  var sys__local__result__3: Int
  var r__4: Int
  if (100 < n) {
    r__4 := n - 10
    sys__local__result__3 := r__4
    // assert
    assert sys__local__result__3 <= 91
    goto __return_G
  } else {
    r__4 := BoogieExample_F_EncodedGlobalVariables_Integer(globals, n + 11)
    r__4 := BoogieExample_F_EncodedGlobalVariables_Integer(globals, r__4)
    sys__local__result__3 := r__4
    // assert
    assert sys__local__result__3 <= 91
    goto __return_G
  }
  label __return_G
  sys__result := sys__local__result__3
  // assert
  assert sys__result <= 91
  inhale false
}