// Generated on 2021-03-23 at 23:31:04
domain TYPE {
  
  unique function class_C(): TYPE
  
  unique function class_java_DOT_lang_DOT_Object(): TYPE
  
  unique function class_EncodedGlobalVariables(): TYPE
  
  function directSuperclass(t: TYPE): TYPE
  
  function type_of(val: Ref): TYPE
  
  axiom C_directSuperclass {
    directSuperclass(class_C()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom EncodedGlobalVariables_directSuperclass {
    directSuperclass(class_EncodedGlobalVariables()) == class_java_DOT_lang_DOT_Object()
  }
}

function instanceof_TYPE_TYPE(t: TYPE, u: TYPE): Bool
  ensures result == (t == u || directSuperclass(t) == u)


method C___contract_unsatisfiable__m_EncodedGlobalVariables_Integer(diz: Ref, globals: Ref, N: Int)
  requires diz != null
{
  inhale true && 0 < N
  // assert
  assert false
  inhale false
}

method C_loop_body_4_Integer_Integer(diz: Ref, N: Int, tid: Int)
  requires diz != null
  requires 0 <= tid && tid < N
  ensures 0 <= tid && tid < N
{
  var i__1: Int
  var __flatten_1__2: Int
  i__1 := 0
  while (i__1 < N) {
    i__1 := i__1 + 1
    __flatten_1__2 := i__1
    i__1 := i__1 + 1
  }
}

method C_parrallel_region_main_1_Integer(diz: Ref, N: Int)
  requires diz != null
{
  inhale false
}

method C_m_EncodedGlobalVariables_Integer(diz: Ref, globals: Ref, N: Int)
  requires diz != null
  requires 0 < N
{
  C_parrallel_region_main_1_Integer(diz, N)
}