domain $SnapshotMirrors$ {
  
  
}

field f$0: Ref

field val_int: Int

function i16$$memory_eq$$__$TY$__i16$i16$$bool$(self: Ref, other: Ref): Bool
  requires acc(i16(self), read$())
  requires acc(i16(other), read$())
{
  (unfolding acc(i16(self), read$()) in (unfolding acc(i16(other), read$()) in self.val_int == other.val_int))
}

function i32$$memory_eq$$__$TY$__i32$i32$$bool$(self: Ref, other: Ref): Bool
  requires acc(i32(self), read$())
  requires acc(i32(other), read$())
{
  (unfolding acc(i32(self), read$()) in (unfolding acc(i32(other), read$()) in self.val_int == other.val_int))
}

function i64$$memory_eq$$__$TY$__i64$i64$$bool$(self: Ref, other: Ref): Bool
  requires acc(i64(self), read$())
  requires acc(i64(other), read$())
{
  (unfolding acc(i64(self), read$()) in (unfolding acc(i64(other), read$()) in self.val_int == other.val_int))
}

function i8$$memory_eq$$__$TY$__i8$i8$$bool$(self: Ref, other: Ref): Bool
  requires acc(i8(self), read$())
  requires acc(i8(other), read$())
{
  (unfolding acc(i8(self), read$()) in (unfolding acc(i8(other), read$()) in self.val_int == other.val_int))
}

function isize$$memory_eq$$__$TY$__isize$isize$$bool$(self: Ref, other: Ref): Bool
  requires acc(isize(self), read$())
  requires acc(isize(other), read$())
{
  (unfolding acc(isize(self), read$()) in (unfolding acc(isize(other), read$()) in self.val_int == other.val_int))
}

function m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_$$bool$(self: Ref, other: Ref): Bool
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(self), read$())
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(other), read$())
{
  (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(self), read$()) in (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(other), read$()) in i16$$memory_eq$$__$TY$__i16$i16$$bool$(self.f$0, other.f$0)))
}

function m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_$$bool$(self: Ref, other: Ref): Bool
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(self), read$())
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(other), read$())
{
  (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(self), read$()) in (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(other), read$()) in i32$$memory_eq$$__$TY$__i32$i32$$bool$(self.f$0, other.f$0)))
}

function m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_$$bool$(self: Ref, other: Ref): Bool
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(self), read$())
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(other), read$())
{
  (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(self), read$()) in (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(other), read$()) in i64$$memory_eq$$__$TY$__i64$i64$$bool$(self.f$0, other.f$0)))
}

function m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_$$bool$(self: Ref, other: Ref): Bool
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(self), read$())
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(other), read$())
{
  (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(self), read$()) in (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(other), read$()) in i8$$memory_eq$$__$TY$__i8$i8$$bool$(self.f$0, other.f$0)))
}

function m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_$$bool$(self: Ref, other: Ref): Bool
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(self), read$())
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(other), read$())
{
  (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(self), read$()) in (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(other), read$()) in isize$$memory_eq$$__$TY$__isize$isize$$bool$(self.f$0, other.f$0)))
}

function m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_$$bool$(self: Ref, other: Ref): Bool
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(self), read$())
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(other), read$())
{
  (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(self), read$()) in (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(other), read$()) in u16$$memory_eq$$__$TY$__u16$u16$$bool$(self.f$0, other.f$0)))
}

function m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_$$bool$(self: Ref, other: Ref): Bool
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(self), read$())
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(other), read$())
{
  (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(self), read$()) in (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(other), read$()) in u32$$memory_eq$$__$TY$__u32$u32$$bool$(self.f$0, other.f$0)))
}

function m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_$$bool$(self: Ref, other: Ref): Bool
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(self), read$())
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(other), read$())
{
  (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(self), read$()) in (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(other), read$()) in u64$$memory_eq$$__$TY$__u64$u64$$bool$(self.f$0, other.f$0)))
}

function m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_$$bool$(self: Ref, other: Ref): Bool
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(self), read$())
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(other), read$())
{
  (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(self), read$()) in (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(other), read$()) in u8$$memory_eq$$__$TY$__u8$u8$$bool$(self.f$0, other.f$0)))
}

function m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_$$bool$(self: Ref, other: Ref): Bool
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(self), read$())
  requires acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(other), read$())
{
  (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(self), read$()) in (unfolding acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(other), read$()) in usize$$memory_eq$$__$TY$__usize$usize$$bool$(self.f$0, other.f$0)))
}

function u16$$memory_eq$$__$TY$__u16$u16$$bool$(self: Ref, other: Ref): Bool
  requires acc(u16(self), read$())
  requires acc(u16(other), read$())
{
  (unfolding acc(u16(self), read$()) in (unfolding acc(u16(other), read$()) in self.val_int == other.val_int))
}

function u32$$memory_eq$$__$TY$__u32$u32$$bool$(self: Ref, other: Ref): Bool
  requires acc(u32(self), read$())
  requires acc(u32(other), read$())
{
  (unfolding acc(u32(self), read$()) in (unfolding acc(u32(other), read$()) in self.val_int == other.val_int))
}

function u64$$memory_eq$$__$TY$__u64$u64$$bool$(self: Ref, other: Ref): Bool
  requires acc(u64(self), read$())
  requires acc(u64(other), read$())
{
  (unfolding acc(u64(self), read$()) in (unfolding acc(u64(other), read$()) in self.val_int == other.val_int))
}

function u8$$memory_eq$$__$TY$__u8$u8$$bool$(self: Ref, other: Ref): Bool
  requires acc(u8(self), read$())
  requires acc(u8(other), read$())
{
  (unfolding acc(u8(self), read$()) in (unfolding acc(u8(other), read$()) in self.val_int == other.val_int))
}

function usize$$memory_eq$$__$TY$__usize$usize$$bool$(self: Ref, other: Ref): Bool
  requires acc(usize(self), read$())
  requires acc(usize(other), read$())
{
  (unfolding acc(usize(self), read$()) in (unfolding acc(usize(other), read$()) in self.val_int == other.val_int))
}

function read$(): Perm
  ensures none < result
  ensures result < write


predicate DeadBorrowToken$(borrow: Int) 

predicate __TYPARAM__$T$__(self: Ref) 

predicate i16(self: Ref) {
  acc(self.val_int, write)
}

predicate i32(self: Ref) {
  acc(self.val_int, write)
}

predicate i64(self: Ref) {
  acc(self.val_int, write)
}

predicate i8(self: Ref) {
  acc(self.val_int, write)
}

predicate isize(self: Ref) {
  acc(self.val_int, write)
}

predicate m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$__TYPARAM__$T$__$_end_(self: Ref) {
  acc(self.f$0, write) && acc(__TYPARAM__$T$__(self.f$0), write)
}

predicate m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(self: Ref) {
  acc(self.f$0, write) && acc(i16(self.f$0), write)
}

predicate m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(self: Ref) {
  acc(self.f$0, write) && acc(i32(self.f$0), write)
}

predicate m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(self: Ref) {
  acc(self.f$0, write) && acc(i64(self.f$0), write)
}

predicate m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(self: Ref) {
  acc(self.f$0, write) && acc(i8(self.f$0), write)
}

predicate m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(self: Ref) {
  acc(self.f$0, write) && acc(isize(self.f$0), write)
}

predicate m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(self: Ref) {
  acc(self.f$0, write) && acc(u16(self.f$0), write)
}

predicate m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(self: Ref) {
  acc(self.f$0, write) && acc(u32(self.f$0), write)
}

predicate m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(self: Ref) {
  acc(self.f$0, write) && acc(u64(self.f$0), write)
}

predicate m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(self: Ref) {
  acc(self.f$0, write) && acc(u8(self.f$0), write)
}

predicate m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(self: Ref) {
  acc(self.f$0, write) && acc(usize(self.f$0), write)
}

predicate tuple0$(self: Ref) {
  true
}

predicate u16(self: Ref) {
  acc(self.val_int, write) && 0 <= self.val_int
}

predicate u32(self: Ref) {
  acc(self.val_int, write) && 0 <= self.val_int
}

predicate u64(self: Ref) {
  acc(self.val_int, write) && 0 <= self.val_int
}

predicate u8(self: Ref) {
  acc(self.val_int, write) && 0 <= self.val_int
}

predicate usize(self: Ref) {
  acc(self.val_int, write) && 0 <= self.val_int
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$110$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<u8 as Pow<u32>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[110]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u8(_1), write) && acc(u32(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u8(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u32(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u32(_5), write)
  assert true
  exhale acc(u32(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl u8>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u8(_3), write)
  assert true
  exhale acc(u8(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u8(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u8(_0), write)
  
  assert true
  exhale acc(u8(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$17$closesqu$$$one$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<isize as One>::one"
  
  // Def path: "008_num_traits_pow::{{impl}}[17]::one[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:119:13: 121:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 1isize
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 1
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(isize(_0), write)
  // obtain acc(isize(_0), write)
  
  assert true
  exhale acc(isize(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$126$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<i8 as Pow<u32>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[126]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i8(_1), write) && acc(u32(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i8(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u32(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u32(_5), write)
  assert true
  exhale acc(u32(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl i8>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i8(_3), write)
  assert true
  exhale acc(i8(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i8(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i8(_0), write)
  
  assert true
  exhale acc(i8(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$9$closesqu$$$zero$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<i16 as Zero>::zero"
  
  // Def path: "008_num_traits_pow::{{impl}}[9]::zero[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:37:13: 39:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 0i16
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 0
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(i16(_0), write)
  // obtain acc(i16(_0), write)
  
  assert true
  exhale acc(i16(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$330$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<usize> as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[330]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$326$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Int
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<usize> as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[326]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$usize$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$234$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Int
  var _2: Ref
  var _3: Int
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<usize as Pow<u16>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[234]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale _1 >= 0 && acc(u16(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_int()
  inhale true
  inhale _1 >= 0
  _3 := _1
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u16(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u16(_5), write)
  assert true
  exhale acc(u16(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl usize>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert _3 >= 0
  assert true
  exhale _3 >= 0 && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(usize(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(usize(_0), write)
  
  assert true
  exhale acc(usize(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$322$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<i64> as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[322]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$118$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<i8 as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[118]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i8(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i8(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl i8>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i8(_3), write)
  assert true
  exhale acc(i8(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i8(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i8(_0), write)
  
  assert true
  exhale acc(i8(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$20$closesqu$$$one$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<i32 as One>::one"
  
  // Def path: "008_num_traits_pow::{{impl}}[20]::one[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:119:13: 121:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 1i32
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 1
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(i32(_0), write)
  // obtain acc(i32(_0), write)
  
  assert true
  exhale acc(i32(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$226$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<i64 as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[226]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i64(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i64(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i64(_3), write)
  assert true
  exhale acc(i64(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i64(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i64(_0), write)
  
  assert true
  exhale acc(i64(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$254$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<isize as Pow<u32>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[254]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(isize(_1), write) && acc(u32(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(isize(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u32(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u32(_5), write)
  assert true
  exhale acc(u32(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl isize>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(isize(_3), write)
  assert true
  exhale acc(isize(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(isize(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(isize(_0), write)
  
  assert true
  exhale acc(isize(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$2$closesqu$$$zero$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<usize as Zero>::zero"
  
  // Def path: "008_num_traits_pow::{{impl}}[2]::zero[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:37:13: 39:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 0usize
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 0
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(usize(_0), write)
  // obtain acc(usize(_0), write)
  
  assert true
  exhale acc(usize(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$282$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<u16> as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[282]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$218$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<i64 as Pow<u16>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[218]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i64(_1), write) && acc(u16(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i64(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u16(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u16(_5), write)
  assert true
  exhale acc(u16(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl i64>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i64(_3), write)
  assert true
  exhale acc(i64(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i64(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i64(_0), write)
  
  assert true
  exhale acc(i64(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$114$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<u8 as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[114]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u8(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u8(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u8(_3), write)
  assert true
  exhale acc(u8(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u8(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u8(_0), write)
  
  assert true
  exhale acc(u8(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$166$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<u32 as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[166]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u32(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u32(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl u32>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u32(_3), write)
  assert true
  exhale acc(u32(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u32(_0), write)
  
  assert true
  exhale acc(u32(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$7$closesqu$$$zero$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<isize as Zero>::zero"
  
  // Def path: "008_num_traits_pow::{{impl}}[7]::zero[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:37:13: 39:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 0isize
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 0
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(isize(_0), write)
  // obtain acc(isize(_0), write)
  
  assert true
  exhale acc(isize(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$4$closesqu$$$zero$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<u16 as Zero>::zero"
  
  // Def path: "008_num_traits_pow::{{impl}}[4]::zero[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:37:13: 39:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 0u16
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 0
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(u16(_0), write)
  // obtain acc(u16(_0), write)
  
  assert true
  exhale acc(u16(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$3$closesqu$$$zero$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<u8 as Zero>::zero"
  
  // Def path: "008_num_traits_pow::{{impl}}[3]::zero[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:37:13: 39:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 0u8
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 0
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(u8(_0), write)
  // obtain acc(u8(_0), write)
  
  assert true
  exhale acc(u8(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$178$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<u32 as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[178]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u32(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u32(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u32(_3), write)
  assert true
  exhale acc(u32(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u32(_0), write)
  
  assert true
  exhale acc(u32(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$302$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Int
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<i32> as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[302]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$13$closesqu$$$one$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<u8 as One>::one"
  
  // Def path: "008_num_traits_pow::{{impl}}[13]::one[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:119:13: 121:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 1u8
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 1
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(u8(_0), write)
  // obtain acc(u8(_0), write)
  
  assert true
  exhale acc(u8(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$6$closesqu$$$zero$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<u64 as Zero>::zero"
  
  // Def path: "008_num_traits_pow::{{impl}}[6]::zero[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:37:13: 39:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 0u64
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 0
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(u64(_0), write)
  // obtain acc(u64(_0), write)
  
  assert true
  exhale acc(u64(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$222$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<i64 as Pow<u32>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[222]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i64(_1), write) && acc(u32(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i64(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u32(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u32(_5), write)
  assert true
  exhale acc(u32(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl i64>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i64(_3), write)
  assert true
  exhale acc(i64(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i64(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i64(_0), write)
  
  assert true
  exhale acc(i64(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$182$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<i32 as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[182]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i32(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i32(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl i32>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i32(_3), write)
  assert true
  exhale acc(i32(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i32(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i32(_0), write)
  
  assert true
  exhale acc(i32(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$306$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<i32> as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[306]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i32$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$210$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<u64 as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[210]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u64(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u64(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u64(_3), write)
  assert true
  exhale acc(u64(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u64(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u64(_0), write)
  
  assert true
  exhale acc(u64(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$138$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<u16 as Pow<u16>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[138]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u16(_1), write) && acc(u16(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u16(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u16(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u16(_5), write)
  assert true
  exhale acc(u16(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl u16>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u16(_3), write)
  assert true
  exhale acc(u16(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u16(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u16(_0), write)
  
  assert true
  exhale acc(u16(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$170$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<u32 as Pow<u16>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[170]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u32(_1), write) && acc(u16(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u32(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u16(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u16(_5), write)
  assert true
  exhale acc(u16(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl u32>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u32(_3), write)
  assert true
  exhale acc(u32(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u32(_0), write)
  
  assert true
  exhale acc(u32(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$290$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<i16> as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[290]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$266$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<u8> as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[266]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$250$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<isize as Pow<u16>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[250]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(isize(_1), write) && acc(u16(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(isize(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u16(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u16(_5), write)
  assert true
  exhale acc(u16(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl isize>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(isize(_3), write)
  assert true
  exhale acc(isize(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(isize(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(isize(_0), write)
  
  assert true
  exhale acc(isize(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$258$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<isize as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[258]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(isize(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(isize(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(isize(_3), write)
  assert true
  exhale acc(isize(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(isize(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(isize(_0), write)
  
  assert true
  exhale acc(isize(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$338$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<isize> as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[338]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$one$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  label start
  // ========== start ==========
  
  // Name: "008_num_traits_pow::one"
  
  // Def path: "008_num_traits_pow::one[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:164:1: 166:2
  
  __t0 := false
  __t1 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const One::one() -> [return: bb2, unwind: bb1]
  
  label l0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(__TYPARAM__$T$__(_0), write)
  inhale true
  inhale true
  label l1
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(__TYPARAM__$T$__(_0), write)
  
  assert true
  exhale acc(__TYPARAM__$T$__(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$18$closesqu$$$one$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<i8 as One>::one"
  
  // Def path: "008_num_traits_pow::{{impl}}[18]::one[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:119:13: 121:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 1i8
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 1
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(i8(_0), write)
  // obtain acc(i8(_0), write)
  
  assert true
  exhale acc(i8(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$10$closesqu$$$zero$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<i32 as Zero>::zero"
  
  // Def path: "008_num_traits_pow::{{impl}}[10]::zero[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:37:13: 39:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 0i32
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 0
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(i32(_0), write)
  // obtain acc(i32(_0), write)
  
  assert true
  exhale acc(i32(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$314$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<u64> as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[314]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$19$closesqu$$$one$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<i16 as One>::one"
  
  // Def path: "008_num_traits_pow::{{impl}}[19]::one[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:119:13: 121:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 1i16
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 1
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(i16(_0), write)
  // obtain acc(i16(_0), write)
  
  assert true
  exhale acc(i16(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$318$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Int
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<i64> as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[318]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i64$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$main$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "008_num_traits_pow::main"
  
  // Def path: "008_num_traits_pow::main[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:743:1: 743:12
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = ()
  
  _0 := builtin$havoc_ref()
  inhale acc(tuple0$(_0), write)
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(tuple0$(_0), write)
  
  assert true
  exhale acc(tuple0$(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$134$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<u16 as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[134]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u16(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u16(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl u16>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u16(_3), write)
  assert true
  exhale acc(u16(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u16(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u16(_0), write)
  
  assert true
  exhale acc(u16(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$262$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Int
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<u8> as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[262]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u8$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$16$closesqu$$$one$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<u64 as One>::one"
  
  // Def path: "008_num_traits_pow::{{impl}}[16]::one[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:119:13: 121:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 1u64
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 1
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(u64(_0), write)
  // obtain acc(u64(_0), write)
  
  assert true
  exhale acc(u64(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$298$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<u32> as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[298]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$0$closesqu$$$zero$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<T> as Zero>::zero"
  
  // Def path: "008_num_traits_pow::{{impl}}[0]::zero[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:76:5: 78:6
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_1)
  
  // [mir] _1 = const Zero::zero() -> [return: bb2, unwind: bb1]
  
  label l0
  _1 := builtin$havoc_ref()
  inhale true
  inhale acc(__TYPARAM__$T$__(_1), write)
  inhale true
  inhale true
  label l1
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] _0 = std::num::Wrapping<T>::{{constructor}}(move _1,)
  
  _0 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$__TYPARAM__$T$__$_end_(_0), write)
  unfold acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$__TYPARAM__$T$__$_end_(_0), write)
  _0.f$0 := _1
  label l2
  // [mir] drop(_1) -> [return: bb3, unwind: bb1]
  
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_1)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$__TYPARAM__$T$__$_end_(_0), write)
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$__TYPARAM__$T$__$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$__TYPARAM__$T$__$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$214$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<i64 as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[214]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i64(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i64(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl i64>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i64(_3), write)
  assert true
  exhale acc(i64(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i64(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i64(_0), write)
  
  assert true
  exhale acc(i64(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$1$closesqu$$$one$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<T> as One>::one"
  
  // Def path: "008_num_traits_pow::{{impl}}[1]::one[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:149:5: 151:6
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_1)
  
  // [mir] _1 = const One::one() -> [return: bb2, unwind: bb1]
  
  label l0
  _1 := builtin$havoc_ref()
  inhale true
  inhale acc(__TYPARAM__$T$__(_1), write)
  inhale true
  inhale true
  label l1
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] _0 = std::num::Wrapping<T>::{{constructor}}(move _1,)
  
  _0 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$__TYPARAM__$T$__$_end_(_0), write)
  unfold acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$__TYPARAM__$T$__$_end_(_0), write)
  _0.f$0 := _1
  label l2
  // [mir] drop(_1) -> [return: bb3, unwind: bb1]
  
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_1)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$__TYPARAM__$T$__$_end_(_0), write)
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$__TYPARAM__$T$__$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$__TYPARAM__$T$__$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$190$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<i32 as Pow<u32>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[190]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i32(_1), write) && acc(u32(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i32(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u32(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u32(_5), write)
  assert true
  exhale acc(u32(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl i32>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i32(_3), write)
  assert true
  exhale acc(i32(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i32(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i32(_0), write)
  
  assert true
  exhale acc(i32(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$294$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Int
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<u32> as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[294]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u32$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$206$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<u64 as Pow<u32>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[206]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u64(_1), write) && acc(u32(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u64(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u32(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u32(_5), write)
  assert true
  exhale acc(u32(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl u64>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u64(_3), write)
  assert true
  exhale acc(u64(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u64(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u64(_0), write)
  
  assert true
  exhale acc(u64(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$102$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<u8 as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[102]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u8(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u8(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl u8>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u8(_3), write)
  assert true
  exhale acc(u8(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u8(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u8(_0), write)
  
  assert true
  exhale acc(u8(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$15$closesqu$$$one$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<u32 as One>::one"
  
  // Def path: "008_num_traits_pow::{{impl}}[15]::one[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:119:13: 121:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 1u32
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 1
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(u32(_0), write)
  // obtain acc(u32(_0), write)
  
  assert true
  exhale acc(u32(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$202$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<u64 as Pow<u16>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[202]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u64(_1), write) && acc(u16(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u64(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u16(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u16(_5), write)
  assert true
  exhale acc(u16(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl u64>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u64(_3), write)
  assert true
  exhale acc(u64(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u64(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u64(_0), write)
  
  assert true
  exhale acc(u64(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$14$closesqu$$$one$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<u16 as One>::one"
  
  // Def path: "008_num_traits_pow::{{impl}}[14]::one[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:119:13: 121:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 1u16
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 1
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(u16(_0), write)
  // obtain acc(u16(_0), write)
  
  assert true
  exhale acc(u16(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$186$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<i32 as Pow<u16>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[186]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i32(_1), write) && acc(u16(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i32(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u16(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u16(_5), write)
  assert true
  exhale acc(u16(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl i32>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i32(_3), write)
  assert true
  exhale acc(i32(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i32(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i32(_0), write)
  
  assert true
  exhale acc(i32(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$130$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<i8 as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[130]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i8(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i8(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i8(_3), write)
  assert true
  exhale acc(i8(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i8(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i8(_0), write)
  
  assert true
  exhale acc(i8(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$150$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<i16 as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[150]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i16(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i16(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl i16>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i16(_3), write)
  assert true
  exhale acc(i16(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i16(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i16(_0), write)
  
  assert true
  exhale acc(i16(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$106$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<u8 as Pow<u16>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[106]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u8(_1), write) && acc(u16(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u8(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u16(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u16(_5), write)
  assert true
  exhale acc(u16(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl u8>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u8(_3), write)
  assert true
  exhale acc(u8(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u8(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u8(_0), write)
  
  assert true
  exhale acc(u8(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$278$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Int
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<u16> as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[278]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u16$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$334$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Int
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<isize> as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[334]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$isize$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$246$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<isize as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[246]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(isize(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(isize(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl isize>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(isize(_3), write)
  assert true
  exhale acc(isize(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(isize(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(isize(_0), write)
  
  assert true
  exhale acc(isize(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$146$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<u16 as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[146]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u16(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u16(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u16(_3), write)
  assert true
  exhale acc(u16(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u16(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u16(_0), write)
  
  assert true
  exhale acc(u16(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$238$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Int
  var _2: Ref
  var _3: Int
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<usize as Pow<u32>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[238]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale _1 >= 0 && acc(u32(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_int()
  inhale true
  inhale _1 >= 0
  _3 := _1
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u32(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u32(_5), write)
  assert true
  exhale acc(u32(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl usize>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert _3 >= 0
  assert true
  exhale _3 >= 0 && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(usize(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(usize(_0), write)
  
  assert true
  exhale acc(usize(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$174$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<u32 as Pow<u32>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[174]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u32(_1), write) && acc(u32(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u32(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u32(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u32(_5), write)
  assert true
  exhale acc(u32(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl u32>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u32(_3), write)
  assert true
  exhale acc(u32(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u32(_0), write)
  
  assert true
  exhale acc(u32(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$11$closesqu$$$zero$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<i64 as Zero>::zero"
  
  // Def path: "008_num_traits_pow::{{impl}}[11]::zero[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:37:13: 39:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 0i64
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 0
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(i64(_0), write)
  // obtain acc(i64(_0), write)
  
  assert true
  exhale acc(i64(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$274$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<i8> as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[274]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$zero$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  label start
  // ========== start ==========
  
  // Name: "008_num_traits_pow::zero"
  
  // Def path: "008_num_traits_pow::zero[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:158:1: 160:2
  
  __t0 := false
  __t1 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const Zero::zero() -> [return: bb2, unwind: bb1]
  
  label l0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(__TYPARAM__$T$__(_0), write)
  inhale true
  inhale true
  label l1
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(__TYPARAM__$T$__(_0), write)
  
  assert true
  exhale acc(__TYPARAM__$T$__(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$270$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Int
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<i8> as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[270]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i8$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$198$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<u64 as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[198]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u64(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u64(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl u64>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u64(_3), write)
  assert true
  exhale acc(u64(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u64(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u64(_0), write)
  
  assert true
  exhale acc(u64(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$242$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Int
  var _2: Int
  var _3: Int
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<usize as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[242]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale _1 >= 0 && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_int()
  inhale true
  inhale _1 >= 0
  _3 := _1
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert _3 >= 0
  assert true
  exhale _3 >= 0 && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(usize(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(usize(_0), write)
  
  assert true
  exhale acc(usize(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$5$closesqu$$$zero$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<u32 as Zero>::zero"
  
  // Def path: "008_num_traits_pow::{{impl}}[5]::zero[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:37:13: 39:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 0u32
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 0
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(u32(_0), write)
  // obtain acc(u32(_0), write)
  
  assert true
  exhale acc(u32(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$194$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<i32 as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[194]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i32(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i32(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i32(_3), write)
  assert true
  exhale acc(i32(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i32(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i32(_0), write)
  
  assert true
  exhale acc(i32(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$122$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<i8 as Pow<u16>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[122]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i8(_1), write) && acc(u16(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i8(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u16(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u16(_5), write)
  assert true
  exhale acc(u16(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl i8>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i8(_3), write)
  assert true
  exhale acc(i8(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i8(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i8(_0), write)
  
  assert true
  exhale acc(i8(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$162$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Int
  var _3: Ref
  var _4: Int
  var _5: Int
  label start
  // ========== start ==========
  
  // Name: "<i16 as Pow<usize>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[162]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i16(_1), write) && _2 >= 0
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i16(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_int()
  inhale true
  inhale _2 >= 0
  _5 := _2
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  assert _5 >= 0
  assert true
  exhale _5 >= 0
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i16(_3), write)
  assert true
  exhale acc(i16(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i16(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i16(_0), write)
  
  assert true
  exhale acc(i16(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$12$closesqu$$$one$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<usize as One>::one"
  
  // Def path: "008_num_traits_pow::{{impl}}[12]::one[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:119:13: 121:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 1usize
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 1
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(usize(_0), write)
  // obtain acc(usize(_0), write)
  
  assert true
  exhale acc(usize(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$158$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<i16 as Pow<u32>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[158]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i16(_1), write) && acc(u32(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i16(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u32(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u32(_5), write)
  assert true
  exhale acc(u32(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl i16>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i16(_3), write)
  assert true
  exhale acc(i16(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i16(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i16(_0), write)
  
  assert true
  exhale acc(i16(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$310$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Int
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<u64> as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[310]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$u64$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$154$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<i16 as Pow<u16>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[154]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(i16(_1), write) && acc(u16(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(i16(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u16(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u16(_5), write)
  assert true
  exhale acc(u16(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl i16>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(i16(_3), write)
  assert true
  exhale acc(i16(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(i16(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(i16(_0), write)
  
  assert true
  exhale acc(i16(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$142$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<u16 as Pow<u32>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[142]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(u16(_1), write) && acc(u32(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(_3.val_int, write)
  unfold acc(u16(_1), write)
  _3.val_int := _1.val_int
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u32(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u32(_5), write)
  assert true
  exhale acc(u32(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl u16>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  fold acc(u16(_3), write)
  assert true
  exhale acc(u16(_3), write) && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(u16(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(u16(_0), write)
  
  assert true
  exhale acc(u16(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$8$closesqu$$$zero$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<i8 as Zero>::zero"
  
  // Def path: "008_num_traits_pow::{{impl}}[8]::zero[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:37:13: 39:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 0i8
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 0
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(i8(_0), write)
  // obtain acc(i8(_0), write)
  
  assert true
  exhale acc(i8(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$286$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Ref
  var _2: Ref
  var _3: Ref
  var _4: Int
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<std::num::Wrapping<i16> as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[286]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(_1), write) && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_ref()
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(_3), write)
  inhale m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_$$memory_eq$$__$TY$__m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_$m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_$$bool$(_1, _3)
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_int()
  inhale true
  inhale _4 >= 0
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(_3), write) && _4 >= 0
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(_0), write)
  
  assert true
  exhale acc(m_core$$num$opensqu$0$closesqu$$$Wrapping$opensqu$0$closesqu$$_beg_$i16$_end_(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$230$closesqu$$$pow$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var _1: Int
  var _2: Ref
  var _3: Int
  var _4: Ref
  var _5: Ref
  label start
  // ========== start ==========
  
  // Name: "<usize as Pow<u8>>::pow"
  
  // Def path: "008_num_traits_pow::{{impl}}[230]::pow[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:513:13: 515:14
  
  __t0 := false
  __t1 := false
  __t2 := false
  // Preconditions:
  
  inhale _1 >= 0 && acc(u8(_2), write)
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_3)
  
  // [mir] _3 = _1
  
  _3 := builtin$havoc_int()
  inhale true
  inhale _1 >= 0
  _3 := _1
  label l0
  // [mir] StorageLive(_4)
  
  // [mir] StorageLive(_5)
  
  // [mir] _5 = _2
  
  _5 := builtin$havoc_ref()
  inhale acc(_5.val_int, write)
  unfold acc(u8(_2), write)
  _5.val_int := _2.val_int
  label l1
  // [mir] _4 = const std::convert::From::from(move _5) -> [return: bb2, unwind: bb1]
  
  label l2
  fold acc(u8(_5), write)
  assert true
  exhale acc(u8(_5), write)
  _4 := builtin$havoc_ref()
  inhale true
  inhale acc(u32(_4), write)
  inhale true
  inhale true
  label l3
  goto bb2
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] StorageDead(_5)
  
  // [mir] _0 = const core::num::<impl usize>::pow(move _3, move _4) -> [return: bb3, unwind: bb1]
  
  label l4
  assert _3 >= 0
  assert true
  exhale _3 >= 0 && acc(u32(_4), write)
  _0 := builtin$havoc_ref()
  inhale true
  inhale acc(usize(_0), write)
  inhale true
  inhale true
  label l5
  goto bb3
  label bb3
  // ========== bb3 ==========
  
  __t2 := true
  // [mir] StorageDead(_4)
  
  // [mir] StorageDead(_3)
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(usize(_0), write)
  
  assert true
  exhale acc(usize(_0), write)
  goto end_of_method
  label end_of_method
}

method m_008_num_traits_pow$$$opencur$$opencur$impl$closecur$$closecur$$opensqu$21$closesqu$$$one$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "<i64 as One>::one"
  
  // Def path: "008_num_traits_pow::{{impl}}[21]::one[0]"
  
  // Span: tests/verify/pass/crates/008-num-traits-pow.rs:119:13: 121:14
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const 1i64
  
  _0 := builtin$havoc_ref()
  inhale acc(_0.val_int, write)
  _0.val_int := 1
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(i64(_0), write)
  // obtain acc(i64(_0), write)
  
  assert true
  exhale acc(i64(_0), write)
  goto end_of_method
  label end_of_method
}

method builtin$havoc_bool() returns (ret: Bool)


method builtin$havoc_int() returns (ret: Int)


method builtin$havoc_ref() returns (ret: Ref)
