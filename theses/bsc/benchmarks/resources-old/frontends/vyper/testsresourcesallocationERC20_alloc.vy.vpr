domain $Math {
  
  function $sign($a: Int): Int
  
  function $div($a: Int, $b: Int, $r: Int): Int
  
  function $mod($a: Int, $b: Int, $r: Int): Int
  
  function $pow($a: Int, $b: Int): Int
  
  function $sqrt($a: Int): Int
  
  function $floor($a: Int, $s: Int): Int
  
  function $ceil($a: Int, $s: Int): Int
  
  function $shift($a: Int, $s: Int): Int
  
  function $bitwise_not($a: Int): Int
  
  function $bitwise_and($a: Int, $b: Int): Int
  
  function $bitwise_or($a: Int, $b: Int): Int
  
  function $bitwise_xor($a: Int, $b: Int): Int
  
  axiom $sign_ax {
    $sign(0) == 0 && (forall $a: Int :: { $sign($a) } ($a > 0 ==> $sign($a) == 1) && ($a < 0 ==> $sign($a) == -1))
  }
  
  axiom $div_ax {
    (forall $a: Int, $b: Int, $r: Int :: { $div($a, $b, $r) } $div($a, $b, $r) == $a / $b + ($a >= 0 || $a % $b == 0 ? 0 : $sign($b)))
  }
  
  axiom $mod_ax {
    (forall $a: Int, $b: Int, $r: Int :: { $mod($a, $b, $r) } $mod($a, $b, $r) == $a - $div($a, $b, $r) * $b)
  }
  
  axiom $pow0N_ax {
    (forall $a: Int :: { $pow(0, $a) } $a != 0 ==> $pow(0, $a) == 0)
  }
  
  axiom $powN0_ax {
    (forall $a: Int :: { $pow($a, 0) } $a != 0 ==> $pow($a, 0) == 1)
  }
  
  axiom $pow_non_negative_ax {
    (forall $a: Int, $b: Int :: { $pow($a, $b) } $a >= 0 ==> $pow($a, $b) >= 0)
  }
  
  axiom $pow_non_negative_and_non_null_ax {
    (forall $a: Int, $b: Int :: { $pow($a, $b) } $a > 0 && $b >= 0 ==> $pow($a, $b) > 0)
  }
  
  axiom $floor_ax {
    (forall $a: Int, $s: Int :: { $floor($a, $s) } $s > 0 ==> $floor($a, $s) == $div(($a < 0 ? $a - ($s - 1) : $a), $s, 0))
  }
  
  axiom $ceil_ax {
    (forall $a: Int, $s: Int :: { $ceil($a, $s) } $s > 0 ==> $ceil($a, $s) == $div(($a < 0 ? $a : $a + $s - 1), $s, 0))
  }
  
  axiom $shift_ax {
    (forall $a: Int, $s: Int :: { $shift($a, $s) } $shift($a, $s) >= 0)
  }
  
  axiom $bitwise_not_ax {
    (forall $a: Int :: { $bitwise_not($a) } $bitwise_not($a) >= 0)
  }
  
  axiom $bitwise_and_ax {
    (forall $a: Int, $b: Int :: { $bitwise_and($a, $b) } $bitwise_and($a, $b) >= 0)
  }
  
  axiom $bitwise_or_ax {
    (forall $a: Int, $b: Int :: { $bitwise_or($a, $b) } $bitwise_or($a, $b) >= 0)
  }
  
  axiom $bitwise_xor_ax {
    (forall $a: Int, $b: Int :: { $bitwise_xor($a, $b) } $bitwise_xor($a, $b) >= 0)
  }
}

domain $Int {
  
  function $wrap(x: Int): $Int
  
  function $unwrap(x: $Int): Int
  
  function $w_mul(x: $Int, y: $Int): $Int
  
  function $w_mulI(x: $Int, y: $Int): $Int
  
  function $w_mulL(x: $Int, y: $Int): $Int
  
  function $w_abs(x: $Int): Int
  
  function $w_mod($a: $Int, $b: $Int): $Int
  
  function $w_modL($a: $Int, $b: $Int): $Int
  
  function $w_div($a: $Int, $b: $Int): $Int
  
  function $w_div_down($a: $Int, $b: $Int): $Int
  
  function $w_div_nat($a: $Int, $b: $Int): $Int
  
  function $w_div_natL($a: $Int, $b: $Int): $Int
  
  axiom $wrap_ax {
    (forall i: Int :: { $wrap(i) } $unwrap($wrap(i)) == i)
  }
  
  axiom $unwrap_ax {
    (forall i: $Int :: { $wrap($unwrap(i)) } $wrap($unwrap(i)) == i)
  }
  
  axiom $w_abs_ax_1 {
    (forall i: $Int :: { $w_abs(i) } $unwrap(i) < 0 ==> $w_abs(i) == -$unwrap(i))
  }
  
  axiom $w_abs_ax_2 {
    (forall i: $Int :: { $w_abs(i) } $unwrap(i) >= 0 ==> $w_abs(i) == $unwrap(i))
  }
  
  axiom $w_mul_intermediate {
    (forall i: $Int, j: $Int :: { $w_mul(i, j) } $w_mul(i, j) == $w_mulI(i, j))
  }
  
  axiom $w_mul_limited {
    (forall i: $Int, j: $Int :: { $w_mul(i, j) } $w_mul(i, j) == $w_mulL(i, j))
  }
  
  axiom $w_mul_intermediate_to_limited {
    (forall i: $Int, j: $Int :: { $w_mulI(i, j) } $w_mulI(i, j) == $w_mulL(i, j))
  }
  
  axiom $w_mul_commutative {
    (forall i: $Int, j: $Int :: { $w_mul(i, j) } $w_mul(i, j) == $w_mulI(j, i))
  }
  
  axiom $w_mul_associative {
    (forall i: $Int, j: $Int, k: $Int :: { $w_mulI(i, $w_mulI(j, k)) } $w_mulI(i, $w_mulI(j, k)) == $w_mulL($w_mulL(i, j), k))
  }
  
  axiom $w_mul_distributive {
    (forall i: $Int, j: $Int, k: $Int, l: $Int :: { $w_mulI(i, j),$w_mulI(i, k),$w_mulI(i, l) } $unwrap(j) == $unwrap(k) + $unwrap(l) ==> $w_mulI(i, j) == $wrap($unwrap($w_mulL(i, k)) + $unwrap($w_mulL(i, l))))
  }
  
  axiom $w_mul_basic_sign_1 {
    (forall i: $Int, j: $Int :: { $w_mulI(i, j) } $w_mulI(i, j) == $w_mulL($wrap(-$unwrap(i)), $wrap(-$unwrap(j))))
  }
  
  axiom $w_mul_basic_sign_2 {
    (forall i: $Int, j: $Int :: { $w_mulI(i, j) } $w_mulI(i, j) == $wrap(-$unwrap($w_mulL($wrap(-$unwrap(i)), j))))
  }
  
  axiom $w_mul_basic_zero_1 {
    (forall i: $Int, j: $Int :: { $w_mulI(i, j) } $unwrap(i) == 0 || $unwrap(j) == 0 ==> $unwrap($w_mulI(i, j)) == 0)
  }
  
  axiom $w_mul_basic_zero_2 {
    (forall i: $Int, j: $Int :: { $w_mulI(i, j) } $unwrap(i) > 0 && $unwrap(j) > 0 || $unwrap(i) < 0 && $unwrap(j) < 0 ==> $unwrap($w_mulI(i, j)) > 0)
  }
  
  axiom $w_mul_basic_neutral {
    (forall i: $Int, j: $Int :: { $w_mulI(i, j) } $unwrap(i) == 1 || $unwrap(j) == 0 ==> $w_mulI(i, j) == j)
  }
  
  axiom $w_mul_basic_proportional {
    (forall i: $Int, j: $Int :: { $w_mulI(i, j) } $w_abs($w_mulI(i, j)) >= $w_abs(j) == ($w_abs(i) >= 1 || $unwrap(j) == 0))
  }
  
  axiom $w_mul_order_1 {
    (forall i: $Int, j: $Int, k: $Int, l: $Int :: { $w_mulI(i, $w_mulI(j, l)),$w_mulI(k, l) } $unwrap($w_mulI(i, j)) > $unwrap(k) && $unwrap(l) > 0 ==> $unwrap($w_mulL(i, $w_mulL(j, l))) > $unwrap($w_mulI(k, l)))
  }
  
  axiom $w_mul_order_2 {
    (forall i: $Int, j: $Int, k: $Int, l: $Int :: { $w_mulI(i, $w_mulI(j, l)),$w_mulI(k, l) } $unwrap($w_mulI(i, j)) >= $unwrap(k) && $unwrap(l) > 0 ==> $unwrap($w_mulL(i, $w_mulL(j, l))) >= $unwrap($w_mulI(k, l)))
  }
  
  axiom $w_mul_order_3 {
    (forall i: $Int, j: $Int, k: $Int, l: $Int :: { $w_mulI(i, $w_mulI(j, l)),$w_mulI(k, l) } $unwrap($w_mulI(i, j)) > $unwrap(k) && $unwrap(l) < 0 ==> $unwrap($w_mulI(k, l)) > $unwrap($w_mulL(i, $w_mulL(j, l))))
  }
  
  axiom $w_mul_order_4 {
    (forall i: $Int, j: $Int, k: $Int, l: $Int :: { $w_mulI(i, $w_mulI(j, l)),$w_mulI(k, l) } $unwrap($w_mulI(i, j)) >= $unwrap(k) && $unwrap(l) < 0 ==> $unwrap($w_mulI(k, l)) >= $unwrap($w_mulL(i, $w_mulL(j, l))))
  }
  
  axiom $w_mul_monotonicity_1 {
    (forall i: $Int, j: $Int, k: $Int, l: $Int :: { $w_mulI(i, k),$w_mulI(j, l) } $w_abs(i) <= $w_abs(j) && $w_abs(k) <= $w_abs(l) ==> $w_abs($w_mulI(i, k)) <= $w_abs($w_mulI(j, l)))
  }
  
  axiom $w_mul_monotonicity_2 {
    (forall i: $Int, j: $Int, k: $Int, l: $Int :: { $w_mulI(i, k),$w_mulI(j, l) } $w_abs(i) < $w_abs(j) && ($w_abs(k) <= $w_abs(l) && $unwrap(l) != 0) ==> $w_abs($w_mulI(i, k)) < $w_abs($w_mulI(j, l)))
  }
  
  axiom $w_mul_monotonicity_3 {
    (forall i: $Int, j: $Int, k: $Int, l: $Int :: { $w_mulI(i, k),$w_mulI(j, l) } $w_abs(i) <= $w_abs(j) && ($w_abs(k) < $w_abs(l) && $unwrap(j) != 0) ==> $w_abs($w_mulI(i, k)) < $w_abs($w_mulI(j, l)))
  }
  
  axiom $w_mod_limited {
    (forall i: $Int, j: $Int :: { $w_mod(i, j) } $w_mod(i, j) == $w_modL(i, j))
  }
  
  axiom $w_mod_identity {
    (forall i: $Int, j: $Int :: { $w_mod(i, j) } j != $wrap(0) ==> i == j || i == $wrap(0) ==> $w_mod(i, j) == $wrap(0))
  }
  
  axiom $w_mod_basic_1 {
    (forall i: $Int, j: $Int, l: $Int :: { $w_mod(i, j),$w_mod(l, j) } j != $wrap(0) ==> $unwrap(i) == $unwrap(l) + $w_abs(j) && ($unwrap(l) >= 0 || $unwrap(i) < 0) ==> $w_mod(i, j) == $w_modL(l, j))
  }
  
  axiom $w_mod_basic_2 {
    (forall i: $Int, j: $Int, l: $Int :: { $w_mod(i, j),$w_mod(l, j) } j != $wrap(0) ==> $unwrap(i) == $unwrap(l) - $w_abs(j) && ($unwrap(l) <= 0 || $unwrap(i) > 0) ==> $w_mod(i, j) == $w_modL(l, j))
  }
  
  axiom $w_mod_basic_3 {
    (forall i: $Int, j: $Int :: { $w_mod(i, j) } j != $wrap(0) ==> 0 <= $w_abs(i) && $w_abs(i) < $w_abs(j) ==> $w_mod(i, j) == i)
  }
  
  axiom $w_mod_basic_4 {
    (forall i: $Int, j: $Int :: { $w_mod(i, j) } j != $wrap(0) ==> $w_abs($w_mod(i, j)) < $w_abs(j))
  }
  
  axiom $w_mod_sign_1 {
    (forall i: $Int, j: $Int :: { $w_mod(i, j) } j != $wrap(0) ==> $sign($unwrap($w_mod(i, j))) == $sign($unwrap(i)) || $sign($unwrap($w_mod(i, j))) == 0)
  }
  
  axiom $w_mod_sign_2 {
    (forall i: $Int, j: $Int, k: $Int :: { $w_mod(i, j),$w_mod(k, j) } j != $wrap(0) ==> $unwrap(i) == -$unwrap(k) ==> $w_mod(i, j) == $wrap(-$unwrap($w_modL(k, j))))
  }
  
  axiom $w_mod_sign_3 {
    (forall i: $Int, j: $Int :: { $w_mod(i, j) } j != $wrap(0) ==> $w_mod(i, j) == $w_mod(i, $wrap(-$unwrap(j))))
  }
  
  axiom $w_mod_mod {
    (forall i: $Int, j: $Int :: { $w_mod(i, j) } j != $wrap(0) ==> $w_mod(i, j) == $w_modL($w_modL(i, j), j))
  }
  
  axiom $w_mod_decrease {
    (forall i: $Int, j: $Int :: { $w_mod(i, j) } j != $wrap(0) ==> $w_abs($w_mod(i, j)) <= $w_abs(i))
  }
  
  axiom $w_mod_add {
    (forall i: $Int, j: $Int, k: $Int, l: $Int :: { $w_mod(i, j),$w_mod(k, j),$w_mod(l, j) } j != $wrap(0) ==> $unwrap(i) == $unwrap(k) + $unwrap(l) ==> ($unwrap(i) >= 0 && $unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) >= 0 || $unwrap(i) <= 0 && $unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) <= 0 ==> $w_abs(j) <= $unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) && ($unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) < 2 * $w_abs(j) && $w_mod(i, j) == $wrap($unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) - $w_abs(j))) || (-$w_abs(j) < $unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) && ($unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) < $w_abs(j) && $w_mod(i, j) == $wrap($unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)))) || -2 * $w_abs(j) < $unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) && ($unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) <= -$w_abs(j) && $w_mod(i, j) == $wrap($unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) + $w_abs(j))))) && ($unwrap(i) > 0 && $unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) < 0 || $unwrap(i) < 0 && $unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) > 0 ==> 0 < $unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) && ($unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) < $w_abs(j) && $w_mod(i, j) == $wrap($unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) - $w_abs(j))) || -$w_abs(j) < $unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) && ($unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) < 0 && $w_mod(i, j) == $wrap($unwrap($w_modL(k, j)) + $unwrap($w_modL(l, j)) + $w_abs(j)))))
  }
  
  axiom $w_mod_mul_basic {
    (forall i: $Int, j: $Int :: { $w_mod($w_mul(i, j), j) } j != $wrap(0) ==> $w_mod($w_mul(i, j), j) == $wrap(0))
  }
  
  axiom $w_mod_mul_mod_noop {
    (forall i: $Int, j: $Int, k: $Int :: { $w_mod($w_mulI(i, k), j) } j != $wrap(0) ==> $w_mod($w_mulI(i, k), j) == $w_modL($w_mulL($w_modL(i, j), k), j) && ($w_mod($w_mulI(i, k), j) == $w_modL($w_mulL(i, $w_modL(k, j)), j) && $w_mod($w_mulI(i, k), j) == $w_modL($w_mulL($w_modL(i, j), $w_modL(k, j)), j)))
  }
  
  axiom $w_mod_mul_vanish {
    (forall i: $Int, j: $Int, k: $Int :: { $w_mod(i, j),$w_mulI(k, j) } j != $wrap(0) ==> $w_mod(i, j) == $w_modL($wrap($unwrap($w_mulL(k, j)) + $unwrap(i)), j))
  }
  
  axiom $w_div_div_down {
    (forall i: $Int, j: $Int :: { $w_div(i, j) } $unwrap(j) != 0 ==> $w_div(i, j) == ($unwrap(i) >= 0 ? $w_div_down(i, j) : $wrap(-$unwrap($w_div_down($wrap(-$unwrap(i)), j)))))
  }
  
  axiom $w_div_down_div_nat {
    (forall i: $Int, j: $Int :: { $w_div_down(i, j) } $w_div_down(i, j) == ($unwrap(j) >= 0 ? $w_div_nat(i, j) : $wrap(-$unwrap($w_div_nat(i, $wrap(-$unwrap(j)))))))
  }
  
  axiom $w_div_nat_limited {
    (forall i: $Int, j: $Int :: { $w_div_nat(i, j) } $w_div_nat(i, j) == $w_div_natL(i, j))
  }
  
  axiom $w_div_nat_neutral {
    (forall i: $Int, j: $Int :: { $w_div_nat(i, j) } $unwrap(j) == 1 || $unwrap(i) == 0 ==> $w_div_nat(i, j) == i)
  }
  
  axiom $w_div_nat_self {
    (forall i: $Int :: { $w_div_nat(i, i) } $unwrap(i) > 0 ==> $w_div_nat(i, i) == $wrap(1))
  }
  
  axiom $w_div_nat_small {
    (forall i: $Int, j: $Int :: { $w_div_nat(i, j) } $unwrap(i) >= 0 && $unwrap(j) > 0 ==> $unwrap(i) < $unwrap(j) == ($w_div_nat(i, j) == $wrap(0)))
  }
  
  axiom $w_div_nat_dividend_add {
    (forall i: $Int, j: $Int, k: $Int, l: $Int :: { $w_div_nat(i, j),$w_div_nat(k, j),$w_div_nat(l, j) } $unwrap(i) >= 0 && ($unwrap(j) > 0 && ($unwrap(k) >= 0 && $unwrap(l) >= 0)) ==> $unwrap(i) == $unwrap(k) + $unwrap(l) ==> 0 <= $unwrap($w_mod(k, j)) + $unwrap($w_mod(l, j)) && ($unwrap($w_mod(k, j)) + $unwrap($w_mod(l, j)) < $unwrap(j) && $w_div_nat(i, j) == $wrap($unwrap($w_div_natL(k, j)) + $unwrap($w_div_natL(l, j)))) || $unwrap(j) <= $unwrap($w_mod(k, j)) + $unwrap($w_mod(l, j)) && ($unwrap($w_mod(k, j)) + $unwrap($w_mod(l, j)) < 2 * $unwrap(j) && $w_div_nat(i, j) == $wrap($unwrap($w_div_natL(k, j)) + $unwrap($w_div_natL(l, j)) + 1)))
  }
  
  axiom $w_div_nat_ordered_by_dividend {
    (forall i: $Int, j: $Int, k: $Int :: { $w_div_nat(i, j),$w_div_nat(k, j) } $unwrap(i) >= 0 && ($unwrap(j) > 0 && $unwrap(k) >= 0) ==> $unwrap(i) <= $unwrap(k) ==> $unwrap($w_div_nat(i, j)) <= $unwrap($w_div_natL(k, j)))
  }
  
  axiom $w_div_nat_ordered_by_divisor {
    (forall i: $Int, j: $Int, k: $Int :: { $w_div_nat(i, j),$w_div_nat(i, k) } $unwrap(i) >= 0 && ($unwrap(j) > 0 && $unwrap(k) > 0) ==> $unwrap(j) <= $unwrap(k) ==> $unwrap($w_div_nat(i, j)) >= $unwrap($w_div_natL(i, k)))
  }
  
  axiom $w_div_nat_decrease {
    (forall i: $Int, j: $Int :: { $w_div_nat(i, j) } $unwrap(i) > 0 && $unwrap(j) > 1 ==> $unwrap($w_div_nat(i, j)) < $unwrap(i))
  }
  
  axiom $w_div_nat_nonincrease {
    (forall i: $Int, j: $Int :: { $w_div_nat(i, j) } $unwrap(i) >= 0 && $unwrap(j) > 0 ==> $unwrap($w_div_nat(i, j)) <= $unwrap(i))
  }
  
  axiom $w_div_mul {
    (forall i: $Int, j: $Int :: { $w_div($w_mulI(i, j), j) } $unwrap(j) != 0 ==> $w_div($w_mulI(i, j), j) == i)
  }
  
  axiom $w_div_sign {
    (forall i: $Int, j: $Int :: { $w_div(i, j) } $unwrap(j) != 0 ==> $sign($unwrap($w_div(i, j))) == $sign($unwrap(i)) * $sign($unwrap(j)) || $sign($unwrap($w_div(i, j))) == 0)
  }
  
  axiom $w_div_mod_mul {
    (forall i: $Int, j: $Int :: { $w_div(i, j),$w_mod(i, j) } $unwrap(j) != 0 ==> $unwrap(i) == $unwrap($w_mulI(j, $w_div(i, j))) + $unwrap($w_mod(i, j)))
  }
}

domain $Array[$E] {
  
  function $array_init($e: $E, $c: Int): Seq[$E]
  
  axiom $array_init_len_ax {
    (forall $e: $E, $c: Int :: { ($array_init($e, $c): Seq[$E]) } |($array_init($e, $c): Seq[$E])| == $c)
  }
  
  axiom $array_init_val_ax {
    (forall $e: $E, $c: Int, $i: Int :: { ($array_init($e, $c): Seq[$E])[$i] } 0 <= $i && $i < $c ==> ($array_init($e, $c): Seq[$E])[$i] == $e)
  }
}

domain $Map[$K, $V] {
  
  function $map_init($v: $V): $Map[$K, $V]
  
  function $map_eq($m: $Map[$K, $V], $n: $Map[$K, $V]): Bool
  
  function $map_get($m: $Map[$K, $V], $k: $K): $V
  
  function $map_set($m: $Map[$K, $V], $k: $K, $v: $V): $Map[$K, $V]
  
  axiom $map_init_ax {
    (forall $v: $V, $k: $K :: { ($map_get(($map_init($v): $Map[$K, $V]), $k): $V) } ($map_get(($map_init($v): $Map[$K, $V]), $k): $V) == $v)
  }
  
  axiom $map_eq_ax {
    (forall $m: $Map[$K, $V], $n: $Map[$K, $V] :: { ($map_eq($m, $n): Bool) } ($map_eq($m, $n): Bool) == ($m == $n) && ($map_eq($m, $n): Bool) == (forall $k: $K :: { ($map_get($m, $k): $V),($map_get($n, $k): $V) } ($map_get($m, $k): $V) == ($map_get($n, $k): $V)))
  }
  
  axiom $map_set_ax {
    (forall $m: $Map[$K, $V], $k: $K, $v: $V, $kk: $K :: { ($map_get(($map_set($m, $k, $v): $Map[$K, $V]), $kk): $V) } ($map_get(($map_set($m, $k, $v): $Map[$K, $V]), $kk): $V) == ($k == $kk ? $v : ($map_get($m, $kk): $V)))
  }
}

domain $MapInt[$K] {
  
  function $map_sum($m: $Map[$K, Int]): Int
  
  axiom $map_sum_init_ax {
    ($map_sum(($map_init(0): $Map[Int, Int])): Int) == 0
  }
  
  axiom $map_sum_set_ax {
    (forall $m: $Map[$K, Int], $k: $K, $v: Int :: { ($map_sum(($map_set($m, $k, $v): $Map[$K, Int])): Int) } ($map_sum(($map_set($m, $k, $v): $Map[$K, Int])): Int) == ($map_sum($m): Int) - ($map_get($m, $k): Int) + $v)
  }
}

domain $Struct {
  
  function $struct_loc($s: $Struct, $m: Int): Int
}

domain $StructOps[$T] {
  
  function $struct_get($l: Int): $T
  
  function $struct_set($s: $Struct, $m: Int, $t: $T): $Struct
  
  axiom $get_set_0_ax {
    (forall $s: $Struct, $m: Int, $t: $T :: { $struct_loc(($struct_set($s, $m, $t): $Struct), $m) } ($struct_get($struct_loc(($struct_set($s, $m, $t): $Struct), $m)): $T) == $t)
  }
  
  axiom $get_set_1_ax {
    (forall $s: $Struct, $m: Int, $n: Int, $t: $T :: { $struct_loc(($struct_set($s, $n, $t): $Struct), $m) } $m != $n ==> $struct_loc($s, $m) == $struct_loc(($struct_set($s, $n, $t): $Struct), $m))
  }
}

domain $Convert {
  
  function $bytes32_to_signed_int($bb: Seq[Int]): Int
  
  function $bytes32_to_unsigned_int($bb: Seq[Int]): Int
  
  function $signed_int_to_bytes32($i: Int): Seq[Int]
  
  function $unsigned_int_to_bytes32($i: Int): Seq[Int]
  
  function $pad32($bb: Seq[Int]): Seq[Int]
  
  axiom $bytes32_to_signed_int_ax {
    (forall $bb: Seq[Int] :: { $bytes32_to_signed_int($bb) } |$bb| <= 32 ==> -57896044618658097711785492504343953926634992332820282019728792003956564819968 <= $bytes32_to_signed_int($bb) && $bytes32_to_signed_int($bb) <= 57896044618658097711785492504343953926634992332820282019728792003956564819967)
  }
  
  axiom $bytes32_to_unsigned_int_ax {
    (forall $bb: Seq[Int] :: { $bytes32_to_unsigned_int($bb) } |$bb| <= 32 ==> 0 <= $bytes32_to_unsigned_int($bb) && $bytes32_to_unsigned_int($bb) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  }
  
  axiom $signed_int_to_bytes32_ax {
    (forall $i: Int :: { $signed_int_to_bytes32($i) } -57896044618658097711785492504343953926634992332820282019728792003956564819968 <= $i && $i <= 57896044618658097711785492504343953926634992332820282019728792003956564819967 ==> |$signed_int_to_bytes32($i)| == 32)
  }
  
  axiom $unsigned_int_to_bytes32_ax {
    (forall $i: Int :: { $unsigned_int_to_bytes32($i) } -57896044618658097711785492504343953926634992332820282019728792003956564819968 <= $i && $i <= 57896044618658097711785492504343953926634992332820282019728792003956564819967 ==> |$unsigned_int_to_bytes32($i)| == 32)
  }
  
  axiom $pad32_len_ax {
    (forall $bb: Seq[Int] :: { $pad32($bb) } |$pad32($bb)| == 32)
  }
  
  axiom $pad32_vals_ax {
    (forall $bb: Seq[Int], $i: Int :: { $pad32($bb)[$i] } (let diff == (32 - |$bb|) in 0 <= $i && $i < |$pad32($bb)| ==> $pad32($bb)[$i] == ($i < diff ? 0 : $bb[$i - diff])))
  }
}

domain $Range {
  
  function $range($f: Int, $t: Int): Seq[Int]
  
  axiom $range_len_ax {
    (forall $f: Int, $t: Int :: { |$range($f, $t)| } |$range($f, $t)| == $t - $f)
  }
  
  axiom $range_lookup_ax {
    (forall $f: Int, $t: Int, $i: Int :: { $range($f, $t)[$i] } 0 <= $i && $i < |$range($f, $t)| ==> $range($f, $t)[$i] == $f + $i)
  }
}

domain $Blockchain {
  
  function $blockhash($no: Int): Seq[Int]
  
  function $method_id($bb: Seq[Int], $l: Int): Seq[Int]
  
  function $keccak256($s: Seq[Int]): Seq[Int]
  
  function $sha256($s: Seq[Int]): Seq[Int]
  
  function $ecrecover($s: Seq[Int], v: Int, r: Int, s: Int): Int
  
  function $ecadd($p: Seq[Int], $q: Seq[Int]): Seq[Int]
  
  function $ecmul($p: Seq[Int], $s: Int): Seq[Int]
  
  axiom $blockhash_ax {
    (forall $no: Int :: { $blockhash($no) } |$blockhash($no)| == 32)
  }
  
  axiom $method_id_ax {
    (forall $bb: Seq[Int], $l: Int :: { $method_id($bb, $l) } |$method_id($bb, $l)| == $l)
  }
  
  axiom $keccak256_ax {
    (forall $s: Seq[Int] :: { $keccak256($s) } |$keccak256($s)| == 32)
  }
  
  axiom $sha256_ax {
    (forall $s: Seq[Int] :: { $sha256($s) } |$sha256($s)| == 32)
  }
  
  axiom $ecadd_ax {
    (forall $p: Seq[Int], $q: Seq[Int] :: { $ecadd($p, $q) } |$ecadd($p, $q)| == 2)
  }
  
  axiom $ecmul_ax {
    (forall $p: Seq[Int], $s: Int :: { $ecmul($p, $s) } |$ecmul($p, $s)| == 2)
  }
}

domain $Contract {
  
  function $self_address(): Int
  
  function $implements($a: Int, $i: Int): Bool
  
  axiom $self_address_ax {
    $self_address() != 0
  }
}

domain s$struct$self {
  
  function s$struct$self$init($arg_0: Seq[Int], $arg_1: Seq[Int], $arg_2: Int, $arg_3: $Map[Int, Int], $arg_4: $Map[Int, $Map[Int, Int]], $arg_5: Int, $arg_6: Int, $arg_7: Int, $arg_8: Int, $arg_9: Bool, $arg_10: $Map[Int, Int], $arg_11: $Map[Int, Int], $arg_12: Bool): $Struct
  
  function s$struct$self$eq($l: $Struct, $r: $Struct): Bool
  
  axiom s$struct$self$init$ax {
    (forall $arg_0: Seq[Int], $arg_1: Seq[Int], $arg_2: Int, $arg_3: $Map[Int, Int], $arg_4: $Map[Int, $Map[Int, Int]], $arg_5: Int, $arg_6: Int, $arg_7: Int, $arg_8: Int, $arg_9: Bool, $arg_10: $Map[Int, Int], $arg_11: $Map[Int, Int], $arg_12: Bool :: { s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12) } ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), -1)): Int) == 9122519725869122497593506884710 && ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), 0)): Seq[Int]) == $arg_0 && ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), 1)): Seq[Int]) == $arg_1 && ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), 2)): Int) == $arg_2 && ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), 3)): $Map[Int, Int]) == $arg_3 && ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), 4)): $Map[Int, $Map[Int, Int]]) == $arg_4 && ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), 5)): Int) == $arg_5 && ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), 6)): Int) == $arg_6 && ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), 7)): Int) == $arg_7 && ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), 8)): Int) == $arg_8 && ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), 9)): Bool) == $arg_9 && ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), 10)): $Map[Int, Int]) == $arg_10 && ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), 11)): $Map[Int, Int]) == $arg_11 && ($struct_get($struct_loc(s$struct$self$init($arg_0, $arg_1, $arg_2, $arg_3, $arg_4, $arg_5, $arg_6, $arg_7, $arg_8, $arg_9, $arg_10, $arg_11, $arg_12), 12)): Bool) == $arg_12)
  }
  
  axiom s$struct$self$eq$ax {
    (forall $l: $Struct, $r: $Struct :: { s$struct$self$eq($l, $r) } s$struct$self$eq($l, $r) == ($l == $r) && s$struct$self$eq($l, $r) == (($struct_get($struct_loc($l, -1)): Int) == ($struct_get($struct_loc($r, -1)): Int) && ($struct_get($struct_loc($l, 0)): Seq[Int]) == ($struct_get($struct_loc($r, 0)): Seq[Int]) && ($struct_get($struct_loc($l, 1)): Seq[Int]) == ($struct_get($struct_loc($r, 1)): Seq[Int]) && ($struct_get($struct_loc($l, 2)): Int) == ($struct_get($struct_loc($r, 2)): Int) && ($map_eq(($struct_get($struct_loc($l, 3)): $Map[Int, Int]), ($struct_get($struct_loc($r, 3)): $Map[Int, Int])): Bool) && ($map_eq(($struct_get($struct_loc($l, 4)): $Map[Int, $Map[Int, Int]]), ($struct_get($struct_loc($r, 4)): $Map[Int, $Map[Int, Int]])): Bool) && ($struct_get($struct_loc($l, 5)): Int) == ($struct_get($struct_loc($r, 5)): Int) && ($struct_get($struct_loc($l, 6)): Int) == ($struct_get($struct_loc($r, 6)): Int) && ($struct_get($struct_loc($l, 7)): Int) == ($struct_get($struct_loc($r, 7)): Int) && ($struct_get($struct_loc($l, 8)): Int) == ($struct_get($struct_loc($r, 8)): Int) && ($struct_get($struct_loc($l, 9)): Bool) == ($struct_get($struct_loc($r, 9)): Bool) && ($map_eq(($struct_get($struct_loc($l, 10)): $Map[Int, Int]), ($struct_get($struct_loc($r, 10)): $Map[Int, Int])): Bool) && ($map_eq(($struct_get($struct_loc($l, 11)): $Map[Int, Int]), ($struct_get($struct_loc($r, 11)): $Map[Int, Int])): Bool) && ($struct_get($struct_loc($l, 12)): Bool) == ($struct_get($struct_loc($r, 12)): Bool)))
  }
}

domain s$struct$$offer {
  
  function s$struct$$offer$init($arg_0: Int, $arg_1: Int, $arg_2: Int, $arg_3: Int): $Struct
  
  function s$struct$$offer$eq($l: $Struct, $r: $Struct): Bool
  
  axiom s$struct$$offer$init$ax {
    (forall $arg_0: Int, $arg_1: Int, $arg_2: Int, $arg_3: Int :: { s$struct$$offer$init($arg_0, $arg_1, $arg_2, $arg_3) } ($struct_get($struct_loc(s$struct$$offer$init($arg_0, $arg_1, $arg_2, $arg_3), -1)): Int) == 597853452754558812002201248626795890 && ($struct_get($struct_loc(s$struct$$offer$init($arg_0, $arg_1, $arg_2, $arg_3), 0)): Int) == $arg_0 && ($struct_get($struct_loc(s$struct$$offer$init($arg_0, $arg_1, $arg_2, $arg_3), 1)): Int) == $arg_1 && ($struct_get($struct_loc(s$struct$$offer$init($arg_0, $arg_1, $arg_2, $arg_3), 2)): Int) == $arg_2 && ($struct_get($struct_loc(s$struct$$offer$init($arg_0, $arg_1, $arg_2, $arg_3), 3)): Int) == $arg_3)
  }
  
  axiom s$struct$$offer$eq$ax {
    (forall $l: $Struct, $r: $Struct :: { s$struct$$offer$eq($l, $r) } s$struct$$offer$eq($l, $r) == ($l == $r) && s$struct$$offer$eq($l, $r) == (($struct_get($struct_loc($l, -1)): Int) == ($struct_get($struct_loc($r, -1)): Int) && ($struct_get($struct_loc($l, 0)): Int) == ($struct_get($struct_loc($r, 0)): Int) && ($struct_get($struct_loc($l, 1)): Int) == ($struct_get($struct_loc($r, 1)): Int) && ($struct_get($struct_loc($l, 2)): Int) == ($struct_get($struct_loc($r, 2)): Int) && ($struct_get($struct_loc($l, 3)): Int) == ($struct_get($struct_loc($r, 3)): Int)))
  }
}

domain s$resource$token {
  
  function s$resource$token$init(): $Struct
  
  function s$resource$token$eq($l: $Struct, $r: $Struct): Bool
  
  axiom s$resource$token$init$ax {
    ($struct_get($struct_loc(s$resource$token$init(), -1)): Int) == 153050462434637330932092734492704990574
  }
  
  axiom s$resource$token$eq$ax {
    (forall $l: $Struct, $r: $Struct :: { s$resource$token$eq($l, $r) } s$resource$token$eq($l, $r) == ($l == $r) && s$resource$token$eq($l, $r) == (($struct_get($struct_loc($l, -1)): Int) == ($struct_get($struct_loc($r, -1)): Int)))
  }
}

domain s$resource$nothing {
  
  function s$resource$nothing$init(): $Struct
  
  function s$resource$nothing$eq($l: $Struct, $r: $Struct): Bool
  
  axiom s$resource$nothing$init$ax {
    ($struct_get($struct_loc(s$resource$nothing$init(), -1)): Int) == 10030315106116392119965629446025103106731623
  }
  
  axiom s$resource$nothing$eq$ax {
    (forall $l: $Struct, $r: $Struct :: { s$resource$nothing$eq($l, $r) } s$resource$nothing$eq($l, $r) == ($l == $r) && s$resource$nothing$eq($l, $r) == (($struct_get($struct_loc($l, -1)): Int) == ($struct_get($struct_loc($r, -1)): Int)))
  }
}

domain s$resource$wei {
  
  function s$resource$wei$init(): $Struct
  
  function s$resource$wei$eq($l: $Struct, $r: $Struct): Bool
  
  axiom s$resource$wei$init$ax {
    ($struct_get($struct_loc(s$resource$wei$init(), -1)): Int) == 2335364722208211226380809547507049
  }
  
  axiom s$resource$wei$eq$ax {
    (forall $l: $Struct, $r: $Struct :: { s$resource$wei$eq($l, $r) } s$resource$wei$eq($l, $r) == ($l == $r) && s$resource$wei$eq($l, $r) == (($struct_get($struct_loc($l, -1)): Int) == ($struct_get($struct_loc($r, -1)): Int)))
  }
}

domain s$resource$$creator {
  
  function s$resource$$creator$init($arg_0: $Struct): $Struct
  
  function s$resource$$creator$eq($l: $Struct, $r: $Struct): Bool
  
  axiom s$resource$$creator$init$ax {
    (forall $arg_0: $Struct :: { s$resource$$creator$init($arg_0) } ($struct_get($struct_loc(s$resource$$creator$init($arg_0), -1)): Int) == 2567760667165796382711201132846784524754120562 && ($struct_get($struct_loc(s$resource$$creator$init($arg_0), 0)): $Struct) == $arg_0)
  }
  
  axiom s$resource$$creator$eq$ax {
    (forall $l: $Struct, $r: $Struct :: { s$resource$$creator$eq($l, $r) } s$resource$$creator$eq($l, $r) == ($l == $r) && s$resource$$creator$eq($l, $r) == (($struct_get($struct_loc($l, -1)): Int) == ($struct_get($struct_loc($r, -1)): Int) && ($struct_get($struct_loc($l, 0)): $Struct) == ($struct_get($struct_loc($r, 0)): $Struct)))
  }
}

domain $Implements {
  
  axiom $Implements$ax {
    true
  }
}

function $range_sum($x: Int, $y: Int): Int
  requires $x <= $y
{
  (let $x_ge_0 == ($x >= 0) in (let $y_ge_0 == ($y >= 0) in (let $x_exclusive == (($x_ge_0 ? ($x - 1) * $x / 2 : (-$x - 1) * -$x / 2)) in (let $y_exclusive == (($y_ge_0 ? ($y - 1) * $y / 2 : (-$y - 1) * -$y / 2)) in ($x_ge_0 && $y_ge_0 ? $y_exclusive - $x_exclusive : (!$x_ge_0 && $y_ge_0 ? $y_exclusive - $x_exclusive + $x : $y_exclusive - $y - $x_exclusive + $x))))))
}

function $pure$success_get(x: $Struct): Bool
{
  ($struct_get($struct_loc(x, 0)): Bool)
}

function $pure$return_get(x: $Struct): Int
  requires $pure$success_get(x)
{
  $struct_loc(x, 1)
}

predicate $failed($address: Int) 

predicate $failed_0($address: Int) 

predicate $allocation($resource: $Struct, $address: Int) 

predicate $allocation_0($resource: $Struct, $address: Int) 

predicate $offer($from_resource: $Struct, $to_resource: $Struct, $from_amount: Int, $to_amount: Int, $from_address: Int, $to_address: Int) 

predicate $offer_0($from_resource: $Struct, $to_resource: $Struct, $from_amount: Int, $to_amount: Int, $from_address: Int, $to_address: Int) 

predicate $trust($address: Int, $by_address: Int) 

predicate $trust_0($address: Int, $by_address: Int) 

predicate $performs$create($resource: $Struct, $from_address: Int, $to_address: Int, $amount: Int) 

predicate $performs$create_0($resource: $Struct, $from_address: Int, $to_address: Int, $amount: Int) 

predicate $performs$destroy($resource: $Struct, $from_address: Int, $amount: Int) 

predicate $performs$destroy_0($resource: $Struct, $from_address: Int, $amount: Int) 

predicate $performs$reallocate($resource: $Struct, $from_address: Int, $to_address: Int, $amount: Int) 

predicate $performs$reallocate_0($resource: $Struct, $from_address: Int, $to_address: Int, $amount: Int) 

predicate $performs$offer($from_resource: $Struct, $to_resource: $Struct, $from_amount: Int, $to_amount: Int, $from_address: Int, $to_address: Int, $times: Int) 

predicate $performs$offer_0($from_resource: $Struct, $to_resource: $Struct, $from_amount: Int, $to_amount: Int, $from_address: Int, $to_address: Int, $times: Int) 

predicate $performs$revoke($from_resource: $Struct, $to_resource: $Struct, $from_amount: Int, $to_amount: Int, $from_address: Int, $to_adress: Int) 

predicate $performs$revoke_0($from_resource: $Struct, $to_resource: $Struct, $from_amount: Int, $to_amount: Int, $from_address: Int, $to_adress: Int) 

predicate $performs$trust($address: Int, $by_address: Int, $value: Bool) 

predicate $performs$trust_0($address: Int, $by_address: Int, $value: Bool) 

predicate e$Transfer($arg0: Int, $arg1: Int, $arg2: Int) 

predicate e$Transfer_0($arg0: Int, $arg1: Int, $arg2: Int) 

predicate e$Approval($arg0: Int, $arg1: Int, $arg2: Int) 

predicate e$Approval_0($arg0: Int, $arg1: Int, $arg2: Int) 

predicate $accessible$__init__($tag: Int, $to: Int, $amount: Int, $arg0: Seq[Int], $arg1: Seq[Int], $arg2: Int, $arg3: Int) 

predicate $accessible$__init___0($tag: Int, $to: Int, $amount: Int, $arg0: Seq[Int], $arg1: Seq[Int], $arg2: Int, $arg3: Int) 

predicate $accessible$totalSupply($tag: Int, $to: Int, $amount: Int) 

predicate $accessible$totalSupply_0($tag: Int, $to: Int, $amount: Int) 

predicate $accessible$allowance($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int) 

predicate $accessible$allowance_0($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int) 

predicate $accessible$transfer($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int) 

predicate $accessible$transfer_0($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int) 

predicate $accessible$transferFrom($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int, $arg2: Int) 

predicate $accessible$transferFrom_0($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int, $arg2: Int) 

predicate $accessible$approve($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int) 

predicate $accessible$approve_0($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int) 

predicate $accessible$mint($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int) 

predicate $accessible$mint_0($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int) 

predicate $accessible$_burn($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int) 

predicate $accessible$_burn_0($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int) 

predicate $accessible$burn($tag: Int, $to: Int, $amount: Int, $arg0: Int) 

predicate $accessible$burn_0($tag: Int, $to: Int, $amount: Int, $arg0: Int) 

predicate $accessible$burnFrom($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int) 

predicate $accessible$burnFrom_0($tag: Int, $to: Int, $amount: Int, $arg0: Int, $arg1: Int) 

method $transitivity_check()
{
  var $self$0: $Struct
  var $$contracts$0: $Map[Int, $Struct]
  var $$allocated$0: $Map[$Struct, $Map[Int, Int]]
  var $$offered$0: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $$trusted$0: $Map[Int, $Map[Int, Bool]]
  var $self$1: $Struct
  var $$contracts$1: $Map[Int, $Struct]
  var $$allocated$1: $Map[$Struct, $Map[Int, Int]]
  var $$offered$1: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $$trusted$1: $Map[Int, $Map[Int, Bool]]
  var $self$2: $Struct
  var $$contracts$2: $Map[Int, $Struct]
  var $$allocated$2: $Map[$Struct, $Map[Int, Int]]
  var $$offered$2: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $$trusted$2: $Map[Int, $Map[Int, Bool]]
  var block: $Struct
  var $post: Bool
  inhale |($struct_get($struct_loc($self$0, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc($self$0, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc($self$0, 2)): Int) && ($struct_get($struct_loc($self$0, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc($self$0, 5)): Int) && ($struct_get($struct_loc($self$0, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc($self$0, 6)): Int) && ($struct_get($struct_loc($self$0, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc($self$0, 7)): Int) && ($struct_get($struct_loc($self$0, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$0, 8)): Int) && ($struct_get($struct_loc($self$0, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc($self$0, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($$allocated$0, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($$allocated$0, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($$allocated$0, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($$allocated$0, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($$allocated$0, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($$allocated$0, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($$allocated$0, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($$allocated$0, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  inhale |($struct_get($struct_loc($self$1, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc($self$1, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc($self$1, 2)): Int) && ($struct_get($struct_loc($self$1, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc($self$1, 5)): Int) && ($struct_get($struct_loc($self$1, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc($self$1, 6)): Int) && ($struct_get($struct_loc($self$1, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc($self$1, 7)): Int) && ($struct_get($struct_loc($self$1, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$1, 8)): Int) && ($struct_get($struct_loc($self$1, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc($self$1, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($$allocated$1, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($$allocated$1, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($$allocated$1, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($$allocated$1, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($$allocated$1, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($$allocated$1, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($$allocated$1, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($$allocated$1, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  inhale |($struct_get($struct_loc($self$2, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc($self$2, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc($self$2, 2)): Int) && ($struct_get($struct_loc($self$2, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc($self$2, 5)): Int) && ($struct_get($struct_loc($self$2, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc($self$2, 6)): Int) && ($struct_get($struct_loc($self$2, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc($self$2, 7)): Int) && ($struct_get($struct_loc($self$2, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$2, 8)): Int) && ($struct_get($struct_loc($self$2, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$2, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc($self$2, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($$allocated$2, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($$allocated$2, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($$allocated$2, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($$allocated$2, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($$allocated$2, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($$allocated$2, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($$allocated$2, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($$allocated$2, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($$offered$2, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($$offered$2, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($$offered$2, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($$offered$2, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($$offered$2, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($$offered$2, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($$offered$2, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($$offered$2, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($$offered$2, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($$offered$2, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) && ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) && ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) && ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
  inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) && ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc($self$0, 7)): Int) >= ($map_sum(($map_get($$allocated$0, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($struct_get($struct_loc($self$0, 6)): Int) == ($struct_get($struct_loc($self$0, 6)): Int)
  inhale ($struct_get($struct_loc($self$0, 5)): Int) == ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get($$allocated$0, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($$allocated$0, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get($$allocated$0, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get($$allocated$0, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($$allocated$0, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc($self$0, 6)): Int) ? 1 : 0))
  inhale (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($$offered$0, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc($self$1, 7)): Int) >= ($map_sum(($map_get($$allocated$1, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($struct_get($struct_loc($self$1, 6)): Int) == ($struct_get($struct_loc($self$0, 6)): Int)
  inhale ($struct_get($struct_loc($self$1, 5)): Int) == ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get($$allocated$1, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($$allocated$1, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get($$allocated$1, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get($$allocated$1, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($$allocated$1, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc($self$1, 6)): Int) ? 1 : 0))
  inhale (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($$offered$1, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc($self$2, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc($self$2, 7)): Int) >= ($map_sum(($map_get($$allocated$2, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($struct_get($struct_loc($self$2, 6)): Int) == ($struct_get($struct_loc($self$1, 6)): Int)
  inhale ($struct_get($struct_loc($self$2, 5)): Int) == ($map_sum(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get($$allocated$2, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($$allocated$2, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get($$allocated$2, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get($$allocated$2, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($$allocated$2, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc($self$2, 6)): Int) ? 1 : 0))
  inhale (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($$offered$2, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  assert ($struct_get($struct_loc($self$2, 6)): Int) == ($struct_get($struct_loc($self$0, 6)): Int)
  assert ($struct_get($struct_loc($self$2, 5)): Int) == ($map_sum(($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Int)
  assert ($map_sum(($map_get($$allocated$2, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($$allocated$2, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  assert ($map_eq(($map_get($$allocated$2, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc($self$2, 3)): $Map[Int, Int])): Bool)
  assert (forall q$a: Int :: { ($map_get(($map_get($$allocated$2, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($$allocated$2, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc($self$2, 6)): Int) ? 1 : 0))
  assert (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($self$2, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($$offered$2, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
}

method $reflexivity_check()
{
  var $self$0: $Struct
  var $$contracts$0: $Map[Int, $Struct]
  var $$allocated$0: $Map[$Struct, $Map[Int, Int]]
  var $$offered$0: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $$trusted$0: $Map[Int, $Map[Int, Bool]]
  var $self$1: $Struct
  var $$contracts$1: $Map[Int, $Struct]
  var $$allocated$1: $Map[$Struct, $Map[Int, Int]]
  var $$offered$1: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $$trusted$1: $Map[Int, $Map[Int, Bool]]
  var block: $Struct
  var $post: Bool
  inhale |($struct_get($struct_loc($self$0, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc($self$0, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc($self$0, 2)): Int) && ($struct_get($struct_loc($self$0, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$0, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc($self$0, 5)): Int) && ($struct_get($struct_loc($self$0, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc($self$0, 6)): Int) && ($struct_get($struct_loc($self$0, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc($self$0, 7)): Int) && ($struct_get($struct_loc($self$0, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$0, 8)): Int) && ($struct_get($struct_loc($self$0, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$0, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc($self$0, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($$allocated$0, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($$allocated$0, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($$allocated$0, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($$allocated$0, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($$allocated$0, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($$allocated$0, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($$allocated$0, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($$allocated$0, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($$offered$0, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  inhale |($struct_get($struct_loc($self$1, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc($self$1, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc($self$1, 2)): Int) && ($struct_get($struct_loc($self$1, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc($self$1, 5)): Int) && ($struct_get($struct_loc($self$1, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc($self$1, 6)): Int) && ($struct_get($struct_loc($self$1, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc($self$1, 7)): Int) && ($struct_get($struct_loc($self$1, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($self$1, 8)): Int) && ($struct_get($struct_loc($self$1, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($self$1, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc($self$1, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($$allocated$1, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($$allocated$1, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($$allocated$1, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($$allocated$1, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($$allocated$1, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($$allocated$1, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($$allocated$1, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($$allocated$1, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($$offered$1, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) && ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) && ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) && ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
  inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) && ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc($self$1, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc($self$0, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc($self$1, 7)): Int) >= ($map_sum(($map_get($$allocated$1, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($struct_get($struct_loc($self$1, 6)): Int) == ($struct_get($struct_loc($self$0, 6)): Int)
  inhale ($struct_get($struct_loc($self$1, 5)): Int) == ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get($$allocated$1, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($$allocated$1, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get($$allocated$1, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get($$allocated$1, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($$allocated$1, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc($self$1, 6)): Int) ? 1 : 0))
  inhale (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($$offered$1, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  assert ($struct_get($struct_loc($self$1, 6)): Int) == ($struct_get($struct_loc($self$1, 6)): Int)
  assert ($struct_get($struct_loc($self$1, 5)): Int) == ($map_sum(($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Int)
  assert ($map_sum(($map_get($$allocated$1, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($$allocated$1, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  assert ($map_eq(($map_get($$allocated$1, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc($self$1, 3)): $Map[Int, Int])): Bool)
  assert (forall q$a: Int :: { ($map_get(($map_get($$allocated$1, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($$allocated$1, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc($self$1, 6)): Int) ? 1 : 0))
  assert (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($self$1, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($$offered$1, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
}

method $forced_ether_check()
{
  var self: $Struct
  var $contracts: $Map[Int, $Struct]
  var $allocated: $Map[$Struct, $Map[Int, Int]]
  var $offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $trusted: $Map[Int, $Map[Int, Bool]]
  var $pre_self: $Struct
  var $pre_$contracts: $Map[Int, $Struct]
  var $pre_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $pre_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $pre_$trusted: $Map[Int, $Map[Int, Bool]]
  var $post: Bool
  var $havoc: Int
  var block: $Struct
  inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) && ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) && ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) && ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) && ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int) && ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  inhale |($struct_get($struct_loc($pre_self, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc($pre_self, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc($pre_self, 2)): Int) && ($struct_get($struct_loc($pre_self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc($pre_self, 5)): Int) && ($struct_get($struct_loc($pre_self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc($pre_self, 6)): Int) && ($struct_get($struct_loc($pre_self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc($pre_self, 7)): Int) && ($struct_get($struct_loc($pre_self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc($pre_self, 8)): Int) && ($struct_get($struct_loc($pre_self, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc($pre_self, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc($pre_self, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc($pre_self, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($pre_$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($pre_$allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($pre_$allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($pre_$allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($pre_$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($pre_$allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($pre_$allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($pre_$allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($pre_$offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($pre_$offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($pre_$offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($pre_$offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($pre_$offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($pre_$offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($pre_$offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($pre_$offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($pre_$offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($pre_$offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) && ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) && ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) && ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
  inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) && ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
  inhale $havoc >= 0
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
  inhale ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Copy state
  $pre_$offered := $offered
  $pre_$allocated := $allocated
  $pre_self := self
  $pre_$trusted := $trusted
  $pre_$contracts := $contracts
  self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + $havoc): $Struct)
}

method f$__init__(l$_name: Seq[Int], l$_symbol: Seq[Int], l$_decimals: $Int, l$_supply: $Int) returns ($succ: Bool)
{
  var msg: $Struct
  var block: $Struct
  var chain: $Struct
  var tx: $Struct
  var self: $Struct
  var $contracts: $Map[Int, $Struct]
  var $allocated: $Map[$Struct, $Map[Int, Int]]
  var $offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $trusted: $Map[Int, $Map[Int, Bool]]
  var $old_self: $Struct
  var $old_$contracts: $Map[Int, $Struct]
  var $old_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $old_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $old_$trusted: $Map[Int, $Map[Int, Bool]]
  var $pre_self: $Struct
  var $pre_$contracts: $Map[Int, $Struct]
  var $pre_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $pre_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $pre_$trusted: $Map[Int, $Map[Int, Bool]]
  var $issued_self: $Struct
  var $issued_$contracts: $Map[Int, $Struct]
  var $issued_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $issued_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $issued_$trusted: $Map[Int, $Map[Int, Bool]]
  var $overflow: Bool
  var $first_public_state: Bool
  var l$havoc: Int
  var l$init_supply: $Int
  var $out_of_gas: Bool
  var l$havoc$1: Int
  var l$havoc$2: $Map[Int, $Struct]
  var l$$allocated: $Map[$Struct, $Map[Int, Int]]
  // Present state assumptions
  inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) && ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) && ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) && ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) && ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int) && ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  // Assume type assumptions for self address
  inhale 0 <= $self_address() && $self_address() <= 1461501637330902918203684832716283019655932542975
  // Assume type assumptions for arguments
  inhale |l$_name| <= 64
  inhale |l$_symbol| <= 32
  inhale 0 <= $unwrap(l$_decimals) && $unwrap(l$_decimals) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= $unwrap(l$_supply) && $unwrap(l$_supply) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  // Assume type assumptions for block
  inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) && ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) && ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) && ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
  inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) && ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
  // Assume type assumptions for msg
  inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) && ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) && ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) && ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
  inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
  // Copy state
  $pre_$offered := $offered
  $pre_$allocated := $allocated
  $pre_self := self
  $pre_$trusted := $trusted
  $pre_$contracts := $contracts
  // Copy state
  $old_$offered := $offered
  $old_$allocated := $allocated
  $old_self := self
  $old_$trusted := $trusted
  $old_$contracts := $contracts
  $succ := true
  $overflow := false
  $first_public_state := true
  self := s$struct$self$init(Seq[Int](), Seq[Int](), 0, ($map_init(0): $Map[Int, Int]), ($map_init(($map_init(0): $Map[Int, Int])): $Map[Int, $Map[Int, Int]]), 0, 0, 0, 0, false, ($map_init(0): $Map[Int, Int]), ($map_init(0): $Map[Int, Int]), false)
  $allocated := ($map_init(($map_init(0): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  $offered := ($map_init(($map_init(($map_init(0): $Map[$Struct, Int])): $Map[$Struct, $Map[$Struct, Int]])): $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]])
  $trusted := ($map_init(($map_init(false): $Map[Int, Bool])): $Map[Int, $Map[Int, Bool]])
  inhale l$havoc >= 0
  self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
  // Function is not payable
  inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
  // Function body
  if ($pow(10, $unwrap(l$_decimals)) < 0) {
    goto revert
  }
  if ($pow(10, $unwrap(l$_decimals)) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  if ($unwrap($w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))) < 0) {
    goto revert
  }
  if ($unwrap($w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  l$init_supply := $w_mul(l$_supply, $wrap($pow(10, $unwrap(l$_decimals))))
  self := ($struct_set(self, 0, l$_name): $Struct)
  self := ($struct_set(self, 1, l$_symbol): $Struct)
  self := ($struct_set(self, 2, $unwrap(l$_decimals)): $Struct)
  self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap(l$init_supply)): $Map[Int, Int])): $Struct)
  self := ($struct_set(self, 5, $unwrap(l$init_supply)): $Struct)
  // Create
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) + $unwrap(l$init_supply)): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  self := ($struct_set(self, 6, ($struct_get($struct_loc(msg, 0)): Int)): $Struct)
  // Create
  $allocated := ($map_set($allocated, s$resource$$creator$init(s$resource$token$init()), ($map_set(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) + 1): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  // Event: Transfer
  inhale acc(e$Transfer(0, ($struct_get($struct_loc(msg, 0)): Int), $unwrap(l$init_supply)), write)
  label return
  if ($out_of_gas) {
    goto revert
  }
  goto end
  label revert
  $succ := false
  // Copy state
  $offered := $pre_$offered
  $allocated := $pre_$allocated
  self := $pre_self
  $trusted := $pre_$trusted
  $contracts := $pre_$contracts
  // Copy state
  $old_$offered := $pre_$offered
  $old_$allocated := $pre_$allocated
  $old_self := $pre_self
  $old_$trusted := $pre_$trusted
  $old_$contracts := $pre_$contracts
  label end
  if ($first_public_state) {
    $old_self := self
    $old_$allocated := $allocated
    $old_$offered := $offered
    $old_$trusted := $trusted
  }
  // Assert checks
  if ($succ) {
    assert ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
  }
  inhale l$havoc$1 >= 0
  self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
  // Havoc state
  $contracts := l$havoc$2
  if ($first_public_state) {
    $old_self := self
    $old_$allocated := $allocated
    $old_$offered := $offered
    $old_$trusted := $trusted
  }
  // Assert Local State Invariants
  assert $succ ==> ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
  assert $succ ==> ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  assert $succ ==> ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  assert $succ ==> ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  assert $succ ==> (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert $succ ==> (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Assume type assumptions for fresh allocated
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get(l$$allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert $succ ==> (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int))
  assert $succ ==> (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int))
  assert $succ ==> (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int))
}

method f$totalSupply() returns ($succ: Bool, $res: Int)
{
  var msg: $Struct
  var block: $Struct
  var chain: $Struct
  var tx: $Struct
  var self: $Struct
  var $contracts: $Map[Int, $Struct]
  var $allocated: $Map[$Struct, $Map[Int, Int]]
  var $offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $trusted: $Map[Int, $Map[Int, Bool]]
  var $old_self: $Struct
  var $old_$contracts: $Map[Int, $Struct]
  var $old_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $old_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $old_$trusted: $Map[Int, $Map[Int, Bool]]
  var $pre_self: $Struct
  var $pre_$contracts: $Map[Int, $Struct]
  var $pre_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $pre_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $pre_$trusted: $Map[Int, $Map[Int, Bool]]
  var $issued_self: $Struct
  var $issued_$contracts: $Map[Int, $Struct]
  var $issued_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $issued_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $issued_$trusted: $Map[Int, $Map[Int, Bool]]
  var $overflow: Bool
  var $out_of_gas: Bool
  var l$havoc: Int
  var l$havoc$1: Int
  var l$havoc$2: $Map[Int, $Struct]
  var l$$allocated: $Map[$Struct, $Map[Int, Int]]
  // Present state assumptions
  inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) && ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) && ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) && ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) && ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int) && ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  // Assume type assumptions for self address
  inhale 0 <= $self_address() && $self_address() <= 1461501637330902918203684832716283019655932542975
  // Assume type assumptions for block
  inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) && ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) && ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) && ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
  inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) && ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
  // Assume type assumptions for msg
  inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) && ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) && ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) && ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
  inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
  // Assume invariants for self
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
  inhale ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Copy state
  $pre_$offered := $offered
  $pre_$allocated := $allocated
  $pre_self := self
  $pre_$trusted := $trusted
  $pre_$contracts := $contracts
  // Copy state
  $old_$offered := $offered
  $old_$allocated := $allocated
  $old_self := self
  $old_$trusted := $trusted
  $old_$contracts := $contracts
  $succ := true
  $overflow := false
  // Function is not payable
  inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
  // Function body
  $res := $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int)))
  goto return
  label return
  if ($out_of_gas) {
    goto revert
  }
  goto end
  label revert
  $succ := false
  $res := l$havoc
  // Copy state
  $offered := $pre_$offered
  $allocated := $pre_$allocated
  self := $pre_self
  $trusted := $pre_$trusted
  $contracts := $pre_$contracts
  // Copy state
  $old_$offered := $pre_$offered
  $old_$allocated := $pre_$allocated
  $old_self := $pre_self
  $old_$trusted := $pre_$trusted
  $old_$contracts := $pre_$contracts
  label end
  // Assert postconditions
  exhale $succ ==> $res == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  // Assert checks
  if ($succ) {
    assert ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
  } else {
    assert old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
  }
  inhale l$havoc$1 >= 0
  self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
  // Havoc state
  $contracts := l$havoc$2
  // Assert Local State Invariants
  assert ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
  assert ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  assert ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  assert ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  assert (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Assume type assumptions for fresh allocated
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get(l$$allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int))
}

method f$allowance(l$_owner: Int, l$_spender: Int) returns ($succ: Bool, $res: Int)
{
  var msg: $Struct
  var block: $Struct
  var chain: $Struct
  var tx: $Struct
  var self: $Struct
  var $contracts: $Map[Int, $Struct]
  var $allocated: $Map[$Struct, $Map[Int, Int]]
  var $offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $trusted: $Map[Int, $Map[Int, Bool]]
  var $old_self: $Struct
  var $old_$contracts: $Map[Int, $Struct]
  var $old_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $old_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $old_$trusted: $Map[Int, $Map[Int, Bool]]
  var $pre_self: $Struct
  var $pre_$contracts: $Map[Int, $Struct]
  var $pre_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $pre_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $pre_$trusted: $Map[Int, $Map[Int, Bool]]
  var $issued_self: $Struct
  var $issued_$contracts: $Map[Int, $Struct]
  var $issued_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $issued_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $issued_$trusted: $Map[Int, $Map[Int, Bool]]
  var $overflow: Bool
  var $out_of_gas: Bool
  var l$havoc: Int
  var l$havoc$1: Int
  var l$havoc$2: $Map[Int, $Struct]
  var l$$allocated: $Map[$Struct, $Map[Int, Int]]
  // Present state assumptions
  inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) && ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) && ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) && ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) && ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int) && ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  // Assume type assumptions for self address
  inhale 0 <= $self_address() && $self_address() <= 1461501637330902918203684832716283019655932542975
  // Assume type assumptions for arguments
  inhale 0 <= l$_owner && l$_owner <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= l$_spender && l$_spender <= 1461501637330902918203684832716283019655932542975
  // Assume type assumptions for block
  inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) && ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) && ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) && ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
  inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) && ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
  // Assume type assumptions for msg
  inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) && ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) && ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) && ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
  inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
  // Assume invariants for self
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
  inhale ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Copy state
  $pre_$offered := $offered
  $pre_$allocated := $allocated
  $pre_self := self
  $pre_$trusted := $trusted
  $pre_$contracts := $contracts
  // Copy state
  $old_$offered := $offered
  $old_$allocated := $allocated
  $old_self := self
  $old_$trusted := $trusted
  $old_$contracts := $contracts
  $succ := true
  $overflow := false
  // Function is not payable
  inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
  // Function body
  $res := $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_owner): $Map[Int, Int]), l$_spender): Int)))
  goto return
  label return
  if ($out_of_gas) {
    goto revert
  }
  goto end
  label revert
  $succ := false
  $res := l$havoc
  // Copy state
  $offered := $pre_$offered
  $allocated := $pre_$allocated
  self := $pre_self
  $trusted := $pre_$trusted
  $contracts := $pre_$contracts
  // Copy state
  $old_$offered := $pre_$offered
  $old_$allocated := $pre_$allocated
  $old_self := $pre_self
  $old_$trusted := $pre_$trusted
  $old_$contracts := $pre_$contracts
  label end
  // Assert checks
  if ($succ) {
    assert ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
  } else {
    assert old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
  }
  inhale l$havoc$1 >= 0
  self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
  // Havoc state
  $contracts := l$havoc$2
  // Assert Local State Invariants
  assert ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
  assert ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  assert ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  assert ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  assert (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Assume type assumptions for fresh allocated
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get(l$$allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int))
}

method f$transfer(l$_to: Int, l$_value: $Int) returns ($succ: Bool, $res: Bool)
{
  var msg: $Struct
  var block: $Struct
  var chain: $Struct
  var tx: $Struct
  var self: $Struct
  var $contracts: $Map[Int, $Struct]
  var $allocated: $Map[$Struct, $Map[Int, Int]]
  var $offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $trusted: $Map[Int, $Map[Int, Bool]]
  var $old_self: $Struct
  var $old_$contracts: $Map[Int, $Struct]
  var $old_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $old_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $old_$trusted: $Map[Int, $Map[Int, Bool]]
  var $pre_self: $Struct
  var $pre_$contracts: $Map[Int, $Struct]
  var $pre_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $pre_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $pre_$trusted: $Map[Int, $Map[Int, Bool]]
  var $issued_self: $Struct
  var $issued_$contracts: $Map[Int, $Struct]
  var $issued_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $issued_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $issued_$trusted: $Map[Int, $Map[Int, Bool]]
  var $overflow: Bool
  var $out_of_gas: Bool
  var l$havoc: Bool
  var l$havoc$1: Int
  var l$havoc$2: $Map[Int, $Struct]
  var l$$allocated: $Map[$Struct, $Map[Int, Int]]
  // Present state assumptions
  inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) && ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) && ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) && ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) && ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int) && ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  // Assume type assumptions for self address
  inhale 0 <= $self_address() && $self_address() <= 1461501637330902918203684832716283019655932542975
  // Assume type assumptions for arguments
  inhale 0 <= l$_to && l$_to <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= $unwrap(l$_value) && $unwrap(l$_value) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  // Assume type assumptions for block
  inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) && ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) && ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) && ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
  inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) && ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
  // Assume type assumptions for msg
  inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) && ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) && ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) && ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
  inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
  // Assume invariants for self
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
  inhale ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Copy state
  $pre_$offered := $offered
  $pre_$allocated := $allocated
  $pre_self := self
  $pre_$trusted := $trusted
  $pre_$contracts := $contracts
  // Copy state
  $old_$offered := $offered
  $old_$allocated := $allocated
  $old_self := self
  $old_$trusted := $trusted
  $old_$contracts := $contracts
  $succ := true
  $overflow := false
  // Function is not payable
  inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
  // Function body
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) < 0) {
    goto revert
  }
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)): $Map[Int, Int])): $Struct)
  // Reallocate
  assert ($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(msg, 0)): Int) || ($map_get(($map_get($trusted, ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Bool]), ($struct_get($struct_loc(msg, 0)): Int)): Bool)
  assert $unwrap(l$_value) <= ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) - $unwrap(l$_value)): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), l$_to, ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), l$_to): Int) + $unwrap(l$_value)): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) < 0) {
    goto revert
  }
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)): $Map[Int, Int])): $Struct)
  // Event: Transfer
  inhale acc(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value)), write)
  $res := true
  goto return
  label return
  if ($out_of_gas) {
    goto revert
  }
  goto end
  label revert
  $succ := false
  $res := l$havoc
  // Copy state
  $offered := $pre_$offered
  $allocated := $pre_$allocated
  self := $pre_self
  $trusted := $pre_$trusted
  $contracts := $pre_$contracts
  // Copy state
  $old_$offered := $pre_$offered
  $old_$allocated := $pre_$allocated
  $old_self := $pre_self
  $old_$trusted := $pre_$trusted
  $old_$contracts := $pre_$contracts
  label end
  // Assert postconditions
  exhale $unwrap(l$_value) > ($map_get(($struct_get($struct_loc($pre_self, 3)): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==> !$succ
  // Assert checks
  if ($succ) {
    assert $succ ==> perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) == 1 * write
    assert ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
  } else {
    assert old($succ ==> perm(e$Transfer(($struct_get($struct_loc(msg, 0)): Int), l$_to, $unwrap(l$_value))) == 1 * write)
    assert old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
  }
  inhale l$havoc$1 >= 0
  self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
  // Havoc state
  $contracts := l$havoc$2
  // Assert Local State Invariants
  assert ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
  assert ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  assert ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  assert ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  assert (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Assume type assumptions for fresh allocated
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get(l$$allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int))
}

method f$transferFrom(l$_from: Int, l$_to: Int, l$_value: $Int) returns ($succ: Bool, $res: Bool)
{
  var msg: $Struct
  var block: $Struct
  var chain: $Struct
  var tx: $Struct
  var self: $Struct
  var $contracts: $Map[Int, $Struct]
  var $allocated: $Map[$Struct, $Map[Int, Int]]
  var $offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $trusted: $Map[Int, $Map[Int, Bool]]
  var $old_self: $Struct
  var $old_$contracts: $Map[Int, $Struct]
  var $old_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $old_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $old_$trusted: $Map[Int, $Map[Int, Bool]]
  var $pre_self: $Struct
  var $pre_$contracts: $Map[Int, $Struct]
  var $pre_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $pre_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $pre_$trusted: $Map[Int, $Map[Int, Bool]]
  var $issued_self: $Struct
  var $issued_$contracts: $Map[Int, $Struct]
  var $issued_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $issued_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $issued_$trusted: $Map[Int, $Map[Int, Bool]]
  var $overflow: Bool
  var $out_of_gas: Bool
  var l$havoc: Bool
  var l$havoc$1: Int
  var l$havoc$2: $Map[Int, $Struct]
  var l$$allocated: $Map[$Struct, $Map[Int, Int]]
  // Present state assumptions
  inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) && ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) && ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) && ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) && ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int) && ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  // Assume type assumptions for self address
  inhale 0 <= $self_address() && $self_address() <= 1461501637330902918203684832716283019655932542975
  // Assume type assumptions for arguments
  inhale 0 <= l$_from && l$_from <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= l$_to && l$_to <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= $unwrap(l$_value) && $unwrap(l$_value) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  // Assume type assumptions for block
  inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) && ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) && ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) && ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
  inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) && ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
  // Assume type assumptions for msg
  inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) && ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) && ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) && ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
  inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
  // Assume invariants for self
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
  inhale ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Copy state
  $pre_$offered := $offered
  $pre_$allocated := $allocated
  $pre_self := self
  $pre_$trusted := $trusted
  $pre_$contracts := $contracts
  // Copy state
  $old_$offered := $offered
  $old_$allocated := $allocated
  $old_self := self
  $old_$trusted := $trusted
  $old_$contracts := $contracts
  $succ := true
  $overflow := false
  // Function is not payable
  inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
  // Function body
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value) < 0) {
    goto revert
  }
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_from): Int))) - $unwrap(l$_value)): $Map[Int, Int])): $Struct)
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) < 0) {
    goto revert
  }
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)): $Map[Int, Int])): $Struct)
  if ($unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) < 0) {
    goto revert
  }
  if ($unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  self := ($struct_set(self, 4, ($map_set(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from, ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)): $Map[Int, Int])): $Map[Int, $Map[Int, Int]])): $Struct)
  // Exchange
  if (1 != 0) {
    assert $unwrap(l$_value) <= ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, l$_from, ($struct_get($struct_loc(msg, 0)): Int))): Int)
    $offered := ($map_set($offered, s$resource$token$init(), ($map_set(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init(), ($map_set(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, l$_from, ($struct_get($struct_loc(msg, 0)): Int)), ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, l$_from, ($struct_get($struct_loc(msg, 0)): Int))): Int) - $unwrap(l$_value)): $Map[$Struct, Int])): $Map[$Struct, $Map[$Struct, Int]])): $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]])
  }
  if (0 != 0) {
    assert $unwrap(l$_value) <= ($map_get(($map_get(($map_get($offered, s$resource$nothing$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$token$init()): $Map[$Struct, Int]), s$struct$$offer$init(0, 1, ($struct_get($struct_loc(msg, 0)): Int), l$_from)): Int)
    $offered := ($map_set($offered, s$resource$nothing$init(), ($map_set(($map_get($offered, s$resource$nothing$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$token$init(), ($map_set(($map_get(($map_get($offered, s$resource$nothing$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$token$init()): $Map[$Struct, Int]), s$struct$$offer$init(0, 1, ($struct_get($struct_loc(msg, 0)): Int), l$_from), ($map_get(($map_get(($map_get($offered, s$resource$nothing$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$token$init()): $Map[$Struct, Int]), s$struct$$offer$init(0, 1, ($struct_get($struct_loc(msg, 0)): Int), l$_from)): Int) - $unwrap(l$_value)): $Map[$Struct, Int])): $Map[$Struct, $Map[$Struct, Int]])): $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]])
  }
  assert $unwrap(l$_value) * 1 <= ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), l$_from): Int)
  assert $unwrap(l$_value) * 0 <= ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), l$_from, ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), l$_from): Int) - $unwrap(l$_value) * 1): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  $allocated := ($map_set($allocated, s$resource$nothing$init(), ($map_set(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), l$_from, ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), l$_from): Int) + $unwrap(l$_value) * 0): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  $allocated := ($map_set($allocated, s$resource$nothing$init(), ($map_set(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) - $unwrap(l$_value) * 0): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) + $unwrap(l$_value) * 1): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  // Reallocate
  assert ($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(msg, 0)): Int) || ($map_get(($map_get($trusted, ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Bool]), ($struct_get($struct_loc(msg, 0)): Int)): Bool)
  assert $unwrap(l$_value) <= ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) - $unwrap(l$_value)): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), l$_to, ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), l$_to): Int) + $unwrap(l$_value)): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  // Event: Transfer
  inhale acc(e$Transfer(l$_from, l$_to, $unwrap(l$_value)), write)
  $res := true
  goto return
  label return
  if ($out_of_gas) {
    goto revert
  }
  goto end
  label revert
  $succ := false
  $res := l$havoc
  // Copy state
  $offered := $pre_$offered
  $allocated := $pre_$allocated
  self := $pre_self
  $trusted := $pre_$trusted
  $contracts := $pre_$contracts
  // Copy state
  $old_$offered := $pre_$offered
  $old_$allocated := $pre_$allocated
  $old_self := $pre_self
  $old_$trusted := $pre_$trusted
  $old_$contracts := $pre_$contracts
  label end
  // Assert postconditions
  exhale $unwrap(l$_value) > ($map_get(($map_get(($struct_get($struct_loc($pre_self, 4)): $Map[Int, $Map[Int, Int]]), l$_from): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) ==> !$succ
  // Assert checks
  if ($succ) {
    assert $succ ==> perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write
    assert ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
  } else {
    assert old($succ ==> perm(e$Transfer(l$_from, l$_to, $unwrap(l$_value))) == 1 * write)
    assert old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
  }
  inhale l$havoc$1 >= 0
  self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
  // Havoc state
  $contracts := l$havoc$2
  // Assert Local State Invariants
  assert ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
  assert ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  assert ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  assert ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  assert (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Assume type assumptions for fresh allocated
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get(l$$allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int))
}

method f$approve(l$_spender: Int, l$_value: $Int) returns ($succ: Bool, $res: Bool)
{
  var msg: $Struct
  var block: $Struct
  var chain: $Struct
  var tx: $Struct
  var self: $Struct
  var $contracts: $Map[Int, $Struct]
  var $allocated: $Map[$Struct, $Map[Int, Int]]
  var $offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $trusted: $Map[Int, $Map[Int, Bool]]
  var $old_self: $Struct
  var $old_$contracts: $Map[Int, $Struct]
  var $old_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $old_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $old_$trusted: $Map[Int, $Map[Int, Bool]]
  var $pre_self: $Struct
  var $pre_$contracts: $Map[Int, $Struct]
  var $pre_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $pre_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $pre_$trusted: $Map[Int, $Map[Int, Bool]]
  var $issued_self: $Struct
  var $issued_$contracts: $Map[Int, $Struct]
  var $issued_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $issued_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $issued_$trusted: $Map[Int, $Map[Int, Bool]]
  var $overflow: Bool
  var $out_of_gas: Bool
  var l$havoc: Bool
  var l$havoc$1: Int
  var l$havoc$2: $Map[Int, $Struct]
  var l$$allocated: $Map[$Struct, $Map[Int, Int]]
  // Present state assumptions
  inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) && ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) && ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) && ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) && ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int) && ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  // Assume type assumptions for self address
  inhale 0 <= $self_address() && $self_address() <= 1461501637330902918203684832716283019655932542975
  // Assume type assumptions for arguments
  inhale 0 <= l$_spender && l$_spender <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= $unwrap(l$_value) && $unwrap(l$_value) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  // Assume type assumptions for block
  inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) && ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) && ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) && ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
  inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) && ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
  // Assume type assumptions for msg
  inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) && ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) && ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) && ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
  inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
  // Assume invariants for self
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
  inhale ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Copy state
  $pre_$offered := $offered
  $pre_$allocated := $allocated
  $pre_self := self
  $pre_$trusted := $trusted
  $pre_$contracts := $contracts
  // Copy state
  $old_$offered := $offered
  $old_$allocated := $allocated
  $old_self := self
  $old_$trusted := $trusted
  $old_$contracts := $contracts
  $succ := true
  $overflow := false
  // Function is not payable
  inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
  // Function body
  // Revoke
  assert ($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(msg, 0)): Int) || ($map_get(($map_get($trusted, ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Bool]), ($struct_get($struct_loc(msg, 0)): Int)): Bool)
  $offered := ($map_set($offered, s$resource$token$init(), ($map_set(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init(), ($map_set(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, ($struct_get($struct_loc(msg, 0)): Int), l$_spender), 0): $Map[$Struct, Int])): $Map[$Struct, $Map[$Struct, Int]])): $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]])
  self := ($struct_set(self, 4, ($map_set(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), ($struct_get($struct_loc(msg, 0)): Int), ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Int]), l$_spender, $unwrap(l$_value)): $Map[Int, Int])): $Map[Int, $Map[Int, Int]])): $Struct)
  // Offer
  assert ($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(msg, 0)): Int) || ($map_get(($map_get($trusted, ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Bool]), ($struct_get($struct_loc(msg, 0)): Int)): Bool)
  $offered := ($map_set($offered, s$resource$token$init(), ($map_set(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init(), ($map_set(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, ($struct_get($struct_loc(msg, 0)): Int), l$_spender), ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, ($struct_get($struct_loc(msg, 0)): Int), l$_spender)): Int) + $unwrap(l$_value)): $Map[$Struct, Int])): $Map[$Struct, $Map[$Struct, Int]])): $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]])
  // Event: Approval
  inhale acc(e$Approval(($struct_get($struct_loc(msg, 0)): Int), l$_spender, $unwrap(l$_value)), write)
  $res := true
  goto return
  label return
  if ($out_of_gas) {
    goto revert
  }
  goto end
  label revert
  $succ := false
  $res := l$havoc
  // Copy state
  $offered := $pre_$offered
  $allocated := $pre_$allocated
  self := $pre_self
  $trusted := $pre_$trusted
  $contracts := $pre_$contracts
  // Copy state
  $old_$offered := $pre_$offered
  $old_$allocated := $pre_$allocated
  $old_self := $pre_self
  $old_$trusted := $pre_$trusted
  $old_$contracts := $pre_$contracts
  label end
  // Assert checks
  if ($succ) {
    assert $succ ==> perm(e$Approval(($struct_get($struct_loc(msg, 0)): Int), l$_spender, $unwrap(l$_value))) == 1 * write
    assert ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
  } else {
    assert old($succ ==> perm(e$Approval(($struct_get($struct_loc(msg, 0)): Int), l$_spender, $unwrap(l$_value))) == 1 * write)
    assert old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
  }
  inhale l$havoc$1 >= 0
  self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc$1): $Struct)
  // Havoc state
  $contracts := l$havoc$2
  // Assert Local State Invariants
  assert ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
  assert ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  assert ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  assert ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  assert (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Assume type assumptions for fresh allocated
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get(l$$allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int))
}

method f$mint(l$_to: Int, l$_value: $Int) returns ($succ: Bool)
{
  var msg: $Struct
  var block: $Struct
  var chain: $Struct
  var tx: $Struct
  var self: $Struct
  var $contracts: $Map[Int, $Struct]
  var $allocated: $Map[$Struct, $Map[Int, Int]]
  var $offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $trusted: $Map[Int, $Map[Int, Bool]]
  var $old_self: $Struct
  var $old_$contracts: $Map[Int, $Struct]
  var $old_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $old_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $old_$trusted: $Map[Int, $Map[Int, Bool]]
  var $pre_self: $Struct
  var $pre_$contracts: $Map[Int, $Struct]
  var $pre_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $pre_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $pre_$trusted: $Map[Int, $Map[Int, Bool]]
  var $issued_self: $Struct
  var $issued_$contracts: $Map[Int, $Struct]
  var $issued_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $issued_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $issued_$trusted: $Map[Int, $Map[Int, Bool]]
  var $overflow: Bool
  var $out_of_gas: Bool
  var l$havoc: Int
  var l$havoc$1: $Map[Int, $Struct]
  var l$$allocated: $Map[$Struct, $Map[Int, Int]]
  // Present state assumptions
  inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) && ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) && ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) && ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) && ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int) && ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  // Assume type assumptions for self address
  inhale 0 <= $self_address() && $self_address() <= 1461501637330902918203684832716283019655932542975
  // Assume type assumptions for arguments
  inhale 0 <= l$_to && l$_to <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= $unwrap(l$_value) && $unwrap(l$_value) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  // Assume type assumptions for block
  inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) && ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) && ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) && ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
  inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) && ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
  // Assume type assumptions for msg
  inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) && ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) && ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) && ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
  inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
  // Assume invariants for self
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
  inhale ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Copy state
  $pre_$offered := $offered
  $pre_$allocated := $allocated
  $pre_self := self
  $pre_$trusted := $trusted
  $pre_$contracts := $contracts
  // Copy state
  $old_$offered := $offered
  $old_$allocated := $allocated
  $old_self := self
  $old_$trusted := $trusted
  $old_$contracts := $contracts
  $succ := true
  $overflow := false
  // Function is not payable
  inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
  // Function body
  if (!(($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(self, 6)): Int))) {
    goto revert
  }
  if (!(l$_to != 0)) {
    goto revert
  }
  if ($unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value) < 0) {
    goto revert
  }
  if ($unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  self := ($struct_set(self, 5, $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) + $unwrap(l$_value)): $Struct)
  // Create
  assert ($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(msg, 0)): Int) || ($map_get(($map_get($trusted, ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Bool]), ($struct_get($struct_loc(msg, 0)): Int)): Bool)
  assert ($unwrap(l$_value) > 0 ? 1 : 0) <= ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) + $unwrap(l$_value)): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) < 0) {
    goto revert
  }
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))) + $unwrap(l$_value)): $Map[Int, Int])): $Struct)
  // Reallocate
  assert ($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(msg, 0)): Int) || ($map_get(($map_get($trusted, ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Bool]), ($struct_get($struct_loc(msg, 0)): Int)): Bool)
  assert $unwrap(l$_value) <= ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) - $unwrap(l$_value)): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), l$_to, ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), l$_to): Int) + $unwrap(l$_value)): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  // Event: Transfer
  inhale acc(e$Transfer(0, l$_to, $unwrap(l$_value)), write)
  label return
  if ($out_of_gas) {
    goto revert
  }
  goto end
  label revert
  $succ := false
  // Copy state
  $offered := $pre_$offered
  $allocated := $pre_$allocated
  self := $pre_self
  $trusted := $pre_$trusted
  $contracts := $pre_$contracts
  // Copy state
  $old_$offered := $pre_$offered
  $old_$allocated := $pre_$allocated
  $old_self := $pre_self
  $old_$trusted := $pre_$trusted
  $old_$contracts := $pre_$contracts
  label end
  // Assert checks
  if ($succ) {
    assert ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
  } else {
    assert old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
  }
  inhale l$havoc >= 0
  self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
  // Havoc state
  $contracts := l$havoc$1
  // Assert Local State Invariants
  assert ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
  assert ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  assert ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  assert ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  assert (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Assume type assumptions for fresh allocated
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get(l$$allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int))
}

method f$burn(l$_value: $Int) returns ($succ: Bool)
{
  var msg: $Struct
  var block: $Struct
  var chain: $Struct
  var tx: $Struct
  var self: $Struct
  var $contracts: $Map[Int, $Struct]
  var $allocated: $Map[$Struct, $Map[Int, Int]]
  var $offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $trusted: $Map[Int, $Map[Int, Bool]]
  var $old_self: $Struct
  var $old_$contracts: $Map[Int, $Struct]
  var $old_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $old_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $old_$trusted: $Map[Int, $Map[Int, Bool]]
  var $pre_self: $Struct
  var $pre_$contracts: $Map[Int, $Struct]
  var $pre_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $pre_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $pre_$trusted: $Map[Int, $Map[Int, Bool]]
  var $issued_self: $Struct
  var $issued_$contracts: $Map[Int, $Struct]
  var $issued_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $issued_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $issued_$trusted: $Map[Int, $Map[Int, Bool]]
  var $overflow: Bool
  var l$i0$_to: Int
  var l$i0$_value: $Int
  var i0$$pre_self: $Struct
  var i0$$pre_$contracts: $Map[Int, $Struct]
  var i0$$pre_$allocated: $Map[$Struct, $Map[Int, Int]]
  var i0$$pre_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var i0$$pre_$trusted: $Map[Int, $Map[Int, Bool]]
  var $out_of_gas: Bool
  var l$havoc: Int
  var l$havoc$1: $Map[Int, $Struct]
  var l$$allocated: $Map[$Struct, $Map[Int, Int]]
  // Present state assumptions
  inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) && ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) && ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) && ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) && ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int) && ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  // Assume type assumptions for self address
  inhale 0 <= $self_address() && $self_address() <= 1461501637330902918203684832716283019655932542975
  // Assume type assumptions for arguments
  inhale 0 <= $unwrap(l$_value) && $unwrap(l$_value) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  // Assume type assumptions for block
  inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) && ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) && ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) && ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
  inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) && ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
  // Assume type assumptions for msg
  inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) && ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) && ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) && ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
  inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
  // Assume invariants for self
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
  inhale ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Copy state
  $pre_$offered := $offered
  $pre_$allocated := $allocated
  $pre_self := self
  $pre_$trusted := $trusted
  $pre_$contracts := $contracts
  // Copy state
  $old_$offered := $offered
  $old_$allocated := $allocated
  $old_self := self
  $old_$trusted := $trusted
  $old_$contracts := $contracts
  $succ := true
  $overflow := false
  // Function is not payable
  inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
  // Function body
  // Copy state
  i0$$pre_$offered := $offered
  i0$$pre_$allocated := $allocated
  i0$$pre_self := self
  i0$$pre_$trusted := $trusted
  i0$$pre_$contracts := $contracts
  // Inlined call of _burn
  l$i0$_to := ($struct_get($struct_loc(msg, 0)): Int)
  l$i0$_value := l$_value
  if (!(l$i0$_to != 0)) {
    goto revert
  }
  if ($unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) < 0) {
    goto revert
  }
  if ($unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  self := ($struct_set(self, 5, $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)): $Struct)
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) < 0) {
    goto revert
  }
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)): $Map[Int, Int])): $Struct)
  // Destroy
  assert ($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(msg, 0)): Int) || ($map_get(($map_get($trusted, ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Bool]), ($struct_get($struct_loc(msg, 0)): Int)): Bool)
  assert $unwrap(l$i0$_value) <= ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) - $unwrap(l$i0$_value)): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  // Event: Transfer
  inhale acc(e$Transfer(l$i0$_to, 0, $unwrap(l$i0$_value)), write)
  label i0$return
  label return
  if ($out_of_gas) {
    goto revert
  }
  goto end
  label revert
  $succ := false
  // Copy state
  $offered := $pre_$offered
  $allocated := $pre_$allocated
  self := $pre_self
  $trusted := $pre_$trusted
  $contracts := $pre_$contracts
  // Copy state
  $old_$offered := $pre_$offered
  $old_$allocated := $pre_$allocated
  $old_self := $pre_self
  $old_$trusted := $pre_$trusted
  $old_$contracts := $pre_$contracts
  label end
  // Assert checks
  if ($succ) {
    assert ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
  } else {
    assert old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
  }
  inhale l$havoc >= 0
  self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
  // Havoc state
  $contracts := l$havoc$1
  // Assert Local State Invariants
  assert ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
  assert ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  assert ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  assert ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  assert (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Assume type assumptions for fresh allocated
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get(l$$allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int))
}

method f$burnFrom(l$_to: Int, l$_value: $Int) returns ($succ: Bool)
{
  var msg: $Struct
  var block: $Struct
  var chain: $Struct
  var tx: $Struct
  var self: $Struct
  var $contracts: $Map[Int, $Struct]
  var $allocated: $Map[$Struct, $Map[Int, Int]]
  var $offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $trusted: $Map[Int, $Map[Int, Bool]]
  var $old_self: $Struct
  var $old_$contracts: $Map[Int, $Struct]
  var $old_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $old_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $old_$trusted: $Map[Int, $Map[Int, Bool]]
  var $pre_self: $Struct
  var $pre_$contracts: $Map[Int, $Struct]
  var $pre_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $pre_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $pre_$trusted: $Map[Int, $Map[Int, Bool]]
  var $issued_self: $Struct
  var $issued_$contracts: $Map[Int, $Struct]
  var $issued_$allocated: $Map[$Struct, $Map[Int, Int]]
  var $issued_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var $issued_$trusted: $Map[Int, $Map[Int, Bool]]
  var $overflow: Bool
  var l$i0$_to: Int
  var l$i0$_value: $Int
  var i0$$pre_self: $Struct
  var i0$$pre_$contracts: $Map[Int, $Struct]
  var i0$$pre_$allocated: $Map[$Struct, $Map[Int, Int]]
  var i0$$pre_$offered: $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]]
  var i0$$pre_$trusted: $Map[Int, $Map[Int, Bool]]
  var $out_of_gas: Bool
  var l$havoc: Int
  var l$havoc$1: $Map[Int, $Struct]
  var l$$allocated: $Map[$Struct, $Map[Int, Int]]
  // Present state assumptions
  inhale |($struct_get($struct_loc(self, 0)): Seq[Int])| <= 64
  inhale |($struct_get($struct_loc(self, 1)): Seq[Int])| <= 32
  inhale 0 <= ($struct_get($struct_loc(self, 2)): Int) && ($struct_get($struct_loc(self, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q2: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) } ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), $q2): Int) <= ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } 0 <= ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) && ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q3: Int :: { ($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]) } (forall $q4: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) } ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int]), $q4): Int) <= ($map_sum(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), $q3): $Map[Int, Int])): Int)))
  inhale 0 <= ($struct_get($struct_loc(self, 5)): Int) && ($struct_get($struct_loc(self, 5)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(self, 6)): Int) && ($struct_get($struct_loc(self, 6)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(self, 7)): Int) && ($struct_get($struct_loc(self, 7)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale -170141183460469231731687303715884105728 <= ($struct_get($struct_loc(self, 8)): Int) && ($struct_get($struct_loc(self, 8)): Int) <= 170141183460469231731687303715884105727
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) && ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q5: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $q5): Int) <= ($map_sum(($struct_get($struct_loc(self, 10)): $Map[Int, Int])): Int))
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } 0 <= ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) && ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  inhale (forall $q6: Int :: { ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) } ($map_get(($struct_get($struct_loc(self, 11)): $Map[Int, Int]), $q6): Int) <= ($map_sum(($struct_get($struct_loc(self, 11)): $Map[Int, Int])): Int))
  inhale ($struct_get($struct_loc(self, -1)): Int) == 9122519725869122497593506884710
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get($allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get($allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get($allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } 0 <= ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) && ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
  inhale (forall $q0: $Struct :: { ($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]) } (forall $q1: $Struct :: { ($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]) } (forall $q2: $Struct :: { ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) } ($map_get(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int]), $q2): Int) <= ($map_sum(($map_get(($map_get($offered, $q0): $Map[$Struct, $Map[$Struct, Int]]), $q1): $Map[$Struct, Int])): Int))))
  // Assume type assumptions for self address
  inhale 0 <= $self_address() && $self_address() <= 1461501637330902918203684832716283019655932542975
  // Assume type assumptions for arguments
  inhale 0 <= l$_to && l$_to <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= $unwrap(l$_value) && $unwrap(l$_value) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  // Assume type assumptions for block
  inhale 0 <= ($struct_get($struct_loc(block, 0)): Int) && ($struct_get($struct_loc(block, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(block, 1)): Int) && ($struct_get($struct_loc(block, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(block, 2)): Int) && ($struct_get($struct_loc(block, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale |($struct_get($struct_loc(block, 3)): Seq[Int])| == 32
  inhale 0 <= ($struct_get($struct_loc(block, 4)): Int) && ($struct_get($struct_loc(block, 4)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(block, -1)): Int) == 2335365049822495359383864865678187
  // Assume type assumptions for msg
  inhale 0 <= ($struct_get($struct_loc(msg, 0)): Int) && ($struct_get($struct_loc(msg, 0)): Int) <= 1461501637330902918203684832716283019655932542975
  inhale 0 <= ($struct_get($struct_loc(msg, 1)): Int) && ($struct_get($struct_loc(msg, 1)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale 0 <= ($struct_get($struct_loc(msg, 2)): Int) && ($struct_get($struct_loc(msg, 2)): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935
  inhale ($struct_get($struct_loc(msg, -1)): Int) == 35634842679176259756224246631
  inhale ($struct_get($struct_loc(msg, 0)): Int) != 0
  // Assume invariants for self
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc(self, 6)): Int)
  inhale ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Copy state
  $pre_$offered := $offered
  $pre_$allocated := $allocated
  $pre_self := self
  $pre_$trusted := $trusted
  $pre_$contracts := $contracts
  // Copy state
  $old_$offered := $offered
  $old_$allocated := $allocated
  $old_self := self
  $old_$trusted := $trusted
  $old_$contracts := $contracts
  $succ := true
  $overflow := false
  // Function is not payable
  inhale ($struct_get($struct_loc(msg, 1)): Int) == 0
  // Function body
  if ($unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) < 0) {
    goto revert
  }
  if ($unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  self := ($struct_set(self, 4, ($map_set(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to, ($map_set(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), $unwrap($wrap(($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), l$_to): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int))) - $unwrap(l$_value)): $Map[Int, Int])): $Map[Int, $Map[Int, Int]])): $Struct)
  // Exchange
  if (1 != 0) {
    assert ($unwrap(l$_value) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int) ? $unwrap(l$_value) : ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)) <= ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, l$_to, ($struct_get($struct_loc(msg, 0)): Int))): Int)
    $offered := ($map_set($offered, s$resource$token$init(), ($map_set(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init(), ($map_set(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, l$_to, ($struct_get($struct_loc(msg, 0)): Int)), ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, l$_to, ($struct_get($struct_loc(msg, 0)): Int))): Int) - ($unwrap(l$_value) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int) ? $unwrap(l$_value) : ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))): $Map[$Struct, Int])): $Map[$Struct, $Map[$Struct, Int]])): $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]])
  }
  if (0 != 0) {
    assert ($unwrap(l$_value) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int) ? $unwrap(l$_value) : ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)) <= ($map_get(($map_get(($map_get($offered, s$resource$nothing$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$token$init()): $Map[$Struct, Int]), s$struct$$offer$init(0, 1, ($struct_get($struct_loc(msg, 0)): Int), l$_to)): Int)
    $offered := ($map_set($offered, s$resource$nothing$init(), ($map_set(($map_get($offered, s$resource$nothing$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$token$init(), ($map_set(($map_get(($map_get($offered, s$resource$nothing$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$token$init()): $Map[$Struct, Int]), s$struct$$offer$init(0, 1, ($struct_get($struct_loc(msg, 0)): Int), l$_to), ($map_get(($map_get(($map_get($offered, s$resource$nothing$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$token$init()): $Map[$Struct, Int]), s$struct$$offer$init(0, 1, ($struct_get($struct_loc(msg, 0)): Int), l$_to)): Int) - ($unwrap(l$_value) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int) ? $unwrap(l$_value) : ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int))): $Map[$Struct, Int])): $Map[$Struct, $Map[$Struct, Int]])): $Map[$Struct, $Map[$Struct, $Map[$Struct, Int]]])
  }
  assert ($unwrap(l$_value) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int) ? $unwrap(l$_value) : ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)) * 1 <= ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), l$_to): Int)
  assert ($unwrap(l$_value) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int) ? $unwrap(l$_value) : ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)) * 0 <= ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), l$_to, ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), l$_to): Int) - ($unwrap(l$_value) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int) ? $unwrap(l$_value) : ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)) * 1): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  $allocated := ($map_set($allocated, s$resource$nothing$init(), ($map_set(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), l$_to, ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), l$_to): Int) + ($unwrap(l$_value) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int) ? $unwrap(l$_value) : ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)) * 0): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  $allocated := ($map_set($allocated, s$resource$nothing$init(), ($map_set(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) - ($unwrap(l$_value) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int) ? $unwrap(l$_value) : ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)) * 0): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) + ($unwrap(l$_value) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int) ? $unwrap(l$_value) : ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$_to): Int)) * 1): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  // Copy state
  i0$$pre_$offered := $offered
  i0$$pre_$allocated := $allocated
  i0$$pre_self := self
  i0$$pre_$trusted := $trusted
  i0$$pre_$contracts := $contracts
  // Inlined call of _burn
  l$i0$_to := l$_to
  l$i0$_value := l$_value
  if (!(l$i0$_to != 0)) {
    goto revert
  }
  if ($unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) < 0) {
    goto revert
  }
  if ($unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  self := ($struct_set(self, 5, $unwrap($wrap(($struct_get($struct_loc(self, 5)): Int))) - $unwrap(l$i0$_value)): $Struct)
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) < 0) {
    goto revert
  }
  if ($unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value) > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
    $overflow := true
    goto revert
  }
  self := ($struct_set(self, 3, ($map_set(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to, $unwrap($wrap(($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), l$i0$_to): Int))) - $unwrap(l$i0$_value)): $Map[Int, Int])): $Struct)
  // Destroy
  assert ($struct_get($struct_loc(msg, 0)): Int) == ($struct_get($struct_loc(msg, 0)): Int) || ($map_get(($map_get($trusted, ($struct_get($struct_loc(msg, 0)): Int)): $Map[Int, Bool]), ($struct_get($struct_loc(msg, 0)): Int)): Bool)
  assert $unwrap(l$i0$_value) <= ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int)
  $allocated := ($map_set($allocated, s$resource$token$init(), ($map_set(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int), ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(msg, 0)): Int)): Int) - $unwrap(l$i0$_value)): $Map[Int, Int])): $Map[$Struct, $Map[Int, Int]])
  // Event: Transfer
  inhale acc(e$Transfer(l$i0$_to, 0, $unwrap(l$i0$_value)), write)
  label i0$return
  label return
  if ($out_of_gas) {
    goto revert
  }
  goto end
  label revert
  $succ := false
  // Copy state
  $offered := $pre_$offered
  $allocated := $pre_$allocated
  self := $pre_self
  $trusted := $pre_$trusted
  $contracts := $pre_$contracts
  // Copy state
  $old_$offered := $pre_$offered
  $old_$allocated := $pre_$allocated
  $old_self := $pre_self
  $old_$trusted := $pre_$trusted
  $old_$contracts := $pre_$contracts
  label end
  // Assert checks
  if ($succ) {
    assert ($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write)
    assert (forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write)
  } else {
    assert old(($struct_get($struct_loc(msg, 0)): Int) != ($struct_get($struct_loc(self, 6)): Int) ==> ($struct_get($struct_loc($old_self, 5)): Int) >= ($struct_get($struct_loc(self, 5)): Int))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int),($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) && ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) < ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) ==> perm(e$Transfer(q$b, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) > ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(q$a, 0, ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int) < ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) && (forall q$b: Int :: { ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) } { ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int) } 0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975 ==> q$b != q$a ==> ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$b): Int) == ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$b): Int)) ==> perm(e$Transfer(0, q$a, ($map_get(($struct_get($struct_loc(self, 3)): $Map[Int, Int]), q$a): Int) - ($map_get(($struct_get($struct_loc($old_self, 3)): $Map[Int, Int]), q$a): Int))) == 1 * write))
    assert old((forall q$a: Int, q$b: Int :: { ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } { ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 && (0 <= q$b && q$b <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc($old_self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) < ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int) ==> perm(e$Approval(q$a, q$b, ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$a): $Map[Int, Int]), q$b): Int))) == 1 * write))
  }
  inhale l$havoc >= 0
  self := ($struct_set(self, 7, ($struct_get($struct_loc(self, 7)): Int) + l$havoc): $Struct)
  // Havoc state
  $contracts := l$havoc$1
  // Assert Local State Invariants
  assert ($struct_get($struct_loc(self, 6)): Int) == ($struct_get($struct_loc($old_self, 6)): Int)
  assert ($struct_get($struct_loc(self, 5)): Int) == ($map_sum(($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Int)
  assert ($map_sum(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  assert ($map_eq(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  assert (forall q$a: Int :: { ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall q$o: Int, q$s: Int :: 0 <= q$o && q$o <= 1461501637330902918203684832716283019655932542975 && (0 <= q$s && q$s <= 1461501637330902918203684832716283019655932542975) ==> ($map_get(($map_get(($struct_get($struct_loc(self, 4)): $Map[Int, $Map[Int, Int]]), q$o): $Map[Int, Int]), q$s): Int) == ($map_get(($map_get(($map_get($offered, s$resource$token$init()): $Map[$Struct, $Map[$Struct, Int]]), s$resource$nothing$init()): $Map[$Struct, Int]), s$struct$$offer$init(1, 0, q$o, q$s)): Int))
  // Assume type assumptions for fresh allocated
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } 0 <= ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) && ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= 115792089237316195423570985008687907853269984665640564039457584007913129639935))
  inhale (forall $q0: $Struct :: { ($map_get(l$$allocated, $q0): $Map[Int, Int]) } (forall $q1: Int :: { ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) } ($map_get(($map_get(l$$allocated, $q0): $Map[Int, Int]), $q1): Int) <= ($map_sum(($map_get(l$$allocated, $q0): $Map[Int, Int])): Int)))
  inhale (forall $a: Int :: { ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) } ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int) >= ($map_get(($struct_get($struct_loc(self, 10)): $Map[Int, Int]), $a): Int))
  inhale ($struct_get($struct_loc(self, 7)): Int) >= ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int)
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_sum(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int])): Int) == 0 && ($map_sum(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int])): Int) == 0
  inhale ($map_eq(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), ($struct_get($struct_loc(self, 3)): $Map[Int, Int])): Bool)
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  inhale (forall q$a: Int :: { ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) } 0 <= q$a && q$a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get(l$$allocated, s$resource$$creator$init(s$resource$token$init())): $Map[Int, Int]), q$a): Int) == (q$a == ($struct_get($struct_loc(self, 6)): Int) ? 1 : 0))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$token$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$nothing$init()): $Map[Int, Int]), $a): Int))
  assert (forall $a: Int :: { ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int),($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) } 0 <= $a && $a <= 1461501637330902918203684832716283019655932542975 ==> ($map_get(($map_get($allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int) == ($map_get(($map_get(l$$allocated, s$resource$wei$init()): $Map[Int, Int]), $a): Int))
}