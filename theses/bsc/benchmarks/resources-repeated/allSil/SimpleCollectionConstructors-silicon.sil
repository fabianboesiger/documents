// Generated on 2021-03-23 at 23:39:30
domain TYPE {
  
  unique function class_SimpleCollectionConstructors(): TYPE
  
  unique function class_java_DOT_lang_DOT_Object(): TYPE
  
  unique function class_Edge(): TYPE
  
  unique function class_EncodedGlobalVariables(): TYPE
  
  function directSuperclass(t: TYPE): TYPE
  
  function type_of(val: Ref): TYPE
  
  axiom SimpleCollectionConstructors_directSuperclass {
    directSuperclass(class_SimpleCollectionConstructors()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom Edge_directSuperclass {
    directSuperclass(class_Edge()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom EncodedGlobalVariables_directSuperclass {
    directSuperclass(class_EncodedGlobalVariables()) == class_java_DOT_lang_DOT_Object()
  }
}

//  a field 
field Edge_source: Int

//  a field 
field Edge_target: Int

function instanceof_TYPE_TYPE(t: TYPE, u: TYPE): Bool
  ensures result == (t == u || directSuperclass(t) == u)


method SimpleCollectionConstructors___contract_unsatisfiable__main_EncodedGlobalVariables(diz: Ref, globals: Ref)
  requires diz != null
{
  inhale true && true
  // assert
  assert false
  inhale false
}

method SimpleCollectionConstructors_main_EncodedGlobalVariables(diz: Ref, globals: Ref)
  requires diz != null
{
  var a__1: Seq[Int]
  var __flatten_1__2: Seq[Int]
  var b__3: Seq[Int]
  var __flatten_2__4: Seq[Int]
  var c__5: Seq[Int]
  var __flatten_3__6: Seq[Int]
  var d__7: Seq[Int]
  var __flatten_4__8: Seq[Int]
  var edge1__9: Ref
  var hs__10: Seq[Seq[Ref]]
  var __flatten_6__11: Seq[Seq[Ref]]
  var e1__12: Ref
  var e2__13: Ref
  var es__14: Seq[Ref]
  var __flatten_9__15: Seq[Ref]
  var gs__16: Seq[Ref]
  var __flatten_10__17: Seq[Ref]
  __flatten_1__2 := Seq[Int]()
  a__1 := __flatten_1__2
  __flatten_2__4 := Seq(1, 5, 7, 9, 2)
  b__3 := __flatten_2__4
  __flatten_3__6 := Seq[Int]()
  c__5 := __flatten_3__6
  __flatten_4__8 := Seq(1, 5, 7, 9, 2)
  d__7 := __flatten_4__8
  edge1__9 := Edge_Edge_EncodedGlobalVariables_Integer_Integer(globals, 1, 3)
  __flatten_6__11 := Seq(Seq(edge1__9))
  hs__10 := __flatten_6__11
  // assert
  assert a__1 == c__5 && b__3 == d__7
  e1__12 := Edge_Edge_EncodedGlobalVariables_Integer_Integer(globals, 0, 1)
  e2__13 := Edge_Edge_EncodedGlobalVariables_Integer_Integer(globals, 1, 2)
  __flatten_9__15 := Seq[Ref]()
  es__14 := __flatten_9__15
  __flatten_10__17 := Seq(e1__12, e2__13)
  gs__16 := __flatten_10__17
  // assert
  assert Seq(e1__12, e2__13) == Seq(e1__12) ++ (Seq(e2__13) ++ Seq[Ref]())
}

method Edge___contract_unsatisfiable__Edge_EncodedGlobalVariables_Integer_Integer(diz: Ref, globals: Ref, s: Int, t: Int)
  requires diz != null
{
  inhale true && true
  // assert
  assert false
  inhale false
}

method Edge_Edge_EncodedGlobalVariables_Integer_Integer(globals: Ref, s: Int, t: Int) returns (sys__result: Ref)
  ensures sys__result != null
  ensures type_of(sys__result) == class_Edge()
{
  var diz__18: Ref
  diz__18 := new(Edge_source, Edge_target)
  inhale type_of(diz__18) == class_Edge()
  diz__18.Edge_source := s
  diz__18.Edge_target := t
  sys__result := diz__18
  // assert
  assert sys__result != null && type_of(sys__result) == class_Edge()
  inhale false
}