// Generated on 2021-03-23 at 23:35:25
domain TYPE {
  
  unique function class_java_DOT_lang_DOT_Object(): TYPE
  
  unique function class_MultiIncrement(): TYPE
  
  unique function class_EncodedGlobalVariables(): TYPE
  
  function directSuperclass(t: TYPE): TYPE
  
  function type_of(val: Ref): TYPE
  
  axiom java_DOT_lang_DOT_Object_directSuperclass {
    directSuperclass(class_java_DOT_lang_DOT_Object()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom MultiIncrement_directSuperclass {
    directSuperclass(class_MultiIncrement()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom EncodedGlobalVariables_directSuperclass {
    directSuperclass(class_EncodedGlobalVariables()) == class_java_DOT_lang_DOT_Object()
  }
}

domain frac {
  
  function frac_val(a: frac): Perm
  
  axiom frac_eq {
    (forall a: frac, b: frac :: { frac_val(a),frac_val(b) } (frac_val(a) == frac_val(b)) == (a == b))
  }
  
  axiom frac_bound {
    (forall a: frac :: { frac_val(a) } 0 / 1 < frac_val(a) && frac_val(a) <= 1 / 1)
  }
}

domain zfrac {
  
  function zfrac_val(a: zfrac): Perm
  
  axiom zfrac_eq {
    (forall a: zfrac, b: zfrac :: { zfrac_val(a),zfrac_val(b) } (zfrac_val(a) == zfrac_val(b)) == (a == b))
  }
  
  axiom zfrac_bound {
    (forall a: zfrac :: { zfrac_val(a) } 0 / 1 <= zfrac_val(a) && zfrac_val(a) <= 1 / 1)
  }
}

//  a field 
field MultiIncrement_owned: Int

//  a field 
field EncodedGlobalVariables_shared: Int

function instanceof_TYPE_TYPE(t: TYPE, u: TYPE): Bool
  ensures result == (t == u || directSuperclass(t) == u)


function new_frac(x: Perm): frac
  requires 0 / 1 < x && x <= 1 / 1
  ensures frac_val(result) == x


function new_zfrac(x: Perm): zfrac
  requires 0 / 1 <= x && x <= 1 / 1
  ensures zfrac_val(result) == x


method java_DOT_lang_DOT_Object_Object_EncodedGlobalVariables(globals: Ref) returns (sys__result: Ref)
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Object()
{
  inhale false
}

method java_DOT_lang_DOT_Object_internal_Object_EncodedGlobalVariables(globals: Ref) returns (sys__result: Ref)
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Object()
{
  inhale false
}

method MultiIncrement___contract_unsatisfiable__static_incr_this_one_EncodedGlobalVariables_MultiIncrement(globals: Ref, obj: Ref)
{
  inhale true && acc(obj.MultiIncrement_owned, write)
  // assert
  assert false
  inhale false
}

method MultiIncrement_static_incr_this_one_EncodedGlobalVariables_MultiIncrement(globals: Ref, obj: Ref)
  requires acc(obj.MultiIncrement_owned, write)
  ensures acc(obj.MultiIncrement_owned, write)
  ensures obj.MultiIncrement_owned == old(obj.MultiIncrement_owned) + 1
{
  var __flatten_3__1: Int
  __flatten_3__1 := obj.MultiIncrement_owned + 1
  obj.MultiIncrement_owned := __flatten_3__1
}

method MultiIncrement___contract_unsatisfiable__static_incr_shared_one_EncodedGlobalVariables(globals: Ref)
{
  inhale true && acc(globals.EncodedGlobalVariables_shared, write)
  // assert
  assert false
  inhale false
}

method MultiIncrement_static_incr_shared_one_EncodedGlobalVariables(globals: Ref)
  requires acc(globals.EncodedGlobalVariables_shared, write)
  ensures acc(globals.EncodedGlobalVariables_shared, write)
  ensures globals.EncodedGlobalVariables_shared == old(globals.EncodedGlobalVariables_shared) + 1
{
  var __flatten_4__2: Int
  __flatten_4__2 := globals.EncodedGlobalVariables_shared + 1
  globals.EncodedGlobalVariables_shared := __flatten_4__2
}

method MultiIncrement___contract_unsatisfiable__static_incr_this_many_EncodedGlobalVariables_MultiIncrement_Integer(globals: Ref, obj: Ref, N: Int)
{
  inhale true && (acc(obj.MultiIncrement_owned, write) && 0 <= N)
  // assert
  assert false
  inhale false
}

method MultiIncrement_static_incr_this_many_EncodedGlobalVariables_MultiIncrement_Integer(globals: Ref, obj: Ref, N: Int)
  requires acc(obj.MultiIncrement_owned, write)
  requires 0 <= N
  ensures acc(obj.MultiIncrement_owned, write)
  ensures obj.MultiIncrement_owned == old(obj.MultiIncrement_owned) + N
{
  var i__3: Int
  var __flatten_7__4: Int
  i__3 := N
  while (0 < i__3)
    invariant acc(obj.MultiIncrement_owned, write)
    invariant obj.MultiIncrement_owned + i__3 == old(obj.MultiIncrement_owned) + N
    invariant 0 <= i__3 
  {
    __flatten_7__4 := obj.MultiIncrement_owned + 1
    obj.MultiIncrement_owned := __flatten_7__4
    i__3 := i__3 - 1
  }
}

method MultiIncrement___contract_unsatisfiable__static_incr_shared_many_EncodedGlobalVariables_Integer(globals: Ref, N: Int)
{
  inhale true && (acc(globals.EncodedGlobalVariables_shared, write) && 0 <= N)
  // assert
  assert false
  inhale false
}

method MultiIncrement_static_incr_shared_many_EncodedGlobalVariables_Integer(globals: Ref, N: Int)
  requires acc(globals.EncodedGlobalVariables_shared, write)
  requires 0 <= N
  ensures acc(globals.EncodedGlobalVariables_shared, write)
  ensures globals.EncodedGlobalVariables_shared == old(globals.EncodedGlobalVariables_shared) + N
{
  var i__5: Int
  var __flatten_8__6: Int
  i__5 := N
  while (0 < i__5)
    invariant acc(globals.EncodedGlobalVariables_shared, write)
    invariant globals.EncodedGlobalVariables_shared + i__5 == old(globals.EncodedGlobalVariables_shared) + N
    invariant 0 <= i__5 
  {
    __flatten_8__6 := globals.EncodedGlobalVariables_shared + 1
    globals.EncodedGlobalVariables_shared := __flatten_8__6
    i__5 := i__5 - 1
  }
}

method MultiIncrement_incr_this_one_EncodedGlobalVariables(diz: Ref, globals: Ref)
  requires diz != null
  requires acc(diz.MultiIncrement_owned, write)
  ensures acc(diz.MultiIncrement_owned, write)
  ensures diz.MultiIncrement_owned == old(diz.MultiIncrement_owned) + 1
{
  inhale false
}

method MultiIncrement___contract_unsatisfiable__internal_incr_this_one_EncodedGlobalVariables(diz: Ref, globals: Ref)
  requires diz != null
{
  inhale true && acc(diz.MultiIncrement_owned, write)
  // assert
  assert false
  inhale false
}

method MultiIncrement_internal_incr_this_one_EncodedGlobalVariables(diz: Ref, globals: Ref)
  requires diz != null
  requires acc(diz.MultiIncrement_owned, write)
  ensures acc(diz.MultiIncrement_owned, write)
  ensures diz.MultiIncrement_owned == old(diz.MultiIncrement_owned) + 1
{
  var __flatten_1__7: Int
  __flatten_1__7 := diz.MultiIncrement_owned + 1
  diz.MultiIncrement_owned := __flatten_1__7
}

method MultiIncrement_incr_shared_one_EncodedGlobalVariables(diz: Ref, globals: Ref)
  requires diz != null
  requires acc(globals.EncodedGlobalVariables_shared, write)
  ensures acc(globals.EncodedGlobalVariables_shared, write)
  ensures globals.EncodedGlobalVariables_shared == old(globals.EncodedGlobalVariables_shared) + 1
{
  inhale false
}

method MultiIncrement___contract_unsatisfiable__internal_incr_shared_one_EncodedGlobalVariables(diz: Ref, globals: Ref)
  requires diz != null
{
  inhale true && acc(globals.EncodedGlobalVariables_shared, write)
  // assert
  assert false
  inhale false
}

method MultiIncrement_internal_incr_shared_one_EncodedGlobalVariables(diz: Ref, globals: Ref)
  requires diz != null
  requires acc(globals.EncodedGlobalVariables_shared, write)
  ensures acc(globals.EncodedGlobalVariables_shared, write)
  ensures globals.EncodedGlobalVariables_shared == old(globals.EncodedGlobalVariables_shared) + 1
{
  var __flatten_2__8: Int
  __flatten_2__8 := globals.EncodedGlobalVariables_shared + 1
  globals.EncodedGlobalVariables_shared := __flatten_2__8
}

method MultiIncrement_incr_this_many_EncodedGlobalVariables_Integer(diz: Ref, globals: Ref, N: Int)
  requires diz != null
  requires acc(diz.MultiIncrement_owned, write)
  requires 0 <= N
  ensures acc(diz.MultiIncrement_owned, write)
  ensures diz.MultiIncrement_owned == old(diz.MultiIncrement_owned) + N
{
  inhale false
}

method MultiIncrement___contract_unsatisfiable__internal_incr_this_many_EncodedGlobalVariables_Integer(diz: Ref, globals: Ref, N: Int)
  requires diz != null
{
  inhale true && (acc(diz.MultiIncrement_owned, write) && 0 <= N)
  // assert
  assert false
  inhale false
}

method MultiIncrement_internal_incr_this_many_EncodedGlobalVariables_Integer(diz: Ref, globals: Ref, N: Int)
  requires diz != null
  requires acc(diz.MultiIncrement_owned, write)
  requires 0 <= N
  ensures acc(diz.MultiIncrement_owned, write)
  ensures diz.MultiIncrement_owned == old(diz.MultiIncrement_owned) + N
{
  var i__9: Int
  var __flatten_5__10: Int
  i__9 := N
  while (0 < i__9)
    invariant acc(diz.MultiIncrement_owned, write)
    invariant diz.MultiIncrement_owned + i__9 == old(diz.MultiIncrement_owned) + N
    invariant 0 <= i__9 
  {
    __flatten_5__10 := diz.MultiIncrement_owned + 1
    diz.MultiIncrement_owned := __flatten_5__10
    i__9 := i__9 - 1
  }
}

method MultiIncrement_incr_shared_many_EncodedGlobalVariables_Integer(diz: Ref, globals: Ref, N: Int)
  requires diz != null
  requires acc(globals.EncodedGlobalVariables_shared, write)
  requires 0 <= N
  ensures acc(globals.EncodedGlobalVariables_shared, write)
  ensures globals.EncodedGlobalVariables_shared == old(globals.EncodedGlobalVariables_shared) + N
{
  inhale false
}

method MultiIncrement___contract_unsatisfiable__internal_incr_shared_many_EncodedGlobalVariables_Integer(diz: Ref, globals: Ref, N: Int)
  requires diz != null
{
  inhale true && (acc(globals.EncodedGlobalVariables_shared, write) && 0 <= N)
  // assert
  assert false
  inhale false
}

method MultiIncrement_internal_incr_shared_many_EncodedGlobalVariables_Integer(diz: Ref, globals: Ref, N: Int)
  requires diz != null
  requires acc(globals.EncodedGlobalVariables_shared, write)
  requires 0 <= N
  ensures acc(globals.EncodedGlobalVariables_shared, write)
  ensures globals.EncodedGlobalVariables_shared == old(globals.EncodedGlobalVariables_shared) + N
{
  var i__11: Int
  var __flatten_6__12: Int
  i__11 := N
  while (0 < i__11)
    invariant acc(globals.EncodedGlobalVariables_shared, write)
    invariant globals.EncodedGlobalVariables_shared + i__11 == old(globals.EncodedGlobalVariables_shared) + N
    invariant 0 <= i__11 
  {
    __flatten_6__12 := globals.EncodedGlobalVariables_shared + 1
    globals.EncodedGlobalVariables_shared := __flatten_6__12
    i__11 := i__11 - 1
  }
}