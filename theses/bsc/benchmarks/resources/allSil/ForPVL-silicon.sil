// Generated on 2021-03-23 at 23:31:05
domain TYPE {
  
  unique function class_For(): TYPE
  
  unique function class_java_DOT_lang_DOT_Object(): TYPE
  
  unique function class_EncodedGlobalVariables(): TYPE
  
  function directSuperclass(t: TYPE): TYPE
  
  function type_of(val: Ref): TYPE
  
  axiom For_directSuperclass {
    directSuperclass(class_For()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom EncodedGlobalVariables_directSuperclass {
    directSuperclass(class_EncodedGlobalVariables()) == class_java_DOT_lang_DOT_Object()
  }
}

function instanceof_TYPE_TYPE(t: TYPE, u: TYPE): Bool
  ensures result == (t == u || directSuperclass(t) == u)


method For___contract_unsatisfiable__test_EncodedGlobalVariables_Integer(diz: Ref, globals: Ref, n: Int) returns (sys__result: Int)
  requires diz != null
{
  inhale true && 0 <= n
  // assert
  assert false
  inhale false
}

method For_test_EncodedGlobalVariables_Integer(diz: Ref, globals: Ref, n: Int) returns (sys__result: Int)
  requires diz != null
  requires 0 <= n
  ensures sys__result == n * (n + 1) / 2
{
  var total__1: Int
  var i__2: Int
  var __flatten_1__3: Int
  total__1 := 0
  i__2 := 1
  while (i__2 != n + 1)
    invariant total__1 == i__2 * (i__2 - 1) / 2 
  {
    total__1 := total__1 + i__2
    __flatten_1__3 := i__2
    i__2 := i__2 + 1
  }
  sys__result := total__1
  // assert
  assert sys__result == n * (n + 1) / 2
  inhale false
}