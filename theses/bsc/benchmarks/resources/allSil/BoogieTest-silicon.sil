// Generated on 2021-03-23 at 23:29:30
domain TYPE {
  
  unique function class_java_DOT_lang_DOT_Object(): TYPE
  
  unique function class_BoogieTest(): TYPE
  
  unique function class_EncodedGlobalVariables(): TYPE
  
  function directSuperclass(t: TYPE): TYPE
  
  function type_of(val: Ref): TYPE
  
  axiom java_DOT_lang_DOT_Object_directSuperclass {
    directSuperclass(class_java_DOT_lang_DOT_Object()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom BoogieTest_directSuperclass {
    directSuperclass(class_BoogieTest()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom EncodedGlobalVariables_directSuperclass {
    directSuperclass(class_EncodedGlobalVariables()) == class_java_DOT_lang_DOT_Object()
  }
}

function instanceof_TYPE_TYPE(t: TYPE, u: TYPE): Bool
  ensures result == (t == u || directSuperclass(t) == u)


method java_DOT_lang_DOT_Object_Object_EncodedGlobalVariables(globals: Ref) returns (sys__result: Ref)
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Object()
{
  inhale false
}

method java_DOT_lang_DOT_Object_internal_Object_EncodedGlobalVariables(globals: Ref) returns (sys__result: Ref)
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Object()
{
  inhale false
}

method BoogieTest___contract_unsatisfiable__abs_EncodedGlobalVariables_Integer(__globals: Ref, __x: Int) returns (sys__result: Int)
{
  inhale true && true
  // assert
  assert false
  inhale false
}

method BoogieTest_abs_EncodedGlobalVariables_Integer(__globals: Ref, __x: Int) returns (sys__result: Int)
  ensures 0 <= sys__result && (sys__result == __x || sys__result == -__x)
{
  var sys__local__result__1: Int
  var globals__2: Ref
  var x__3: Int
  globals__2 := __globals
  x__3 := __x
  if (0 < x__3) {
    sys__local__result__1 := x__3
    // assert
    assert 0 <= sys__local__result__1 && (sys__local__result__1 == __x || sys__local__result__1 == -__x)
    goto __return_abs
  }
  sys__local__result__1 := -x__3
  // assert
  assert 0 <= sys__local__result__1 && (sys__local__result__1 == __x || sys__local__result__1 == -__x)
  goto __return_abs
  label __return_abs
  sys__result := sys__local__result__1
  // assert
  assert 0 <= sys__result && (sys__result == __x || sys__result == -__x)
  inhale false
}

method BoogieTest___contract_unsatisfiable__bad_incr_1_EncodedGlobalVariables_Integer(__globals: Ref, __x: Int) returns (sys__result: Int)
{
  inhale true && true
  // assert
  assert false
  inhale false
}

method BoogieTest_bad_incr_1_EncodedGlobalVariables_Integer(__globals: Ref, __x: Int) returns (sys__result: Int)
  ensures sys__result == __x + 1
{
  var sys__local__result__4: Int
  var globals__5: Ref
  var x__6: Int
  var __flatten_1__7: Int
  globals__5 := __globals
  x__6 := __x
  __flatten_1__7 := x__6
  x__6 := x__6 + 1
  sys__local__result__4 := __flatten_1__7
  // assert
  assert sys__local__result__4 == __x + 1
  goto __return_bad_incr_1
  label __return_bad_incr_1
  sys__result := sys__local__result__4
  // assert
  assert sys__result == __x + 1
  inhale false
}

method BoogieTest___contract_unsatisfiable__bad_incr_2_EncodedGlobalVariables_Integer(__globals: Ref, __x: Int) returns (sys__result: Int)
{
  inhale true && true
  // assert
  assert false
  inhale false
}

method BoogieTest_bad_incr_2_EncodedGlobalVariables_Integer(__globals: Ref, __x: Int) returns (sys__result: Int)
  ensures sys__result == __x + 1
{
  var sys__local__result__8: Int
  var globals__9: Ref
  var x__10: Int
  var __flatten_2__11: Int
  globals__9 := __globals
  x__10 := __x
  x__10 := x__10 + 1
  __flatten_2__11 := x__10
  sys__local__result__8 := __flatten_2__11
  // assert
  assert sys__local__result__8 == __x + 1
  goto __return_bad_incr_2
  label __return_bad_incr_2
  sys__result := sys__local__result__8
  // assert
  assert sys__result == __x + 1
  inhale false
}

method BoogieTest___contract_unsatisfiable__good_incr_1_EncodedGlobalVariables_Integer(__globals: Ref, __x: Int) returns (sys__result: Int)
{
  inhale true && true
  // assert
  assert false
  inhale false
}

method BoogieTest_good_incr_1_EncodedGlobalVariables_Integer(__globals: Ref, __x: Int) returns (sys__result: Int)
  ensures sys__result == __x + 1
{
  var sys__local__result__12: Int
  var globals__13: Ref
  var x__14: Int
  var res__15: Int
  globals__13 := __globals
  x__14 := __x
  res__15 := x__14 + 1
  sys__local__result__12 := res__15
  // assert
  assert sys__local__result__12 == __x + 1
  goto __return_good_incr_1
  label __return_good_incr_1
  sys__result := sys__local__result__12
  // assert
  assert sys__result == __x + 1
  inhale false
}

method BoogieTest___contract_unsatisfiable__good_incr_2_EncodedGlobalVariables_Integer(__globals: Ref, __x: Int) returns (sys__result: Int)
{
  inhale true && true
  // assert
  assert false
  inhale false
}

method BoogieTest_good_incr_2_EncodedGlobalVariables_Integer(__globals: Ref, __x: Int) returns (sys__result: Int)
  ensures sys__result == __x + 1
{
  var sys__local__result__16: Int
  var globals__17: Ref
  var x__18: Int
  var res__19: Int
  globals__17 := __globals
  x__18 := __x
  res__19 := BoogieTest_good_incr_1_EncodedGlobalVariables_Integer(globals__17, x__18)
  sys__local__result__16 := res__19
  // assert
  assert sys__local__result__16 == __x + 1
  goto __return_good_incr_2
  label __return_good_incr_2
  sys__result := sys__local__result__16
  // assert
  assert sys__result == __x + 1
  inhale false
}