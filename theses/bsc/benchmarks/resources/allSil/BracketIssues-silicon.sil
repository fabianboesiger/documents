// Generated on 2021-03-23 at 23:29:43
domain TYPE {
  
  unique function class_Test(): TYPE
  
  unique function class_java_DOT_lang_DOT_Object(): TYPE
  
  unique function class_EncodedGlobalVariables(): TYPE
  
  function directSuperclass(t: TYPE): TYPE
  
  function type_of(val: Ref): TYPE
  
  axiom Test_directSuperclass {
    directSuperclass(class_Test()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom EncodedGlobalVariables_directSuperclass {
    directSuperclass(class_EncodedGlobalVariables()) == class_java_DOT_lang_DOT_Object()
  }
}

function instanceof_TYPE_TYPE(t: TYPE, u: TYPE): Bool
  ensures result == (t == u || directSuperclass(t) == u)


method Test___contract_unsatisfiable__test1_EncodedGlobalVariables_Sequence$Integer$_Sequence$Integer$(diz: Ref, globals: Ref, xs: Seq[Int], ys: Seq[Int])
  requires diz != null
{
  inhale true && 0 < |xs|
  // assert
  assert false
  inhale false
}

method Test_test1_EncodedGlobalVariables_Sequence$Integer$_Sequence$Integer$(diz: Ref, globals: Ref, xs: Seq[Int], ys: Seq[Int])
  requires diz != null
  requires 0 < |xs|
{
  // assert
  assert xs[0] == xs ++ ys[0]
  // assert
  assert xs[0] == old(xs)[0]
}