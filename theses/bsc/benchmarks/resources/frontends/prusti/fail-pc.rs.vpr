domain $SnapshotMirrors$ {
  
  function mirror$m_fail_pc$$sum1$opensqu$0$closesqu$__$TY$__$int$$$int$__$TY$__$int$$$int$(_pure_1: Int): Int
  
  function mirror$m_fail_pc$$sum2$opensqu$0$closesqu$__$TY$__$int$$$int$__$TY$__$int$$$int$(_pure_1: Int): Int
}

field closure_0: Ref

field closure_1: Ref

field tuple_0: Ref

field tuple_1: Ref

field val_bool: Bool

field val_int: Int

field val_ref: Ref

function builtin$unreach_bool__$TY$__$bool$(): Bool
  requires false


function builtin$unreach_int__$TY$__$int$(): Int
  requires false


function m_fail_pc$$sum1$opensqu$0$closesqu$__$TY$__$int$$$int$(_pure_1: Int): Int
  requires true
  requires true
  ensures result == _pure_1 * (_pure_1 + 1) / 2
  ensures [result == mirror$m_fail_pc$$sum1$opensqu$0$closesqu$__$TY$__$int$$$int$__$TY$__$int$$$int$(_pure_1), true]
{
  (!(_pure_1 <= 0) ? m_fail_pc$$sum1$opensqu$0$closesqu$__$TY$__$int$$$int$(_pure_1 - 1) + _pure_1 : 0)
}

function m_fail_pc$$sum2$opensqu$0$closesqu$__$TY$__$int$$$int$(_pure_1: Int): Int
  requires true
  requires _pure_1 >= 0
  ensures result == _pure_1 * (_pure_1 + 1) / 2
  ensures [result == mirror$m_fail_pc$$sum2$opensqu$0$closesqu$__$TY$__$int$$$int$__$TY$__$int$$$int$(_pure_1), true]
{
  (!(_pure_1 <= 0) ? m_fail_pc$$sum2$opensqu$0$closesqu$__$TY$__$int$$$int$(_pure_1 - 1) + _pure_1 : 0)
}

function read$(): Perm
  ensures none < result
  ensures result < write


predicate DeadBorrowToken$(borrow: Int) 

predicate bool(self: Ref) {
  acc(self.val_bool, write)
}

predicate closure$0_1_10$3$1597337827284953432(self: Ref) 

predicate closure$0_1_11$4$16229172243933521810(self: Ref) 

predicate closure$0_1_12$2$3310155324070265804(self: Ref) 

predicate closure$0_1_13$2$3310155324070265804(self: Ref) 

predicate closure$0_1_9$4$16229172243933521810(self: Ref) 

predicate i32(self: Ref) {
  acc(self.val_int, write)
}

predicate ref$closure$0_1_10$3$1597337827284953432(self: Ref) {
  acc(self.val_ref, write) && acc(closure$0_1_10$3$1597337827284953432(self.val_ref), write)
}

predicate ref$closure$0_1_11$4$16229172243933521810(self: Ref) {
  acc(self.val_ref, write) && acc(closure$0_1_11$4$16229172243933521810(self.val_ref), write)
}

predicate ref$closure$0_1_12$2$3310155324070265804(self: Ref) {
  acc(self.val_ref, write) && acc(closure$0_1_12$2$3310155324070265804(self.val_ref), write)
}

predicate ref$closure$0_1_13$2$3310155324070265804(self: Ref) {
  acc(self.val_ref, write) && acc(closure$0_1_13$2$3310155324070265804(self.val_ref), write)
}

predicate ref$closure$0_1_9$4$16229172243933521810(self: Ref) {
  acc(self.val_ref, write) && acc(closure$0_1_9$4$16229172243933521810(self.val_ref), write)
}

predicate ref$i32(self: Ref) {
  acc(self.val_ref, write) && acc(i32(self.val_ref), write)
}

predicate tuple0$(self: Ref) {
  true
}

predicate tuple2$i32$bool(self: Ref) {
  acc(self.tuple_0, write) && (acc(i32(self.tuple_0), write) && (acc(self.tuple_1, write) && acc(bool(self.tuple_1), write)))
}

method m_fail_pc$$main$opensqu$0$closesqu$() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Name: "fail_pc::main"
  
  // Def path: "fail_pc::main[0]"
  
  // Span: tests/verify/fail/pure-fn/fail-pc.rs:18:1: 18:13
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale m_fail_pc$$sum1$opensqu$0$closesqu$__$TY$__$int$$$int$(-1) == 0 && m_fail_pc$$sum2$opensqu$0$closesqu$__$TY$__$int$$$int$(-1) == 0
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = ()
  
  _0 := builtin$havoc_ref()
  inhale acc(tuple0$(_0), write)
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  // obtain acc(tuple0$(_0), write)
  
  assert true
  exhale acc(tuple0$(_0), write)
  goto end_of_method
  label end_of_method
}

method builtin$havoc_int() returns (ret: Int)


method builtin$havoc_ref() returns (ret: Ref)


method builtin$havoc_bool() returns (ret: Bool)
