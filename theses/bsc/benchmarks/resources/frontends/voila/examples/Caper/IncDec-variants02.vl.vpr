domain Map[U, V] {
  
  function Map_keys(m: Map[U, V]): Set[U]
  
  function Map_card(m: Map[U, V]): Int
  
  function Map_lookup(m: Map[U, V], u: U): V
  
  function Map_values(m: Map[U, V]): Set[V]
  
  function Map_empty(): Map[U, V]
  
  function Map_build(m: Map[U, V], u: U, v: V): Map[U, V]
  
  function Map_equal(m1: Map[U, V], m2: Map[U, V]): Bool
  
  function Map_disjoint(m1: Map[U, V], m2: Map[U, V]): Bool
  
  function Map_union(m1: Map[U, V], m2: Map[U, V]): Map[U, V]
  
  axiom Map_card_non_neg {
    (forall m: Map[U, V] :: { Map_card(m) } 0 <= Map_card(m))
  }
  
  axiom Map_card_domain {
    (forall m: Map[U, V] :: { |Map_keys(m)| } |Map_keys(m)| == Map_card(m))
  }
  
  axiom Map_values_def {
    (forall m: Map[U, V], v: V :: { (v in Map_values(m)) } (v in Map_values(m)) == (exists u: U :: (u in Map_keys(m)) && v == Map_lookup(m, u)))
  }
  
  axiom Map_empty_1 {
    (forall u: U :: { (u in Map_keys(Map_empty())) } !((u in Map_keys(Map_empty()))))
  }
  
  axiom Map_empty_2 {
    (forall m: Map[U, V] :: { Map_card(m) } (Map_card(m) == 0) == (m == Map_empty()) && (Map_card(m) != 0 ==> (exists u: U :: (u in Map_keys(m)))))
  }
  
  axiom Map_build_1 {
    (forall m: Map[U, V], u1: U, u2: U, v: V :: { (u2 in Map_keys(Map_build(m, u1, v))) } (u2 == u1 ==> (u2 in Map_keys(Map_build(m, u1, v))) && Map_lookup(Map_build(m, u1, v), u1) == v) && (u2 != u1 ==> (u2 in Map_keys(Map_build(m, u1, v))) == (u2 in Map_keys(m)) && Map_lookup(Map_build(m, u1, v), u2) == Map_lookup(m, u2)))
  }
  
  axiom Map_build_2 {
    (forall m: Map[U, V], u: U, v: V :: { Map_card(Map_build(m, u, v)) } (u in Map_keys(m)) ==> Map_card(Map_build(m, u, v)) == Map_card(m))
  }
  
  axiom Map_build_3 {
    (forall m: Map[U, V], u: U, v: V :: { Map_card(Map_build(m, u, v)) } !((u in Map_keys(m))) ==> Map_card(Map_build(m, u, v)) == Map_card(m) + 1)
  }
  
  axiom Map_equality {
    (forall m1: Map[U, V], m2: Map[U, V] :: { Map_equal(m1, m2) } Map_equal(m1, m2) == (forall u: U :: { (u in Map_keys(m1)) } { (u in Map_keys(m2)) } (u in Map_keys(m1)) == (u in Map_keys(m2))))
  }
  
  axiom Map_extensionality {
    (forall m1: Map[U, V], m2: Map[U, V] :: { Map_equal(m1, m2) } Map_equal(m1, m2) ==> m1 == m2)
  }
  
  axiom Map_disjoint_def {
    (forall m1: Map[U, V], m2: Map[U, V] :: { Map_disjoint(m1, m2) } Map_disjoint(m1, m2) == (forall u: U :: { (u in Map_keys(m1)) } { (u in Map_keys(m2)) } !((u in Map_keys(m1))) || !((u in Map_keys(m2)))))
  }
  
  axiom Map_union_1 {
    (forall m1: Map[U, V], m2: Map[U, V], u: U :: { (u in Map_keys(Map_union(m1, m2))) } { (u in (Map_keys(m1) union Map_keys(m2))) } Map_disjoint(m1, m2) ==> (u in Map_keys(Map_union(m1, m2))) == (u in (Map_keys(m1) union Map_keys(m2))))
  }
  
  axiom Map_union_2 {
    (forall m1: Map[U, V], m2: Map[U, V], u: U :: { Map_lookup(Map_union(m1, m2), u) } Map_disjoint(m1, m2) && (u in Map_keys(m1)) ==> Map_lookup(Map_union(m1, m2), u) == Map_lookup(m1, u))
  }
  
  axiom Map_union_3 {
    (forall m1: Map[U, V], m2: Map[U, V], u: U :: { Map_lookup(Map_union(m1, m2), u) } Map_disjoint(m1, m2) && (u in Map_keys(m2)) ==> Map_lookup(Map_union(m1, m2), u) == Map_lookup(m2, u))
  }
}

domain trigger_functions {
  
  function Cell_state_T(s: Ref, lvl: Int, x: Ref): Bool
  
  function IncDec_state_T(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref): Bool
}

domain interferenceReference_Domain {
  
  function Cell_interferenceReference_df($p0: Int, s: Ref, lvl: Int, x: Ref): Bool
  
  function IncDec_interferenceReference_df($p0: Int, r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref): Bool
}

domain interferenceSet_Domain {
  
  function Cell_interferenceSet_df($p0: Int, s: Ref, lvl: Int, x: Ref): Set[Int]
  
  function IncDec_interferenceSet_df($p0: Int, r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref): Set[Int]
}

domain atomicity_context_Domain {
  
  function Cell_atomicity_context_df(s: Ref, lvl: Int, x: Ref): Bool
  
  function IncDec_atomicity_context_df(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref): Bool
}

field $diamond: Int

field $stepFrom_int: Int

field $stepTo_int: Int

field $memcell_$val: Int

function IntSet(): Set[Int]
  ensures (forall n: Int :: (n in result))


function NatSet(): Set[Int]
  ensures (forall n: Int :: 0 <= n == (n in result))


function comprehension_83_300($s_0: Int): Set[Int]
  ensures (forall $k: Int :: ($k in result) == $s_0 <= $k)


function comprehension_71_290($s_0: Int): Set[Int]
  ensures (forall $k: Int :: ($k in result) == $k <= $s_0)


function Cell_atomicity_context_hf(s: Ref, lvl: Int, x: Ref): Set[Int]
  requires acc(Cell_atomicity_context_fp(s, lvl, x), write)
  ensures [Cell_atomicity_context_df(s, lvl, x), true]


function Cell_interferenceSet_hf($p0: Int, s: Ref, lvl: Int, x: Ref): Set[Int]
  requires acc(Cell_interferenceContext_fp(s, lvl, x), write)
  ensures [(forall $_m: Int :: { ($_m in result) } ($_m in result) ==> ($_m in Cell_interferenceSet_df($p0, s, lvl, x))), true]


function Cell_interferenceReference_hf($p0: Int, s: Ref, lvl: Int, x: Ref): Int
  requires acc(Cell_interferenceContext_fp(s, lvl, x), write)
  ensures [Cell_interferenceReference_df($p0, s, lvl, x), true]


function Cell_sk_$_action_n(s: Ref, lvl: Int, x: Ref): Int
  requires acc(Cell_sk_fp(), write)


function Cell_sk_$_action_m(s: Ref, lvl: Int, x: Ref): Int
  requires acc(Cell_sk_fp(), write)


function Cell_state(s: Ref, lvl: Int, x: Ref): Int
  requires acc(Cell(s, lvl, x), write)
  ensures [Cell_state_T(s, lvl, x), true]
{
  (unfolding acc(Cell(s, lvl, x), write) in x.$memcell_$val)
}

function IncDec_atomicity_context_hf(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref): Set[Int]
  requires acc(IncDec_atomicity_context_fp(r, alvl, s, lvl, x), write)
  ensures [IncDec_atomicity_context_df(r, alvl, s, lvl, x), true]


function IncDec_interferenceSet_hf($p0: Int, r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref): Set[Int]
  requires acc(IncDec_interferenceContext_fp(r, alvl, s, lvl, x), write)
  ensures [(forall $_m: Int :: { ($_m in result) } ($_m in result) ==> ($_m in IncDec_interferenceSet_df($p0, r, alvl, s, lvl, x))), true]


function IncDec_interferenceReference_hf($p0: Int, r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref): Int
  requires acc(IncDec_interferenceContext_fp(r, alvl, s, lvl, x), write)
  ensures [IncDec_interferenceReference_df($p0, r, alvl, s, lvl, x), true]


function IncDec_sk_$_action_n(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref): Int
  requires acc(IncDec_sk_fp(), write)


function IncDec_sk_$_action_m(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref): Int
  requires acc(IncDec_sk_fp(), write)


function IncDec_state(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref): Int
  requires acc(IncDec(r, alvl, s, lvl, x), write)
  ensures [IncDec_state_T(r, alvl, s, lvl, x), true]
{
  (unfolding acc(IncDec(r, alvl, s, lvl, x), write) in Cell_state(s, lvl, x))
}

predicate Cell_G($r: Ref) 

predicate Cell_atomicity_context_fp(s: Ref, lvl: Int, x: Ref) 

predicate Cell_interferenceContext_fp(s: Ref, lvl: Int, x: Ref) 

predicate Cell_sk_fp() 

predicate Cell(s: Ref, lvl: Int, x: Ref) {
  acc(x.$memcell_$val, write) && true
}

predicate IncDec_INC($r: Ref) 

predicate IncDec_DEC($r: Ref) 

predicate IncDec_atomicity_context_fp(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref) 

predicate IncDec_interferenceContext_fp(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref) 

predicate IncDec_sk_fp() 

predicate IncDec(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref) {
  acc(Cell(s, lvl, x), write) && (lvl >= 0 && true) && lvl < alvl && acc(Cell_G(s), write)
}

method havoc_Bool() returns ($r: Bool)


method havoc_Ref() returns ($r: Ref)


method havoc_Int() returns ($r: Int)


method havoc_Set_Int_() returns ($r: Set[Int])


method ___silicon_hack407_havoc_all_Cell()


method ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()


method ___silicon_hack407_havoc_all_IncDec()


method ___silicon_hack407_havoc_all_IncDec_interferenceContext_fp()


method spinIncBy(s: Ref, lvl: Int, x: Ref, k: Int, from: Set[Int])
  requires acc(Cell(s, lvl, x), write) && (lvl >= 0 && Cell_state(s, lvl, x) == Cell_state(s, lvl, x)) && acc(Cell_G(s), write)
  requires !(k == 0)
  requires (Cell_state(s, lvl, x) in from)
  ensures acc(Cell(s, lvl, x), write) && (lvl >= 0 && true) && acc(Cell_G(s), write)
  ensures Cell_state(s, lvl, x) == old(Cell_state(s, lvl, x)) + k
{
  var v: Int
  var b: Bool
  var $_levelVar_0: Int
  var $_levelVar_1: Int
  var $_levelVar_2: Int
  var $_levelVar_3: Int
  var $_levelVar_4: Int
  var $_levelVar_5: Int
  var $_levelVar_6: Int
  var $_levelVar_7: Int
  var $_levelVar_8: Int
  var $_levelVar_9: Int
  var $_levelVar_10: Int
  inhale $_levelVar_0 >= 0 && $_levelVar_0 > lvl
  assert $_levelVar_0 >= 0
  inhale acc(Cell_sk_fp(), write) && acc(IncDec_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $s: Ref, $lvl: Int, $x: Ref :: acc(Cell_interferenceContext_fp($s, $lvl, $x), write))
  inhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: acc(IncDec_interferenceContext_fp($r, $alvl, $s, $lvl, $x), write))
  inhale Cell_interferenceSet_hf(0, s, lvl, x) == from
  inhale Cell_interferenceReference_hf(0, s, lvl, x) == old(Cell_state(s, lvl, x))
  
  // ------- make-atomic BEGIN -------
  
  
  label guard_arg_eval0
  exhale acc(Cell_G(s), write)
  exhale acc(Cell(s, lvl, x), write)
  label preFrame0
  
  // ------- Stabilising regions Cell,IncDec (stabelizing the frame) BEGIN 
  
  
  label pre_stabilize0
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize0](perm(Cell($s, $lvl, $x))) ==> (none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> (Cell_state($s, $lvl, $x) in Cell_atomicity_context_hf($s, $lvl, $x))) && (Cell_state($s, $lvl, $x) == old[pre_stabilize0](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize0](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == Cell_state($s, $lvl, $x) && true && perm(Cell_G($s)) == none))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize0](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && (IncDec_state($r, $alvl, $s, $lvl, $x) == old[pre_stabilize0](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize0](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize0](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize0](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))
  
  // ------- Stabilising regions Cell,IncDec (stabelizing the frame) END 
  
  
  exhale (forall $s: Ref, $lvl: Int, $x: Ref :: acc(Cell($s, $lvl, $x), old[preFrame0](perm(Cell($s, $lvl, $x)))))
  exhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: acc(IncDec($r, $alvl, $s, $lvl, $x), old[preFrame0](perm(IncDec($r, $alvl, $s, $lvl, $x)))))
  exhale (forall $$r: Ref :: acc(Cell_G($$r), old[preFrame0](perm(Cell_G($$r)))))
  exhale (forall $$r: Ref :: acc(IncDec_INC($$r), old[preFrame0](perm(IncDec_INC($$r)))))
  exhale (forall $$r: Ref :: acc(IncDec_DEC($$r), old[preFrame0](perm(IncDec_DEC($$r)))))
  exhale (forall $$_r: Ref :: acc($$_r.$memcell_$val, old[preFrame0](perm($$_r.$memcell_$val))))
  inhale acc(Cell(s, lvl, x), write)
  inhale acc(s.$diamond, write)
  $_levelVar_1 := lvl
  assert perm(Cell_atomicity_context_fp(s, lvl, x)) == none
  inhale acc(Cell_atomicity_context_fp(s, lvl, x), write)
  inhale Cell_atomicity_context_hf(s, lvl, x) == Cell_interferenceSet_hf(0, s, lvl, x)
  
  // ------- Stabilising regions Cell (before atomic) BEGIN 
  
  
  label pre_stabilize
  
  // Stabilising single instance of region Cell
  
  ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forall $$_m: Int :: { ($$_m in Cell_interferenceSet_df(1, s, lvl, x)) } ($$_m in Cell_interferenceSet_hf(1, s, lvl, x)) == ((none < perm(s.$diamond) && none < perm(Cell_atomicity_context_fp(s, lvl, x)) ==> ($$_m in Cell_atomicity_context_hf(s, lvl, x))) && ($$_m == old[pre_stabilize](Cell_state(s, lvl, x)) || Cell_sk_$_action_n(s, lvl, x) == old[pre_stabilize](Cell_state(s, lvl, x)) && Cell_sk_$_action_m(s, lvl, x) == $$_m && true && perm(Cell_G(s)) == none)))
  ___silicon_hack407_havoc_all_Cell()
  inhale (Cell_state(s, lvl, x) in Cell_interferenceSet_hf(1, s, lvl, x))
  
  // havoc performed by other front resource
  
  
  inhale Cell_interferenceReference_hf(1, s, lvl, x) == old[pre_stabilize](Cell_state(s, lvl, x))
  
  // ------- Stabilising regions Cell (before atomic) END 
  
  
  
  // ------- open-region BEGIN -------
  
  
  label pre_open_region0
  assert $_levelVar_0 > lvl
  $_levelVar_2 := lvl
  unfold acc(Cell(s, lvl, x), write)
  
  // no interference context translation needed
  
  
  
  // ------- heap-read BEGIN ---------
  
  
  v := x.$memcell_$val
  
  // ------- heap-read END -----------
  
  
  
  // ------- assert BEGIN ------------
  
  
  assert (v in from)
  
  // ------- assert END --------------
  
  
  fold acc(Cell(s, lvl, x), write)
  assert Cell_state(s, lvl, x) == old[pre_open_region0](Cell_state(s, lvl, x))
  $_levelVar_3 := $_levelVar_0
  
  // ------- open-region END ---------
  
  
  
  // ------- Stabilising regions Cell,IncDec (after open-region@29.7) BEGIN 
  
  
  label pre_stabilize3
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in Cell_interferenceSet_df(2, $s, $lvl, $x)) } none < old[pre_stabilize3](perm(Cell($s, $lvl, $x))) ==> ($$_m in Cell_interferenceSet_hf(2, $s, $lvl, $x)) == ((none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> ($$_m in Cell_atomicity_context_hf($s, $lvl, $x))) && ($$_m == old[pre_stabilize3](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize3](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == $$_m && true && perm(Cell_G($s)) == none))))
  ___silicon_hack407_havoc_all_Cell()
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize3](perm(Cell($s, $lvl, $x))) ==> (Cell_state($s, $lvl, $x) in Cell_interferenceSet_hf(2, $s, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize3](perm(Cell($s, $lvl, $x))) ==> Cell_interferenceReference_hf(2, $s, $lvl, $x) == old[pre_stabilize3](Cell_state($s, $lvl, $x)))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec_interferenceContext_fp()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in IncDec_interferenceSet_df(2, $r, $alvl, $s, $lvl, $x)) } none < old[pre_stabilize3](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> ($$_m in IncDec_interferenceSet_hf(2, $r, $alvl, $s, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> ($$_m in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && ($$_m == old[pre_stabilize3](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize3](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize3](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize3](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))))
  ___silicon_hack407_havoc_all_IncDec()
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize3](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_interferenceSet_hf(2, $r, $alvl, $s, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize3](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> IncDec_interferenceReference_hf(2, $r, $alvl, $s, $lvl, $x) == old[pre_stabilize3](IncDec_state($r, $alvl, $s, $lvl, $x)))
  
  // ------- Stabilising regions Cell,IncDec (after open-region@29.7) END 
  
  
  
  // ------- update-region BEGIN -----
  
  
  exhale acc(s.$diamond, write)
  label pre_region_update0
  assert $_levelVar_3 > lvl
  $_levelVar_4 := lvl
  exhale acc(Cell_atomicity_context_fp(s, lvl, x), write)
  unfold acc(Cell(s, lvl, x), write)
  
  // no interference context translation needed
  
  
  
  // ------- Havocking regions Cell (before update-region@37.7) BEGIN 
  
  
  label pre_havoc0
  
  // Havocking single instance of region Cell
  
  ___silicon_hack407_havoc_all_Cell()
  
  // ------- Havocking regions Cell (before update-region@37.7) END 
  
  
  
  // ------- call:CAS BEGIN ----------
  
  
  assert true
  label pre_call0
  assert $_levelVar_4 >= 0
  assert true
  exhale acc(x.$memcell_$val, write) && true
  
  // ------- Stabilising regions Cell,IncDec (before call:CAS@40.9) BEGIN 
  
  
  label pre_stabilize4
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize4](perm(Cell($s, $lvl, $x))) ==> (none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> (Cell_state($s, $lvl, $x) in Cell_atomicity_context_hf($s, $lvl, $x))) && (Cell_state($s, $lvl, $x) == old[pre_stabilize4](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize4](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == Cell_state($s, $lvl, $x) && true && perm(Cell_G($s)) == none))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize4](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && (IncDec_state($r, $alvl, $s, $lvl, $x) == old[pre_stabilize4](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize4](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize4](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize4](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))
  
  // ------- Stabilising regions Cell,IncDec (before call:CAS@40.9) END 
  
  
  b := havoc_Bool()
  inhale (old[pre_call0](x.$memcell_$val) == v ? b && (acc(x.$memcell_$val, write) && x.$memcell_$val == v + k) : !b && (acc(x.$memcell_$val, write) && x.$memcell_$val == old[pre_call0](x.$memcell_$val)))
  
  // ------- call:CAS END ------------
  
  
  fold acc(Cell(s, lvl, x), write)
  if (Cell_state(s, lvl, x) != old[pre_region_update0](Cell_state(s, lvl, x))) {
    inhale acc(s.$stepFrom_int, write) && acc(s.$stepTo_int, write)
    s.$stepFrom_int := old[pre_region_update0](Cell_state(s, lvl, x))
    s.$stepTo_int := Cell_state(s, lvl, x)
  } else {
    inhale acc(s.$diamond, write)
  }
  inhale acc(Cell_atomicity_context_fp(s, lvl, x), write)
  inhale Cell_atomicity_context_hf(s, lvl, x) == old[pre_region_update0](Cell_atomicity_context_hf(s, lvl, x))
  $_levelVar_5 := $_levelVar_3
  
  // ------- update-region END -------
  
  
  
  // ------- Stabilising regions Cell,IncDec (after update-region@37.7) BEGIN 
  
  
  label pre_stabilize5
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in Cell_interferenceSet_df(3, $s, $lvl, $x)) } none < old[pre_stabilize5](perm(Cell($s, $lvl, $x))) ==> ($$_m in Cell_interferenceSet_hf(3, $s, $lvl, $x)) == ((none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> ($$_m in Cell_atomicity_context_hf($s, $lvl, $x))) && ($$_m == old[pre_stabilize5](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize5](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == $$_m && true && perm(Cell_G($s)) == none))))
  ___silicon_hack407_havoc_all_Cell()
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize5](perm(Cell($s, $lvl, $x))) ==> (Cell_state($s, $lvl, $x) in Cell_interferenceSet_hf(3, $s, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize5](perm(Cell($s, $lvl, $x))) ==> Cell_interferenceReference_hf(3, $s, $lvl, $x) == old[pre_stabilize5](Cell_state($s, $lvl, $x)))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec_interferenceContext_fp()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in IncDec_interferenceSet_df(3, $r, $alvl, $s, $lvl, $x)) } none < old[pre_stabilize5](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> ($$_m in IncDec_interferenceSet_hf(3, $r, $alvl, $s, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> ($$_m in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && ($$_m == old[pre_stabilize5](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize5](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize5](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize5](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))))
  ___silicon_hack407_havoc_all_IncDec()
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize5](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_interferenceSet_hf(3, $r, $alvl, $s, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize5](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> IncDec_interferenceReference_hf(3, $r, $alvl, $s, $lvl, $x) == old[pre_stabilize5](IncDec_state($r, $alvl, $s, $lvl, $x)))
  
  // ------- Stabilising regions Cell,IncDec (after update-region@37.7) END 
  
  
  
  // ------- while BEGIN -------------
  
  
  label preWhile0
  while (!b)
    invariant acc(Cell(s, lvl, x), write) && (lvl >= 0 && true)
    invariant (!b ? acc(s.$diamond, write) : true)
    invariant (b ? acc(s.$stepFrom_int, write) && s.$stepFrom_int == v && (acc(s.$stepTo_int, write) && s.$stepTo_int == v + k) && (v in from) : true) 
  {
    inhale acc(Cell_sk_fp(), write) && acc(IncDec_sk_fp(), write)
    
    // no init required
    
    
    
    // no init required
    
    
    inhale (forall $s: Ref, $lvl: Int, $x: Ref :: acc(Cell_interferenceContext_fp($s, $lvl, $x), write))
    inhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: acc(IncDec_interferenceContext_fp($r, $alvl, $s, $lvl, $x), write))
    inhale (forall $s: Ref, $lvl: Int, $x: Ref :: acc(Cell_atomicity_context_fp($s, $lvl, $x), old[preWhile0](perm(Cell_atomicity_context_fp($s, $lvl, $x)))))
    inhale (forall $s: Ref, $lvl: Int, $x: Ref :: { Cell_atomicity_context_df($s, $lvl, $x) } none < old[preWhile0](perm(Cell_atomicity_context_fp($s, $lvl, $x))) ==> Cell_atomicity_context_hf($s, $lvl, $x) == old[preWhile0](Cell_atomicity_context_hf($s, $lvl, $x)))
    inhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: acc(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x), old[preWhile0](perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)))))
    inhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: { IncDec_atomicity_context_df($r, $alvl, $s, $lvl, $x) } none < old[preWhile0](perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x))) ==> IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x) == old[preWhile0](IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x)))
    
    // ------- Inferring interference context Cell,IncDec (infer context inside while) BEGIN 
    
    
    label pre_infer0
    
    // Inferring interference all instances of region Cell
    
    ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
    exhale acc(Cell_sk_fp(), write)
    inhale acc(Cell_sk_fp(), write)
    inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in Cell_interferenceSet_df(4, $s, $lvl, $x)) } none < old[pre_infer0](perm(Cell($s, $lvl, $x))) ==> ($$_m in Cell_interferenceSet_hf(4, $s, $lvl, $x)) == ((none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> ($$_m in Cell_atomicity_context_hf($s, $lvl, $x))) && ($$_m == old[pre_infer0](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_infer0](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == $$_m && true && perm(Cell_G($s)) == none))))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_infer0](perm(Cell($s, $lvl, $x))) ==> Cell_interferenceReference_hf(4, $s, $lvl, $x) == old[pre_infer0](Cell_state($s, $lvl, $x)))
    
    // Inferring interference all instances of region IncDec
    
    ___silicon_hack407_havoc_all_IncDec_interferenceContext_fp()
    exhale acc(IncDec_sk_fp(), write)
    inhale acc(IncDec_sk_fp(), write)
    inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in IncDec_interferenceSet_df(4, $r, $alvl, $s, $lvl, $x)) } none < old[pre_infer0](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> ($$_m in IncDec_interferenceSet_hf(4, $r, $alvl, $s, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> ($$_m in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && ($$_m == old[pre_infer0](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer0](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer0](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer0](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_infer0](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> IncDec_interferenceReference_hf(4, $r, $alvl, $s, $lvl, $x) == old[pre_infer0](IncDec_state($r, $alvl, $s, $lvl, $x)))
    
    // ------- Inferring interference context Cell,IncDec (infer context inside while) END 
    
    
    
    // ------- open-region BEGIN -------
    
    
    label pre_open_region
    assert $_levelVar_5 > lvl
    $_levelVar_6 := lvl
    unfold acc(Cell(s, lvl, x), write)
    
    // no interference context translation needed
    
    
    
    // ------- heap-read BEGIN ---------
    
    
    v := x.$memcell_$val
    
    // ------- heap-read END -----------
    
    
    
    // ------- assert BEGIN ------------
    
    
    assert (v in from)
    
    // ------- assert END --------------
    
    
    fold acc(Cell(s, lvl, x), write)
    assert Cell_state(s, lvl, x) == old[pre_open_region](Cell_state(s, lvl, x))
    $_levelVar_7 := $_levelVar_5
    
    // ------- open-region END ---------
    
    
    
    // ------- Stabilising regions Cell,IncDec (after open-region@29.7) BEGIN 
    
    
    label pre_stabilize6
    
    // Stabilising all instances of region Cell
    
    ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
    exhale acc(Cell_sk_fp(), write)
    inhale acc(Cell_sk_fp(), write)
    inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in Cell_interferenceSet_df(5, $s, $lvl, $x)) } none < old[pre_stabilize6](perm(Cell($s, $lvl, $x))) ==> ($$_m in Cell_interferenceSet_hf(5, $s, $lvl, $x)) == ((none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> ($$_m in Cell_atomicity_context_hf($s, $lvl, $x))) && ($$_m == old[pre_stabilize6](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize6](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == $$_m && true && perm(Cell_G($s)) == none))))
    ___silicon_hack407_havoc_all_Cell()
    inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize6](perm(Cell($s, $lvl, $x))) ==> (Cell_state($s, $lvl, $x) in Cell_interferenceSet_hf(5, $s, $lvl, $x)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize6](perm(Cell($s, $lvl, $x))) ==> Cell_interferenceReference_hf(5, $s, $lvl, $x) == old[pre_stabilize6](Cell_state($s, $lvl, $x)))
    
    // Stabilising all instances of region IncDec
    
    ___silicon_hack407_havoc_all_IncDec_interferenceContext_fp()
    exhale acc(IncDec_sk_fp(), write)
    inhale acc(IncDec_sk_fp(), write)
    inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in IncDec_interferenceSet_df(5, $r, $alvl, $s, $lvl, $x)) } none < old[pre_stabilize6](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> ($$_m in IncDec_interferenceSet_hf(5, $r, $alvl, $s, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> ($$_m in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && ($$_m == old[pre_stabilize6](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize6](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize6](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize6](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))))
    ___silicon_hack407_havoc_all_IncDec()
    inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize6](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_interferenceSet_hf(5, $r, $alvl, $s, $lvl, $x)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize6](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> IncDec_interferenceReference_hf(5, $r, $alvl, $s, $lvl, $x) == old[pre_stabilize6](IncDec_state($r, $alvl, $s, $lvl, $x)))
    
    // ------- Stabilising regions Cell,IncDec (after open-region@29.7) END 
    
    
    
    // ------- update-region BEGIN -----
    
    
    exhale acc(s.$diamond, write)
    label pre_region_update
    assert $_levelVar_7 > lvl
    $_levelVar_8 := lvl
    exhale acc(Cell_atomicity_context_fp(s, lvl, x), write)
    unfold acc(Cell(s, lvl, x), write)
    
    // no interference context translation needed
    
    
    
    // ------- Havocking regions Cell (before update-region@37.7) BEGIN 
    
    
    label pre_havoc
    
    // Havocking single instance of region Cell
    
    ___silicon_hack407_havoc_all_Cell()
    
    // ------- Havocking regions Cell (before update-region@37.7) END 
    
    
    
    // ------- call:CAS BEGIN ----------
    
    
    assert true
    label pre_call
    assert $_levelVar_8 >= 0
    assert true
    exhale acc(x.$memcell_$val, write) && true
    
    // ------- Stabilising regions Cell,IncDec (before call:CAS@40.9) BEGIN 
    
    
    label pre_stabilize7
    
    // Stabilising all instances of region Cell
    
    ___silicon_hack407_havoc_all_Cell()
    exhale acc(Cell_sk_fp(), write)
    inhale acc(Cell_sk_fp(), write)
    inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize7](perm(Cell($s, $lvl, $x))) ==> (none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> (Cell_state($s, $lvl, $x) in Cell_atomicity_context_hf($s, $lvl, $x))) && (Cell_state($s, $lvl, $x) == old[pre_stabilize7](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize7](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == Cell_state($s, $lvl, $x) && true && perm(Cell_G($s)) == none))
    
    // Stabilising all instances of region IncDec
    
    ___silicon_hack407_havoc_all_IncDec()
    exhale acc(IncDec_sk_fp(), write)
    inhale acc(IncDec_sk_fp(), write)
    inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize7](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && (IncDec_state($r, $alvl, $s, $lvl, $x) == old[pre_stabilize7](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize7](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize7](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize7](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))
    
    // ------- Stabilising regions Cell,IncDec (before call:CAS@40.9) END 
    
    
    b := havoc_Bool()
    inhale (old[pre_call](x.$memcell_$val) == v ? b && (acc(x.$memcell_$val, write) && x.$memcell_$val == v + k) : !b && (acc(x.$memcell_$val, write) && x.$memcell_$val == old[pre_call](x.$memcell_$val)))
    
    // ------- call:CAS END ------------
    
    
    fold acc(Cell(s, lvl, x), write)
    if (Cell_state(s, lvl, x) != old[pre_region_update](Cell_state(s, lvl, x))) {
      inhale acc(s.$stepFrom_int, write) && acc(s.$stepTo_int, write)
      s.$stepFrom_int := old[pre_region_update](Cell_state(s, lvl, x))
      s.$stepTo_int := Cell_state(s, lvl, x)
    } else {
      inhale acc(s.$diamond, write)
    }
    inhale acc(Cell_atomicity_context_fp(s, lvl, x), write)
    inhale Cell_atomicity_context_hf(s, lvl, x) == old[pre_region_update](Cell_atomicity_context_hf(s, lvl, x))
    $_levelVar_9 := $_levelVar_7
    
    // ------- update-region END -------
    
    
    
    // ------- Stabilising regions Cell,IncDec (after update-region@37.7) BEGIN 
    
    
    label pre_stabilize8
    
    // Stabilising all instances of region Cell
    
    ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
    exhale acc(Cell_sk_fp(), write)
    inhale acc(Cell_sk_fp(), write)
    inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in Cell_interferenceSet_df(6, $s, $lvl, $x)) } none < old[pre_stabilize8](perm(Cell($s, $lvl, $x))) ==> ($$_m in Cell_interferenceSet_hf(6, $s, $lvl, $x)) == ((none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> ($$_m in Cell_atomicity_context_hf($s, $lvl, $x))) && ($$_m == old[pre_stabilize8](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize8](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == $$_m && true && perm(Cell_G($s)) == none))))
    ___silicon_hack407_havoc_all_Cell()
    inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize8](perm(Cell($s, $lvl, $x))) ==> (Cell_state($s, $lvl, $x) in Cell_interferenceSet_hf(6, $s, $lvl, $x)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize8](perm(Cell($s, $lvl, $x))) ==> Cell_interferenceReference_hf(6, $s, $lvl, $x) == old[pre_stabilize8](Cell_state($s, $lvl, $x)))
    
    // Stabilising all instances of region IncDec
    
    ___silicon_hack407_havoc_all_IncDec_interferenceContext_fp()
    exhale acc(IncDec_sk_fp(), write)
    inhale acc(IncDec_sk_fp(), write)
    inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in IncDec_interferenceSet_df(6, $r, $alvl, $s, $lvl, $x)) } none < old[pre_stabilize8](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> ($$_m in IncDec_interferenceSet_hf(6, $r, $alvl, $s, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> ($$_m in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && ($$_m == old[pre_stabilize8](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize8](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize8](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize8](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))))
    ___silicon_hack407_havoc_all_IncDec()
    inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize8](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_interferenceSet_hf(6, $r, $alvl, $s, $lvl, $x)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize8](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> IncDec_interferenceReference_hf(6, $r, $alvl, $s, $lvl, $x) == old[pre_stabilize8](IncDec_state($r, $alvl, $s, $lvl, $x)))
    
    // ------- Stabilising regions Cell,IncDec (after update-region@37.7) END 
    
    
    assert $_levelVar_9 == $_levelVar_5
  }
  $_levelVar_10 := $_levelVar_5
  
  // ------- while END ---------------
  
  
  
  // ------- Stabilising regions Cell,IncDec (after while@24.5) BEGIN 
  
  
  label pre_stabilize9
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in Cell_interferenceSet_df(7, $s, $lvl, $x)) } none < old[pre_stabilize9](perm(Cell($s, $lvl, $x))) ==> ($$_m in Cell_interferenceSet_hf(7, $s, $lvl, $x)) == ((none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> ($$_m in Cell_atomicity_context_hf($s, $lvl, $x))) && ($$_m == old[pre_stabilize9](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize9](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == $$_m && true && perm(Cell_G($s)) == none))))
  ___silicon_hack407_havoc_all_Cell()
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize9](perm(Cell($s, $lvl, $x))) ==> (Cell_state($s, $lvl, $x) in Cell_interferenceSet_hf(7, $s, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize9](perm(Cell($s, $lvl, $x))) ==> Cell_interferenceReference_hf(7, $s, $lvl, $x) == old[pre_stabilize9](Cell_state($s, $lvl, $x)))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec_interferenceContext_fp()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in IncDec_interferenceSet_df(7, $r, $alvl, $s, $lvl, $x)) } none < old[pre_stabilize9](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> ($$_m in IncDec_interferenceSet_hf(7, $r, $alvl, $s, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> ($$_m in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && ($$_m == old[pre_stabilize9](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize9](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize9](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize9](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))))
  ___silicon_hack407_havoc_all_IncDec()
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize9](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_interferenceSet_hf(7, $r, $alvl, $s, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize9](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> IncDec_interferenceReference_hf(7, $r, $alvl, $s, $lvl, $x) == old[pre_stabilize9](IncDec_state($r, $alvl, $s, $lvl, $x)))
  
  // ------- Stabilising regions Cell,IncDec (after while@24.5) END 
  
  
  assert (s.$stepFrom_int in Cell_atomicity_context_hf(s, lvl, x))
  assert true
  
  // ------- Stabilising regions Cell (after atomic) BEGIN 
  
  
  label pre_stabilize2
  
  // Stabilising single instance of region Cell
  
  ___silicon_hack407_havoc_all_Cell()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (none < perm(s.$diamond) && none < perm(Cell_atomicity_context_fp(s, lvl, x)) ==> (Cell_state(s, lvl, x) in Cell_atomicity_context_hf(s, lvl, x))) && (Cell_state(s, lvl, x) == old[pre_stabilize2](Cell_state(s, lvl, x)) || Cell_sk_$_action_n(s, lvl, x) == old[pre_stabilize2](Cell_state(s, lvl, x)) && Cell_sk_$_action_m(s, lvl, x) == Cell_state(s, lvl, x) && true && perm(Cell_G(s)) == none)
  
  // ------- Stabilising regions Cell (after atomic) END 
  
  
  
  inhale Cell_state(s, lvl, x) == s.$stepTo_int
  inhale old(Cell_state(s, lvl, x)) == s.$stepFrom_int
  inhale acc(Cell_G(s), write)
  exhale acc(s.$stepFrom_int, write) && acc(s.$stepTo_int, write)
  exhale acc(Cell_atomicity_context_fp(s, lvl, x), write)
  inhale (forall $s: Ref, $lvl: Int, $x: Ref :: acc(Cell($s, $lvl, $x), old[preFrame0](perm(Cell($s, $lvl, $x)))))
  inhale (forall $s: Ref, $lvl: Int, $x: Ref :: { Cell_state_T($s, $lvl, $x) } none < old[preFrame0](perm(Cell($s, $lvl, $x))) ==> Cell_state($s, $lvl, $x) == old[preFrame0](Cell_state($s, $lvl, $x)))
  inhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: acc(IncDec($r, $alvl, $s, $lvl, $x), old[preFrame0](perm(IncDec($r, $alvl, $s, $lvl, $x)))))
  inhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: { IncDec_state_T($r, $alvl, $s, $lvl, $x) } none < old[preFrame0](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> IncDec_state($r, $alvl, $s, $lvl, $x) == old[preFrame0](IncDec_state($r, $alvl, $s, $lvl, $x)))
  inhale (forall $$r: Ref :: acc(Cell_G($$r), old[preFrame0](perm(Cell_G($$r)))))
  inhale (forall $$r: Ref :: acc(IncDec_INC($$r), old[preFrame0](perm(IncDec_INC($$r)))))
  inhale (forall $$r: Ref :: acc(IncDec_DEC($$r), old[preFrame0](perm(IncDec_DEC($$r)))))
  inhale (forall $$_r: Ref :: acc($$_r.$memcell_$val, old[preFrame0](perm($$_r.$memcell_$val))))
  inhale (forall $$_r: Ref :: { $$_r.$memcell_$val } none < old[preFrame0](perm($$_r.$memcell_$val)) ==> $$_r.$memcell_$val == old[preFrame0]($$_r.$memcell_$val))
  
  // ------- make-atomic END ---------
  
  
}

method increment(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref, k: Int)
  requires acc(IncDec(r, alvl, s, lvl, x), write) && (alvl >= 0 && true) && acc(IncDec_INC(r), write) && k > 0
  ensures acc(IncDec(r, alvl, s, lvl, x), write) && (alvl >= 0 && true) && acc(IncDec_INC(r), write) && IncDec_state(r, alvl, s, lvl, x) <= old(IncDec_state(r, alvl, s, lvl, x)) + k
{
  var $_levelVar_11: Int
  var $_levelVar_12: Int
  var $_levelVar_13: Int
  inhale $_levelVar_11 >= 0 && $_levelVar_11 > alvl
  assert $_levelVar_11 >= 0
  inhale acc(Cell_sk_fp(), write) && acc(IncDec_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $s: Ref, $lvl: Int, $x: Ref :: acc(Cell_interferenceContext_fp($s, $lvl, $x), write))
  inhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: acc(IncDec_interferenceContext_fp($r, $alvl, $s, $lvl, $x), write))
  
  // ------- Inferring interference context Cell,IncDec (beginning of non atomic procedure) BEGIN 
  
  
  label pre_infer
  
  // Inferring interference all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in Cell_interferenceSet_df(8, $s, $lvl, $x)) } none < old[pre_infer](perm(Cell($s, $lvl, $x))) ==> ($$_m in Cell_interferenceSet_hf(8, $s, $lvl, $x)) == ((none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> ($$_m in Cell_atomicity_context_hf($s, $lvl, $x))) && ($$_m == old[pre_infer](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_infer](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == $$_m && true && perm(Cell_G($s)) == none))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_infer](perm(Cell($s, $lvl, $x))) ==> Cell_interferenceReference_hf(8, $s, $lvl, $x) == old[pre_infer](Cell_state($s, $lvl, $x)))
  
  // Inferring interference all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec_interferenceContext_fp()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in IncDec_interferenceSet_df(8, $r, $alvl, $s, $lvl, $x)) } none < old[pre_infer](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> ($$_m in IncDec_interferenceSet_hf(8, $r, $alvl, $s, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> ($$_m in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && ($$_m == old[pre_infer](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_infer](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> IncDec_interferenceReference_hf(8, $r, $alvl, $s, $lvl, $x) == old[pre_infer](IncDec_state($r, $alvl, $s, $lvl, $x)))
  
  // ------- Inferring interference context Cell,IncDec (beginning of non atomic procedure) END 
  
  
  
  // ------- use-atomic BEGIN --------
  
  
  label pre_use_atomic0
  assert perm(IncDec_atomicity_context_fp(r, alvl, s, lvl, x)) == none
  assert $_levelVar_11 > alvl
  $_levelVar_12 := alvl
  exhale acc(IncDec_INC(r), write)
  
  // ------- Stabilising regions Cell (before use-atomic@68.3) BEGIN 
  
  
  label pre_stabilize11
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize11](perm(Cell($s, $lvl, $x))) ==> (none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> (Cell_state($s, $lvl, $x) in Cell_atomicity_context_hf($s, $lvl, $x))) && (Cell_state($s, $lvl, $x) == old[pre_stabilize11](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize11](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == Cell_state($s, $lvl, $x) && true && perm(Cell_G($s)) == none))
  
  // ------- Stabilising regions Cell (before use-atomic@68.3) END 
  
  
  unfold acc(IncDec(r, alvl, s, lvl, x), write)
  label transitionPre4
  ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
  inhale (forall $_m0: Int :: { ($_m0 in Cell_interferenceSet_df(8, s, lvl, x)) } ($_m0 in IncDec_interferenceSet_hf(8, r, alvl, s, lvl, x)) == ($_m0 in Cell_interferenceSet_hf(8, s, lvl, x)))
  
  // havoc performed by other front resource
  
  
  inhale true ==> Cell_interferenceReference_hf(8, s, lvl, x) == old[transitionPre4](Cell_state(s, lvl, x))
  
  // ------- Stabilising regions IncDec (before use-atomic@68.3) BEGIN 
  
  
  label pre_stabilize12
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize12](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && (IncDec_state($r, $alvl, $s, $lvl, $x) == old[pre_stabilize12](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize12](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize12](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize12](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))
  
  // ------- Stabilising regions IncDec (before use-atomic@68.3) END 
  
  
  inhale acc(IncDec_INC(r), write)
  
  // ------- call:spinIncBy BEGIN ----
  
  
  assert (forall $_m: Int :: { ($_m in Cell_interferenceSet_hf(8, s, lvl, x)) } ($_m in Cell_interferenceSet_hf(8, s, lvl, x)) ==> ($_m in comprehension_71_290(old(IncDec_state(r, alvl, s, lvl, x)))))
  label pre_call2
  assert $_levelVar_12 >= 0 && $_levelVar_12 > lvl
  assert true
  exhale acc(Cell(s, lvl, x), write) && (lvl >= 0 && Cell_state(s, lvl, x) == Cell_state(s, lvl, x)) && acc(Cell_G(s), write) && !(k == 0) && (Cell_state(s, lvl, x) in comprehension_71_290(old(IncDec_state(r, alvl, s, lvl, x))))
  
  // ------- Stabilising regions Cell,IncDec (before call:spinIncBy@71.5) BEGIN 
  
  
  label pre_stabilize10
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize10](perm(Cell($s, $lvl, $x))) ==> (none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> (Cell_state($s, $lvl, $x) in Cell_atomicity_context_hf($s, $lvl, $x))) && (Cell_state($s, $lvl, $x) == old[pre_stabilize10](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize10](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == Cell_state($s, $lvl, $x) && true && perm(Cell_G($s)) == none))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize10](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && (IncDec_state($r, $alvl, $s, $lvl, $x) == old[pre_stabilize10](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize10](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize10](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize10](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))
  
  // ------- Stabilising regions Cell,IncDec (before call:spinIncBy@71.5) END 
  
  
  inhale acc(Cell(s, lvl, x), write) && (lvl >= 0 && true) && acc(Cell_G(s), write) && Cell_state(s, lvl, x) == old[pre_call2](Cell_state(s, lvl, x)) + k
  
  // ------- call:spinIncBy END ------
  
  
  fold acc(IncDec(r, alvl, s, lvl, x), write)
  assert old[pre_use_atomic0](IncDec_state(r, alvl, s, lvl, x)) == IncDec_state(r, alvl, s, lvl, x) || old[pre_use_atomic0](IncDec_state(r, alvl, s, lvl, x)) < IncDec_state(r, alvl, s, lvl, x)
  $_levelVar_13 := $_levelVar_11
  
  // ------- use-atomic END ----------
  
  
  
  // ------- Stabilising regions Cell,IncDec (after use-atomic@68.3) BEGIN 
  
  
  label pre_stabilize13
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in Cell_interferenceSet_df(9, $s, $lvl, $x)) } none < old[pre_stabilize13](perm(Cell($s, $lvl, $x))) ==> ($$_m in Cell_interferenceSet_hf(9, $s, $lvl, $x)) == ((none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> ($$_m in Cell_atomicity_context_hf($s, $lvl, $x))) && ($$_m == old[pre_stabilize13](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize13](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == $$_m && true && perm(Cell_G($s)) == none))))
  ___silicon_hack407_havoc_all_Cell()
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize13](perm(Cell($s, $lvl, $x))) ==> (Cell_state($s, $lvl, $x) in Cell_interferenceSet_hf(9, $s, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize13](perm(Cell($s, $lvl, $x))) ==> Cell_interferenceReference_hf(9, $s, $lvl, $x) == old[pre_stabilize13](Cell_state($s, $lvl, $x)))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec_interferenceContext_fp()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in IncDec_interferenceSet_df(9, $r, $alvl, $s, $lvl, $x)) } none < old[pre_stabilize13](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> ($$_m in IncDec_interferenceSet_hf(9, $r, $alvl, $s, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> ($$_m in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && ($$_m == old[pre_stabilize13](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize13](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize13](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize13](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))))
  ___silicon_hack407_havoc_all_IncDec()
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize13](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_interferenceSet_hf(9, $r, $alvl, $s, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize13](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> IncDec_interferenceReference_hf(9, $r, $alvl, $s, $lvl, $x) == old[pre_stabilize13](IncDec_state($r, $alvl, $s, $lvl, $x)))
  
  // ------- Stabilising regions Cell,IncDec (after use-atomic@68.3) END 
  
  
}

method decrement(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref, k: Int)
  requires acc(IncDec(r, alvl, s, lvl, x), write) && (alvl >= 0 && true) && acc(IncDec_DEC(r), write) && k > 0
  ensures acc(IncDec(r, alvl, s, lvl, x), write) && (alvl >= 0 && true) && acc(IncDec_DEC(r), write) && IncDec_state(r, alvl, s, lvl, x) >= old(IncDec_state(r, alvl, s, lvl, x)) - k
{
  var $_levelVar_14: Int
  var $_levelVar_15: Int
  var $_levelVar_16: Int
  inhale $_levelVar_14 >= 0 && $_levelVar_14 > alvl
  assert $_levelVar_14 >= 0
  inhale acc(Cell_sk_fp(), write) && acc(IncDec_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $s: Ref, $lvl: Int, $x: Ref :: acc(Cell_interferenceContext_fp($s, $lvl, $x), write))
  inhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: acc(IncDec_interferenceContext_fp($r, $alvl, $s, $lvl, $x), write))
  
  // ------- Inferring interference context Cell,IncDec (beginning of non atomic procedure) BEGIN 
  
  
  label pre_infer2
  
  // Inferring interference all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in Cell_interferenceSet_df(10, $s, $lvl, $x)) } none < old[pre_infer2](perm(Cell($s, $lvl, $x))) ==> ($$_m in Cell_interferenceSet_hf(10, $s, $lvl, $x)) == ((none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> ($$_m in Cell_atomicity_context_hf($s, $lvl, $x))) && ($$_m == old[pre_infer2](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_infer2](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == $$_m && true && perm(Cell_G($s)) == none))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_infer2](perm(Cell($s, $lvl, $x))) ==> Cell_interferenceReference_hf(10, $s, $lvl, $x) == old[pre_infer2](Cell_state($s, $lvl, $x)))
  
  // Inferring interference all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec_interferenceContext_fp()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in IncDec_interferenceSet_df(10, $r, $alvl, $s, $lvl, $x)) } none < old[pre_infer2](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> ($$_m in IncDec_interferenceSet_hf(10, $r, $alvl, $s, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> ($$_m in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && ($$_m == old[pre_infer2](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer2](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer2](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer2](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_infer2](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> IncDec_interferenceReference_hf(10, $r, $alvl, $s, $lvl, $x) == old[pre_infer2](IncDec_state($r, $alvl, $s, $lvl, $x)))
  
  // ------- Inferring interference context Cell,IncDec (beginning of non atomic procedure) END 
  
  
  
  // ------- use-atomic BEGIN --------
  
  
  label pre_use_atomic
  assert perm(IncDec_atomicity_context_fp(r, alvl, s, lvl, x)) == none
  assert $_levelVar_14 > alvl
  $_levelVar_15 := alvl
  exhale acc(IncDec_DEC(r), write)
  
  // ------- Stabilising regions Cell (before use-atomic@80.3) BEGIN 
  
  
  label pre_stabilize15
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize15](perm(Cell($s, $lvl, $x))) ==> (none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> (Cell_state($s, $lvl, $x) in Cell_atomicity_context_hf($s, $lvl, $x))) && (Cell_state($s, $lvl, $x) == old[pre_stabilize15](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize15](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == Cell_state($s, $lvl, $x) && true && perm(Cell_G($s)) == none))
  
  // ------- Stabilising regions Cell (before use-atomic@80.3) END 
  
  
  unfold acc(IncDec(r, alvl, s, lvl, x), write)
  label transitionPre5
  ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
  inhale (forall $_m0: Int :: { ($_m0 in Cell_interferenceSet_df(10, s, lvl, x)) } ($_m0 in IncDec_interferenceSet_hf(10, r, alvl, s, lvl, x)) == ($_m0 in Cell_interferenceSet_hf(10, s, lvl, x)))
  
  // havoc performed by other front resource
  
  
  inhale true ==> Cell_interferenceReference_hf(10, s, lvl, x) == old[transitionPre5](Cell_state(s, lvl, x))
  
  // ------- Stabilising regions IncDec (before use-atomic@80.3) BEGIN 
  
  
  label pre_stabilize16
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize16](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && (IncDec_state($r, $alvl, $s, $lvl, $x) == old[pre_stabilize16](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize16](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize16](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize16](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))
  
  // ------- Stabilising regions IncDec (before use-atomic@80.3) END 
  
  
  inhale acc(IncDec_DEC(r), write)
  
  // ------- call:spinIncBy BEGIN ----
  
  
  assert (forall $_m: Int :: { ($_m in Cell_interferenceSet_hf(10, s, lvl, x)) } ($_m in Cell_interferenceSet_hf(10, s, lvl, x)) ==> ($_m in comprehension_83_300(old(IncDec_state(r, alvl, s, lvl, x)))))
  label pre_call3
  assert $_levelVar_15 >= 0 && $_levelVar_15 > lvl
  assert true
  exhale acc(Cell(s, lvl, x), write) && (lvl >= 0 && Cell_state(s, lvl, x) == Cell_state(s, lvl, x)) && acc(Cell_G(s), write) && !(0 - k == 0) && (Cell_state(s, lvl, x) in comprehension_83_300(old(IncDec_state(r, alvl, s, lvl, x))))
  
  // ------- Stabilising regions Cell,IncDec (before call:spinIncBy@83.5) BEGIN 
  
  
  label pre_stabilize14
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize14](perm(Cell($s, $lvl, $x))) ==> (none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> (Cell_state($s, $lvl, $x) in Cell_atomicity_context_hf($s, $lvl, $x))) && (Cell_state($s, $lvl, $x) == old[pre_stabilize14](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize14](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == Cell_state($s, $lvl, $x) && true && perm(Cell_G($s)) == none))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize14](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && (IncDec_state($r, $alvl, $s, $lvl, $x) == old[pre_stabilize14](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize14](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize14](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize14](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))
  
  // ------- Stabilising regions Cell,IncDec (before call:spinIncBy@83.5) END 
  
  
  inhale acc(Cell(s, lvl, x), write) && (lvl >= 0 && true) && acc(Cell_G(s), write) && Cell_state(s, lvl, x) == old[pre_call3](Cell_state(s, lvl, x)) + (0 - k)
  
  // ------- call:spinIncBy END ------
  
  
  fold acc(IncDec(r, alvl, s, lvl, x), write)
  assert old[pre_use_atomic](IncDec_state(r, alvl, s, lvl, x)) == IncDec_state(r, alvl, s, lvl, x) || IncDec_state(r, alvl, s, lvl, x) < old[pre_use_atomic](IncDec_state(r, alvl, s, lvl, x))
  $_levelVar_16 := $_levelVar_14
  
  // ------- use-atomic END ----------
  
  
  
  // ------- Stabilising regions Cell,IncDec (after use-atomic@80.3) BEGIN 
  
  
  label pre_stabilize17
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in Cell_interferenceSet_df(11, $s, $lvl, $x)) } none < old[pre_stabilize17](perm(Cell($s, $lvl, $x))) ==> ($$_m in Cell_interferenceSet_hf(11, $s, $lvl, $x)) == ((none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> ($$_m in Cell_atomicity_context_hf($s, $lvl, $x))) && ($$_m == old[pre_stabilize17](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize17](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == $$_m && true && perm(Cell_G($s)) == none))))
  ___silicon_hack407_havoc_all_Cell()
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize17](perm(Cell($s, $lvl, $x))) ==> (Cell_state($s, $lvl, $x) in Cell_interferenceSet_hf(11, $s, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize17](perm(Cell($s, $lvl, $x))) ==> Cell_interferenceReference_hf(11, $s, $lvl, $x) == old[pre_stabilize17](Cell_state($s, $lvl, $x)))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec_interferenceContext_fp()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in IncDec_interferenceSet_df(11, $r, $alvl, $s, $lvl, $x)) } none < old[pre_stabilize17](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> ($$_m in IncDec_interferenceSet_hf(11, $r, $alvl, $s, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> ($$_m in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && ($$_m == old[pre_stabilize17](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize17](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize17](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize17](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))))
  ___silicon_hack407_havoc_all_IncDec()
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize17](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_interferenceSet_hf(11, $r, $alvl, $s, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize17](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> IncDec_interferenceReference_hf(11, $r, $alvl, $s, $lvl, $x) == old[pre_stabilize17](IncDec_state($r, $alvl, $s, $lvl, $x)))
  
  // ------- Stabilising regions Cell,IncDec (after use-atomic@80.3) END 
  
  
}

method CAS(x: Ref, now: Int, thn: Int) returns (ret: Bool)
  requires acc(x.$memcell_$val, write) && true
  ensures (old(x.$memcell_$val) == now ? ret && (acc(x.$memcell_$val, write) && x.$memcell_$val == thn) : !ret && (acc(x.$memcell_$val, write) && x.$memcell_$val == old(x.$memcell_$val)))


method $_Cell_interpretation_stability_check(s: Ref, lvl: Int, x: Ref)
{
  inhale acc(Cell_sk_fp(), write) && acc(IncDec_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $s: Ref, $lvl: Int, $x: Ref :: acc(Cell_interferenceContext_fp($s, $lvl, $x), write))
  inhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: acc(IncDec_interferenceContext_fp($r, $alvl, $s, $lvl, $x), write))
  inhale acc(x.$memcell_$val, write) && true
  
  // ------- Stabilising regions Cell,IncDec (check stability of region interpretation) BEGIN 
  
  
  label pre_stabilize18
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize18](perm(Cell($s, $lvl, $x))) ==> (none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> (Cell_state($s, $lvl, $x) in Cell_atomicity_context_hf($s, $lvl, $x))) && (Cell_state($s, $lvl, $x) == old[pre_stabilize18](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize18](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == Cell_state($s, $lvl, $x) && true && perm(Cell_G($s)) == none))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize18](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && (IncDec_state($r, $alvl, $s, $lvl, $x) == old[pre_stabilize18](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize18](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize18](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize18](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))
  
  // ------- Stabilising regions Cell,IncDec (check stability of region interpretation) END 
  
  
  assert acc(x.$memcell_$val, write) && true
}

method $_Cell_action_transitivity_check()
{
  var G: Bool
  var $_action_n_0_x: Int
  var $_action_m_0_x: Int
  var $_action_n_0_y: Int
  var $_action_m_0_y: Int
  var aState: Int
  var bState: Int
  var cState: Int
  inhale aState == bState || $_action_n_0_x == aState && $_action_m_0_x == bState && true && G
  inhale bState == cState || $_action_n_0_y == bState && $_action_m_0_y == cState && true && G
  assert aState == cState || aState == aState && cState == cState && true && G
}

method $_IncDec_interpretation_stability_check(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref)
{
  inhale acc(Cell_sk_fp(), write) && acc(IncDec_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $s: Ref, $lvl: Int, $x: Ref :: acc(Cell_interferenceContext_fp($s, $lvl, $x), write))
  inhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: acc(IncDec_interferenceContext_fp($r, $alvl, $s, $lvl, $x), write))
  inhale acc(Cell(s, lvl, x), write) && (lvl >= 0 && true) && lvl < alvl && acc(Cell_G(s), write)
  
  // ------- Stabilising regions Cell,IncDec (check stability of region interpretation) BEGIN 
  
  
  label pre_stabilize19
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize19](perm(Cell($s, $lvl, $x))) ==> (none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> (Cell_state($s, $lvl, $x) in Cell_atomicity_context_hf($s, $lvl, $x))) && (Cell_state($s, $lvl, $x) == old[pre_stabilize19](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize19](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == Cell_state($s, $lvl, $x) && true && perm(Cell_G($s)) == none))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize19](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && (IncDec_state($r, $alvl, $s, $lvl, $x) == old[pre_stabilize19](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize19](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize19](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize19](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))
  
  // ------- Stabilising regions Cell,IncDec (check stability of region interpretation) END 
  
  
  assert acc(Cell(s, lvl, x), write) && (lvl >= 0 && true) && lvl < alvl && acc(Cell_G(s), write)
}

method $_IncDec_action_transitivity_check()
{
  var INC: Bool
  var DEC: Bool
  var $_action_n_0_x: Int
  var $_action_m_0_x: Int
  var $_action_n_1_x: Int
  var $_action_m_1_x: Int
  var $_action_n_2_x: Int
  var $_action_m_2_x: Int
  var $_action_n_0_y: Int
  var $_action_m_0_y: Int
  var $_action_n_1_y: Int
  var $_action_m_1_y: Int
  var $_action_n_2_y: Int
  var $_action_m_2_y: Int
  var aState: Int
  var bState: Int
  var cState: Int
  inhale aState == bState || $_action_n_0_x == aState && $_action_m_0_x == bState && $_action_n_0_x < $_action_m_0_x && INC || $_action_n_1_x == aState && $_action_m_1_x == bState && $_action_m_1_x < $_action_n_1_x && DEC || $_action_n_2_x == aState && $_action_m_2_x == bState && true && (INC && DEC)
  inhale bState == cState || $_action_n_0_y == bState && $_action_m_0_y == cState && $_action_n_0_y < $_action_m_0_y && INC || $_action_n_1_y == bState && $_action_m_1_y == cState && $_action_m_1_y < $_action_n_1_y && DEC || $_action_n_2_y == bState && $_action_m_2_y == cState && true && (INC && DEC)
  assert aState == cState || aState == aState && cState == cState && aState < cState && INC || aState == aState && cState == cState && cState < aState && DEC || aState == aState && cState == cState && true && (INC && DEC)
}

method $_spinIncBy_condition_stability_precondition_check(s: Ref, lvl: Int, x: Ref, k: Int, from: Set[Int])
  requires acc(Cell(s, lvl, x), write) && (lvl >= 0 && Cell_state(s, lvl, x) == Cell_state(s, lvl, x)) && acc(Cell_G(s), write)
  requires !(k == 0)
{
  var $_levelVar_18: Int
  var v: Int
  var b: Bool
  inhale $_levelVar_18 >= 0 && $_levelVar_18 > lvl
  inhale acc(Cell_sk_fp(), write) && acc(IncDec_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $s: Ref, $lvl: Int, $x: Ref :: acc(Cell_interferenceContext_fp($s, $lvl, $x), write))
  inhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: acc(IncDec_interferenceContext_fp($r, $alvl, $s, $lvl, $x), write))
  inhale Cell_interferenceSet_hf(12, s, lvl, x) == from
  inhale Cell_interferenceReference_hf(12, s, lvl, x) == old(Cell_state(s, lvl, x))
  
  // ------- Stabilising regions Cell,IncDec (check stability of method condition) BEGIN 
  
  
  label pre_stabilize20
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize20](perm(Cell($s, $lvl, $x))) ==> (none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> (Cell_state($s, $lvl, $x) in Cell_atomicity_context_hf($s, $lvl, $x))) && (Cell_state($s, $lvl, $x) == old[pre_stabilize20](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize20](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == Cell_state($s, $lvl, $x) && true && perm(Cell_G($s)) == none))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize20](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && (IncDec_state($r, $alvl, $s, $lvl, $x) == old[pre_stabilize20](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize20](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize20](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize20](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))
  
  // ------- Stabilising regions Cell,IncDec (check stability of method condition) END 
  
  
  assert acc(Cell(s, lvl, x), write) && (lvl >= 0 && Cell_state(s, lvl, x) == Cell_state(s, lvl, x)) && acc(Cell_G(s), write) && !(k == 0)
}

method $_increment_condition_stability_precondition_check(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref, k: Int)
  requires acc(IncDec(r, alvl, s, lvl, x), write) && (alvl >= 0 && true) && acc(IncDec_INC(r), write) && k > 0
{
  var $_levelVar_19: Int
  inhale $_levelVar_19 >= 0 && $_levelVar_19 > alvl
  inhale acc(Cell_sk_fp(), write) && acc(IncDec_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $s: Ref, $lvl: Int, $x: Ref :: acc(Cell_interferenceContext_fp($s, $lvl, $x), write))
  inhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: acc(IncDec_interferenceContext_fp($r, $alvl, $s, $lvl, $x), write))
  
  // ------- Inferring interference context Cell,IncDec (beginning of non atomic procedure) BEGIN 
  
  
  label pre_infer4
  
  // Inferring interference all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in Cell_interferenceSet_df(13, $s, $lvl, $x)) } none < old[pre_infer4](perm(Cell($s, $lvl, $x))) ==> ($$_m in Cell_interferenceSet_hf(13, $s, $lvl, $x)) == ((none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> ($$_m in Cell_atomicity_context_hf($s, $lvl, $x))) && ($$_m == old[pre_infer4](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_infer4](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == $$_m && true && perm(Cell_G($s)) == none))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_infer4](perm(Cell($s, $lvl, $x))) ==> Cell_interferenceReference_hf(13, $s, $lvl, $x) == old[pre_infer4](Cell_state($s, $lvl, $x)))
  
  // Inferring interference all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec_interferenceContext_fp()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in IncDec_interferenceSet_df(13, $r, $alvl, $s, $lvl, $x)) } none < old[pre_infer4](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> ($$_m in IncDec_interferenceSet_hf(13, $r, $alvl, $s, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> ($$_m in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && ($$_m == old[pre_infer4](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer4](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer4](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer4](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_infer4](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> IncDec_interferenceReference_hf(13, $r, $alvl, $s, $lvl, $x) == old[pre_infer4](IncDec_state($r, $alvl, $s, $lvl, $x)))
  
  // ------- Inferring interference context Cell,IncDec (beginning of non atomic procedure) END 
  
  
  
  // ------- Stabilising regions Cell,IncDec (check stability of method condition) BEGIN 
  
  
  label pre_stabilize21
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize21](perm(Cell($s, $lvl, $x))) ==> (none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> (Cell_state($s, $lvl, $x) in Cell_atomicity_context_hf($s, $lvl, $x))) && (Cell_state($s, $lvl, $x) == old[pre_stabilize21](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize21](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == Cell_state($s, $lvl, $x) && true && perm(Cell_G($s)) == none))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize21](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && (IncDec_state($r, $alvl, $s, $lvl, $x) == old[pre_stabilize21](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize21](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize21](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize21](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))
  
  // ------- Stabilising regions Cell,IncDec (check stability of method condition) END 
  
  
  assert acc(IncDec(r, alvl, s, lvl, x), write) && (alvl >= 0 && true) && acc(IncDec_INC(r), write) && k > 0
}

method $_decrement_condition_stability_precondition_check(r: Ref, alvl: Int, s: Ref, lvl: Int, x: Ref, k: Int)
  requires acc(IncDec(r, alvl, s, lvl, x), write) && (alvl >= 0 && true) && acc(IncDec_DEC(r), write) && k > 0
{
  var $_levelVar_20: Int
  inhale $_levelVar_20 >= 0 && $_levelVar_20 > alvl
  inhale acc(Cell_sk_fp(), write) && acc(IncDec_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $s: Ref, $lvl: Int, $x: Ref :: acc(Cell_interferenceContext_fp($s, $lvl, $x), write))
  inhale (forall $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref :: acc(IncDec_interferenceContext_fp($r, $alvl, $s, $lvl, $x), write))
  
  // ------- Inferring interference context Cell,IncDec (beginning of non atomic procedure) BEGIN 
  
  
  label pre_infer5
  
  // Inferring interference all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell_interferenceContext_fp()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in Cell_interferenceSet_df(14, $s, $lvl, $x)) } none < old[pre_infer5](perm(Cell($s, $lvl, $x))) ==> ($$_m in Cell_interferenceSet_hf(14, $s, $lvl, $x)) == ((none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> ($$_m in Cell_atomicity_context_hf($s, $lvl, $x))) && ($$_m == old[pre_infer5](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_infer5](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == $$_m && true && perm(Cell_G($s)) == none))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_infer5](perm(Cell($s, $lvl, $x))) ==> Cell_interferenceReference_hf(14, $s, $lvl, $x) == old[pre_infer5](Cell_state($s, $lvl, $x)))
  
  // Inferring interference all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec_interferenceContext_fp()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in IncDec_interferenceSet_df(14, $r, $alvl, $s, $lvl, $x)) } none < old[pre_infer5](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> ($$_m in IncDec_interferenceSet_hf(14, $r, $alvl, $s, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> ($$_m in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && ($$_m == old[pre_infer5](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer5](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer5](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_infer5](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == $$_m && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_infer5](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> IncDec_interferenceReference_hf(14, $r, $alvl, $s, $lvl, $x) == old[pre_infer5](IncDec_state($r, $alvl, $s, $lvl, $x)))
  
  // ------- Inferring interference context Cell,IncDec (beginning of non atomic procedure) END 
  
  
  
  // ------- Stabilising regions Cell,IncDec (check stability of method condition) BEGIN 
  
  
  label pre_stabilize22
  
  // Stabilising all instances of region Cell
  
  ___silicon_hack407_havoc_all_Cell()
  exhale acc(Cell_sk_fp(), write)
  inhale acc(Cell_sk_fp(), write)
  inhale (forperm $s: Ref, $lvl: Int, $x: Ref [Cell($s, $lvl, $x)] :: none < old[pre_stabilize22](perm(Cell($s, $lvl, $x))) ==> (none < perm($s.$diamond) && none < perm(Cell_atomicity_context_fp($s, $lvl, $x)) ==> (Cell_state($s, $lvl, $x) in Cell_atomicity_context_hf($s, $lvl, $x))) && (Cell_state($s, $lvl, $x) == old[pre_stabilize22](Cell_state($s, $lvl, $x)) || Cell_sk_$_action_n($s, $lvl, $x) == old[pre_stabilize22](Cell_state($s, $lvl, $x)) && Cell_sk_$_action_m($s, $lvl, $x) == Cell_state($s, $lvl, $x) && true && perm(Cell_G($s)) == none))
  
  // Stabilising all instances of region IncDec
  
  ___silicon_hack407_havoc_all_IncDec()
  exhale acc(IncDec_sk_fp(), write)
  inhale acc(IncDec_sk_fp(), write)
  inhale (forperm $r: Ref, $alvl: Int, $s: Ref, $lvl: Int, $x: Ref [IncDec($r, $alvl, $s, $lvl, $x)] :: none < old[pre_stabilize22](perm(IncDec($r, $alvl, $s, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(IncDec_atomicity_context_fp($r, $alvl, $s, $lvl, $x)) ==> (IncDec_state($r, $alvl, $s, $lvl, $x) in IncDec_atomicity_context_hf($r, $alvl, $s, $lvl, $x))) && (IncDec_state($r, $alvl, $s, $lvl, $x) == old[pre_stabilize22](IncDec_state($r, $alvl, $s, $lvl, $x)) || (IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize22](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) && perm(IncDec_INC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize22](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) < IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) && perm(IncDec_DEC($r)) == none || IncDec_sk_$_action_n($r, $alvl, $s, $lvl, $x) == old[pre_stabilize22](IncDec_state($r, $alvl, $s, $lvl, $x)) && IncDec_sk_$_action_m($r, $alvl, $s, $lvl, $x) == IncDec_state($r, $alvl, $s, $lvl, $x) && true && (perm(IncDec_INC($r)) == none && perm(IncDec_DEC($r)) == none))))
  
  // ------- Stabilising regions Cell,IncDec (check stability of method condition) END 
  
  
  assert acc(IncDec(r, alvl, s, lvl, x), write) && (alvl >= 0 && true) && acc(IncDec_DEC(r), write) && k > 0
}