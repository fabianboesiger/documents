domain Map[U, V] {
  
  function Map_keys(m: Map[U, V]): Set[U]
  
  function Map_card(m: Map[U, V]): Int
  
  function Map_lookup(m: Map[U, V], u: U): V
  
  function Map_values(m: Map[U, V]): Set[V]
  
  function Map_empty(): Map[U, V]
  
  function Map_build(m: Map[U, V], u: U, v: V): Map[U, V]
  
  function Map_equal(m1: Map[U, V], m2: Map[U, V]): Bool
  
  function Map_disjoint(m1: Map[U, V], m2: Map[U, V]): Bool
  
  function Map_union(m1: Map[U, V], m2: Map[U, V]): Map[U, V]
  
  axiom Map_card_non_neg {
    (forall m: Map[U, V] :: { Map_card(m) } 0 <= Map_card(m))
  }
  
  axiom Map_card_domain {
    (forall m: Map[U, V] :: { |Map_keys(m)| } |Map_keys(m)| == Map_card(m))
  }
  
  axiom Map_values_def {
    (forall m: Map[U, V], v: V :: { (v in Map_values(m)) } (v in Map_values(m)) == (exists u: U :: (u in Map_keys(m)) && v == Map_lookup(m, u)))
  }
  
  axiom Map_empty_1 {
    (forall u: U :: { (u in Map_keys(Map_empty())) } !((u in Map_keys(Map_empty()))))
  }
  
  axiom Map_empty_2 {
    (forall m: Map[U, V] :: { Map_card(m) } (Map_card(m) == 0) == (m == Map_empty()) && (Map_card(m) != 0 ==> (exists u: U :: (u in Map_keys(m)))))
  }
  
  axiom Map_build_1 {
    (forall m: Map[U, V], u1: U, u2: U, v: V :: { (u2 in Map_keys(Map_build(m, u1, v))) } (u2 == u1 ==> (u2 in Map_keys(Map_build(m, u1, v))) && Map_lookup(Map_build(m, u1, v), u1) == v) && (u2 != u1 ==> (u2 in Map_keys(Map_build(m, u1, v))) == (u2 in Map_keys(m)) && Map_lookup(Map_build(m, u1, v), u2) == Map_lookup(m, u2)))
  }
  
  axiom Map_build_2 {
    (forall m: Map[U, V], u: U, v: V :: { Map_card(Map_build(m, u, v)) } (u in Map_keys(m)) ==> Map_card(Map_build(m, u, v)) == Map_card(m))
  }
  
  axiom Map_build_3 {
    (forall m: Map[U, V], u: U, v: V :: { Map_card(Map_build(m, u, v)) } !((u in Map_keys(m))) ==> Map_card(Map_build(m, u, v)) == Map_card(m) + 1)
  }
  
  axiom Map_equality {
    (forall m1: Map[U, V], m2: Map[U, V] :: { Map_equal(m1, m2) } Map_equal(m1, m2) == (forall u: U :: { (u in Map_keys(m1)) } { (u in Map_keys(m2)) } (u in Map_keys(m1)) == (u in Map_keys(m2))))
  }
  
  axiom Map_extensionality {
    (forall m1: Map[U, V], m2: Map[U, V] :: { Map_equal(m1, m2) } Map_equal(m1, m2) ==> m1 == m2)
  }
  
  axiom Map_disjoint_def {
    (forall m1: Map[U, V], m2: Map[U, V] :: { Map_disjoint(m1, m2) } Map_disjoint(m1, m2) == (forall u: U :: { (u in Map_keys(m1)) } { (u in Map_keys(m2)) } !((u in Map_keys(m1))) || !((u in Map_keys(m2)))))
  }
  
  axiom Map_union_1 {
    (forall m1: Map[U, V], m2: Map[U, V], u: U :: { (u in Map_keys(Map_union(m1, m2))) } { (u in (Map_keys(m1) union Map_keys(m2))) } Map_disjoint(m1, m2) ==> (u in Map_keys(Map_union(m1, m2))) == (u in (Map_keys(m1) union Map_keys(m2))))
  }
  
  axiom Map_union_2 {
    (forall m1: Map[U, V], m2: Map[U, V], u: U :: { Map_lookup(Map_union(m1, m2), u) } Map_disjoint(m1, m2) && (u in Map_keys(m1)) ==> Map_lookup(Map_union(m1, m2), u) == Map_lookup(m1, u))
  }
  
  axiom Map_union_3 {
    (forall m1: Map[U, V], m2: Map[U, V], u: U :: { Map_lookup(Map_union(m1, m2), u) } Map_disjoint(m1, m2) && (u in Map_keys(m2)) ==> Map_lookup(Map_union(m1, m2), u) == Map_lookup(m2, u))
  }
}

domain trigger_functions {
  
  function Qu_state_T(q_r: Ref, q_lvl: Int, q: Ref): Bool
  
  function QL_state_T(r: Ref, lvl: Int, x: Ref): Bool
}

domain interferenceReference_Domain {
  
  function Qu_interferenceReference_df($p0: Int, q_r: Ref, q_lvl: Int, q: Ref): Bool
  
  function QL_interferenceReference_df($p0: Int, r: Ref, lvl: Int, x: Ref): Bool
}

domain interferenceSet_Domain {
  
  function Qu_interferenceSet_df($p0: Int, q_r: Ref, q_lvl: Int, q: Ref): Set[Int]
  
  function QL_interferenceSet_df($p0: Int, r: Ref, lvl: Int, x: Ref): Set[Int]
}

domain atomicity_context_Domain {
  
  function Qu_atomicity_context_df(q_r: Ref, q_lvl: Int, q: Ref): Bool
  
  function QL_atomicity_context_df(r: Ref, lvl: Int, x: Ref): Bool
}

field $diamond: Int

field $stepFrom_int: Int

field $stepTo_int: Int

field $Qu_$_sentinel_id: Ref

field $Qu_$_sentinel_level: Int

field $QL_$_absstate: Int

field $QL_$_next_id: Ref

field $QL_$_next_level: Int

field $queue_$sentinel: Ref

field $node_$value: Int

field $node_$next: Ref

function IntSet(): Set[Int]
  ensures (forall n: Int :: (n in result))


function NatSet(): Set[Int]
  ensures (forall n: Int :: 0 <= n == (n in result))


function Qu_atomicity_context_hf(q_r: Ref, q_lvl: Int, q: Ref): Set[Int]
  requires acc(Qu_atomicity_context_fp(q_r, q_lvl, q), write)
  ensures [Qu_atomicity_context_df(q_r, q_lvl, q), true]


function Qu_interferenceSet_hf($p0: Int, q_r: Ref, q_lvl: Int, q: Ref): Set[Int]
  requires acc(Qu_interferenceContext_fp(q_r, q_lvl, q), write)
  ensures [(forall $_m: Int :: { ($_m in result) } ($_m in result) ==> ($_m in Qu_interferenceSet_df($p0, q_r, q_lvl, q))), true]


function Qu_interferenceReference_hf($p0: Int, q_r: Ref, q_lvl: Int, q: Ref): Int
  requires acc(Qu_interferenceContext_fp(q_r, q_lvl, q), write)
  ensures [Qu_interferenceReference_df($p0, q_r, q_lvl, q), true]


function Qu_state(q_r: Ref, q_lvl: Int, q: Ref): Int
  requires acc(Qu(q_r, q_lvl, q), write)
  ensures [Qu_state_T(q_r, q_lvl, q), true]
{
  (unfolding acc(Qu(q_r, q_lvl, q), write) in 0)
}

function QL_atomicity_context_hf(r: Ref, lvl: Int, x: Ref): Set[Int]
  requires acc(QL_atomicity_context_fp(r, lvl, x), write)
  ensures [QL_atomicity_context_df(r, lvl, x), true]


function QL_interferenceSet_hf($p0: Int, r: Ref, lvl: Int, x: Ref): Set[Int]
  requires acc(QL_interferenceContext_fp(r, lvl, x), write)
  ensures [(forall $_m: Int :: { ($_m in result) } ($_m in result) ==> ($_m in QL_interferenceSet_df($p0, r, lvl, x))), true]


function QL_interferenceReference_hf($p0: Int, r: Ref, lvl: Int, x: Ref): Int
  requires acc(QL_interferenceContext_fp(r, lvl, x), write)
  ensures [QL_interferenceReference_df($p0, r, lvl, x), true]


function QL_sk_$_action_n(r: Ref, lvl: Int, x: Ref): Int
  requires acc(QL_sk_fp(), write)


function QL_state(r: Ref, lvl: Int, x: Ref): Int
  requires acc(QL(r, lvl, x), write)
  ensures [QL_state_T(r, lvl, x), true]
{
  (unfolding acc(QL(r, lvl, x), write) in r.$QL_$_absstate)
}

predicate Qu_G($r: Ref) 

predicate Qu_atomicity_context_fp(q_r: Ref, q_lvl: Int, q: Ref) 

predicate Qu_interferenceContext_fp(q_r: Ref, q_lvl: Int, q: Ref) 

predicate Qu_sk_fp() 

predicate Qu(q_r: Ref, q_lvl: Int, q: Ref) {
  acc(q.$queue_$sentinel, write) && true && !(q.$queue_$sentinel == null) && (acc(q_r.$Qu_$_sentinel_id, write) && true) && (acc(q_r.$Qu_$_sentinel_level, write) && true) && q_r.$Qu_$_sentinel_level < q_lvl && (acc(QL(q_r.$Qu_$_sentinel_id, q_r.$Qu_$_sentinel_level, q.$queue_$sentinel), write) && (q_r.$Qu_$_sentinel_level >= 0 && true)) && QL_state(q_r.$Qu_$_sentinel_id, q_r.$Qu_$_sentinel_level, q.$queue_$sentinel) >= 0 && QL_state(q_r.$Qu_$_sentinel_id, q_r.$Qu_$_sentinel_level, q.$queue_$sentinel) % 3 == 1 && acc(QL_OWN(q_r.$Qu_$_sentinel_id), write)
}

predicate QL_Z($r: Ref) 

predicate QL_OWN($r: Ref) 

predicate QL_atomicity_context_fp(r: Ref, lvl: Int, x: Ref) 

predicate QL_interferenceContext_fp(r: Ref, lvl: Int, x: Ref) 

predicate QL_sk_fp() 

predicate QL(r: Ref, lvl: Int, x: Ref) {
  acc(x.$node_$value, write) && true && (acc(x.$node_$next, write) && true) && (acc(r.$QL_$_absstate, write) && true) && (acc(r.$QL_$_next_id, write) && true) && (acc(r.$QL_$_next_level, write) && true) && (x.$node_$next == null || r.$QL_$_next_level < lvl) && (r.$QL_$_absstate == 0 ? acc(Inv(x.$node_$value), write) && x.$node_$next == null : (r.$QL_$_absstate == 1 ? x.$node_$next == null : (r.$QL_$_absstate >= 3 && r.$QL_$_absstate % 3 == 0 ? acc(Inv(x.$node_$value), write) && acc(QL_OWN(r.$QL_$_next_id), write) && (acc(QL(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next), write) && (r.$QL_$_next_level >= 0 && true)) && QL_state(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next) % 3 == 0 && !(x.$node_$next == null) : (r.$QL_$_absstate >= 4 && r.$QL_$_absstate % 3 == 1 ? acc(QL_OWN(r.$QL_$_next_id), write) && (acc(QL(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next), write) && (r.$QL_$_next_level >= 0 && true)) && QL_state(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next) % 3 == 0 && !(x.$node_$next == null) : (r.$QL_$_absstate >= 5 && r.$QL_$_absstate % 3 == 2 ? acc(QL_OWN(r), write) && (acc(QL(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next), write) && (r.$QL_$_next_level >= 0 && true)) && !(x.$node_$next == null) : false)))))
}

predicate Inv(v: Int) 

method havoc_Bool() returns ($r: Bool)


method havoc_Ref() returns ($r: Ref)


method havoc_Int() returns ($r: Int)


method ___silicon_hack407_havoc_all_Qu()


method ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()


method ___silicon_hack407_havoc_all_QL()


method ___silicon_hack407_havoc_all_QL_interferenceContext_fp()


method makeQueue() returns (r: Ref, lvl: Int, ret: Ref)
  ensures acc(Qu(r, lvl, ret), write) && (lvl >= 0 && Qu_state(r, lvl, ret) == 0)
{
  var x: Ref
  var y: Ref
  var rs: Ref
  var rlvl: Int
  var $_levelVar_0: Int
  inhale $_levelVar_0 >= 0
  assert $_levelVar_0 >= 0
  inhale acc(Qu_sk_fp(), write) && acc(QL_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_interferenceContext_fp($q_r, $q_lvl, $q), write))
  inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_interferenceContext_fp($r, $lvl, $x), write))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) BEGIN 
  
  
  label pre_infer0
  
  // Inferring interference all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(1, $q_r, $q_lvl, $q)) } none < old[pre_infer0](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(1, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_infer0](Qu_state($q_r, $q_lvl, $q)) || false))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_infer0](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(1, $q_r, $q_lvl, $q) == old[pre_infer0](Qu_state($q_r, $q_lvl, $q)))
  
  // Inferring interference all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(1, $r, $lvl, $x)) } none < old[pre_infer0](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(1, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_infer0](QL_state($r, $lvl, $x)) || (0 == old[pre_infer0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_infer0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_infer0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_infer0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_infer0](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(1, $r, $lvl, $x) == old[pre_infer0](QL_state($r, $lvl, $x)))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) END 
  
  
  
  // ------- new:node BEGIN ----------
  
  
  y := new($node_$value, $node_$next)
  
  // ------- new:node END ------------
  
  
  
  // ------- Stabilising regions Qu,QL (after new:node@119.3) BEGIN 
  
  
  label pre_stabilize0
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(2, $q_r, $q_lvl, $q)) } none < old[pre_stabilize0](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(2, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize0](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize0](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(2, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize0](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(2, $q_r, $q_lvl, $q) == old[pre_stabilize0](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(2, $r, $lvl, $x)) } none < old[pre_stabilize0](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(2, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize0](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize0](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize0](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(2, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize0](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(2, $r, $lvl, $x) == old[pre_stabilize0](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after new:node@119.3) END 
  
  
  
  // ------- heap-write BEGIN --------
  
  
  y.$node_$next := null
  
  // ------- heap-write END ----------
  
  
  
  // ------- Stabilising regions Qu,QL (after heap-write@120.3) BEGIN 
  
  
  label pre_stabilize
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(3, $q_r, $q_lvl, $q)) } none < old[pre_stabilize](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(3, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(3, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(3, $q_r, $q_lvl, $q) == old[pre_stabilize](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(3, $r, $lvl, $x)) } none < old[pre_stabilize](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(3, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(3, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(3, $r, $lvl, $x) == old[pre_stabilize](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after heap-write@120.3) END 
  
  
  
  // ------- new:queue BEGIN ---------
  
  
  x := new($queue_$sentinel)
  x.$queue_$sentinel := y
  
  // ------- new:queue END -----------
  
  
  
  // ------- Stabilising regions Qu,QL (after new:queue@124.3) BEGIN 
  
  
  label pre_stabilize2
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(4, $q_r, $q_lvl, $q)) } none < old[pre_stabilize2](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(4, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize2](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize2](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(4, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize2](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(4, $q_r, $q_lvl, $q) == old[pre_stabilize2](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(4, $r, $lvl, $x)) } none < old[pre_stabilize2](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(4, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize2](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize2](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(4, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize2](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(4, $r, $lvl, $x) == old[pre_stabilize2](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after new:queue@124.3) END 
  
  
  
  // ------- assign BEGIN ------------
  
  
  ret := x
  
  // ------- assign END --------------
  
  
  
  // ------- Stabilising regions Qu,QL (after assign@127.3) BEGIN 
  
  
  label pre_stabilize3
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(5, $q_r, $q_lvl, $q)) } none < old[pre_stabilize3](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(5, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize3](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize3](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(5, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize3](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(5, $q_r, $q_lvl, $q) == old[pre_stabilize3](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(5, $r, $lvl, $x)) } none < old[pre_stabilize3](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(5, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize3](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize3](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(5, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize3](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(5, $r, $lvl, $x) == old[pre_stabilize3](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after assign@127.3) END 
  
  
  
  // ------- new:QL BEGIN ------------
  
  
  rs := new($QL_$_absstate, $QL_$_next_id, $QL_$_next_level)
  inhale acc(QL_OWN(rs), write)
  
  // ------- heap-write BEGIN --------
  
  
  rs.$QL_$_absstate := 1
  
  // ------- heap-write END ----------
  
  
  fold acc(QL(rs, rlvl, y), write)
  
  // ------- new:QL END --------------
  
  
  
  // ------- new:Qu BEGIN ------------
  
  
  r := new($Qu_$_sentinel_id, $Qu_$_sentinel_level)
  inhale true
  
  // ------- heap-write BEGIN --------
  
  
  r.$Qu_$_sentinel_id := rs
  
  // ------- heap-write END ----------
  
  
  
  // ------- heap-write BEGIN --------
  
  
  r.$Qu_$_sentinel_level := rlvl
  
  // ------- heap-write END ----------
  
  
  
  // ------- assume BEGIN ------------
  
  
  inhale 0 <= rlvl && rlvl < lvl
  
  // ------- assume END --------------
  
  
  fold acc(Qu(r, lvl, ret), write)
  
  // ------- new:Qu END --------------
  
  
  
  // ------- Stabilising regions Qu,QL (after seq-comp@127.3) BEGIN 
  
  
  label pre_stabilize4
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(6, $q_r, $q_lvl, $q)) } none < old[pre_stabilize4](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(6, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize4](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize4](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(6, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize4](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(6, $q_r, $q_lvl, $q) == old[pre_stabilize4](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(6, $r, $lvl, $x)) } none < old[pre_stabilize4](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(6, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize4](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize4](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(6, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize4](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(6, $r, $lvl, $x) == old[pre_stabilize4](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after seq-comp@127.3) END 
  
  
}

method getTail(r: Ref, lvl: Int, x: Ref) returns (y: Ref, y_r: Ref, y_lvl: Int)
  requires acc(QL(r, lvl, x), write) && (lvl >= 0 && true) && !(x == null)
  ensures acc(QL(y_r, y_lvl, y), write) && (y_lvl >= 0 && true) && !(y == null)
  ensures y_lvl <= lvl
{
  var n: Ref
  var cont: Bool
  var n_r: Ref
  var n_lvl: Int
  var $_levelVar_1: Int
  var $_levelVar_2: Int
  var $_levelVar_3: Int
  var $_levelVar_4: Int
  var $_levelVar_5: Int
  var $_levelVar_6: Int
  inhale $_levelVar_1 >= 0 && $_levelVar_1 > lvl
  assert $_levelVar_1 >= 0
  inhale acc(Qu_sk_fp(), write) && acc(QL_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_interferenceContext_fp($q_r, $q_lvl, $q), write))
  inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_interferenceContext_fp($r, $lvl, $x), write))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) BEGIN 
  
  
  label pre_infer
  
  // Inferring interference all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(7, $q_r, $q_lvl, $q)) } none < old[pre_infer](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(7, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_infer](Qu_state($q_r, $q_lvl, $q)) || false))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_infer](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(7, $q_r, $q_lvl, $q) == old[pre_infer](Qu_state($q_r, $q_lvl, $q)))
  
  // Inferring interference all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(7, $r, $lvl, $x)) } none < old[pre_infer](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(7, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_infer](QL_state($r, $lvl, $x)) || (0 == old[pre_infer](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_infer](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_infer](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_infer](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_infer](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(7, $r, $lvl, $x) == old[pre_infer](QL_state($r, $lvl, $x)))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) END 
  
  
  
  // ------- assign BEGIN ------------
  
  
  y := x
  
  // ------- assign END --------------
  
  
  
  // ------- Stabilising regions Qu,QL (after assign@150.3) BEGIN 
  
  
  label pre_stabilize5
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(8, $q_r, $q_lvl, $q)) } none < old[pre_stabilize5](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(8, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize5](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize5](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(8, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize5](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(8, $q_r, $q_lvl, $q) == old[pre_stabilize5](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(8, $r, $lvl, $x)) } none < old[pre_stabilize5](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(8, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize5](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize5](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(8, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize5](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(8, $r, $lvl, $x) == old[pre_stabilize5](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after assign@150.3) END 
  
  
  
  // ------- havoc BEGIN -------------
  
  
  y_r := havoc_Ref()
  
  // ------- havoc END ---------------
  
  
  
  // ------- assume BEGIN ------------
  
  
  inhale y_r == r
  
  // ------- assume END --------------
  
  
  
  // ------- havoc BEGIN -------------
  
  
  y_lvl := havoc_Int()
  
  // ------- havoc END ---------------
  
  
  
  // ------- assume BEGIN ------------
  
  
  inhale y_lvl == lvl
  
  // ------- assume END --------------
  
  
  
  // ------- assign BEGIN ------------
  
  
  cont := true
  
  // ------- assign END --------------
  
  
  
  // ------- Stabilising regions Qu,QL (after assign@156.3) BEGIN 
  
  
  label pre_stabilize6
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(9, $q_r, $q_lvl, $q)) } none < old[pre_stabilize6](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(9, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize6](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize6](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(9, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize6](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(9, $q_r, $q_lvl, $q) == old[pre_stabilize6](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(9, $r, $lvl, $x)) } none < old[pre_stabilize6](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(9, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize6](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize6](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(9, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize6](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(9, $r, $lvl, $x) == old[pre_stabilize6](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after assign@156.3) END 
  
  
  
  // ------- while BEGIN -------------
  
  
  label preWhile0
  while (cont)
    invariant acc(QL(y_r, y_lvl, y), write) && (y_lvl >= 0 && true) && !(y == null)
    invariant y_lvl <= lvl 
  {
    inhale acc(Qu_sk_fp(), write) && acc(QL_sk_fp(), write)
    
    // no init required
    
    
    
    // no init required
    
    
    inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_interferenceContext_fp($q_r, $q_lvl, $q), write))
    inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_interferenceContext_fp($r, $lvl, $x), write))
    inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_atomicity_context_fp($q_r, $q_lvl, $q), old[preWhile0](perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)))))
    inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: { Qu_atomicity_context_df($q_r, $q_lvl, $q) } none < old[preWhile0](perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q))) ==> Qu_atomicity_context_hf($q_r, $q_lvl, $q) == old[preWhile0](Qu_atomicity_context_hf($q_r, $q_lvl, $q)))
    inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_atomicity_context_fp($r, $lvl, $x), old[preWhile0](perm(QL_atomicity_context_fp($r, $lvl, $x)))))
    inhale (forall $r: Ref, $lvl: Int, $x: Ref :: { QL_atomicity_context_df($r, $lvl, $x) } none < old[preWhile0](perm(QL_atomicity_context_fp($r, $lvl, $x))) ==> QL_atomicity_context_hf($r, $lvl, $x) == old[preWhile0](QL_atomicity_context_hf($r, $lvl, $x)))
    
    // ------- Inferring interference context Qu,QL (infer context inside while) BEGIN 
    
    
    label pre_infer2
    
    // Inferring interference all instances of region Qu
    
    ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
    exhale acc(Qu_sk_fp(), write)
    inhale acc(Qu_sk_fp(), write)
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(10, $q_r, $q_lvl, $q)) } none < old[pre_infer2](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(10, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_infer2](Qu_state($q_r, $q_lvl, $q)) || false))))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_infer2](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(10, $q_r, $q_lvl, $q) == old[pre_infer2](Qu_state($q_r, $q_lvl, $q)))
    
    // Inferring interference all instances of region QL
    
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    exhale acc(QL_sk_fp(), write)
    inhale acc(QL_sk_fp(), write)
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(10, $r, $lvl, $x)) } none < old[pre_infer2](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(10, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_infer2](QL_state($r, $lvl, $x)) || (0 == old[pre_infer2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_infer2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_infer2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_infer2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer2](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_infer2](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(10, $r, $lvl, $x) == old[pre_infer2](QL_state($r, $lvl, $x)))
    
    // ------- Inferring interference context Qu,QL (infer context inside while) END 
    
    
    
    // ------- open-region BEGIN -------
    
    
    label pre_open_region0
    assert $_levelVar_1 > y_lvl
    $_levelVar_2 := y_lvl
    unfold acc(QL(y_r, y_lvl, y), write)
    label transitionPre0
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    
    // no additional linking required
    
    
    
    // havoc performed by other front resource
    
    
    inhale !(y_r.$QL_$_absstate == 0) && !(y_r.$QL_$_absstate == 1) && (y_r.$QL_$_absstate >= 3 && y_r.$QL_$_absstate % 3 == 0) ==> QL_interferenceReference_hf(10, y_r.$QL_$_next_id, y_r.$QL_$_next_level, y.$node_$next) == old[transitionPre0](QL_state(y_r.$QL_$_next_id, y_r.$QL_$_next_level, y.$node_$next))
    
    // havoc performed by other front resource
    
    
    inhale !(y_r.$QL_$_absstate == 0) && !(y_r.$QL_$_absstate == 1) && !(y_r.$QL_$_absstate >= 3 && y_r.$QL_$_absstate % 3 == 0) && (y_r.$QL_$_absstate >= 4 && y_r.$QL_$_absstate % 3 == 1) ==> QL_interferenceReference_hf(10, y_r.$QL_$_next_id, y_r.$QL_$_next_level, y.$node_$next) == old[transitionPre0](QL_state(y_r.$QL_$_next_id, y_r.$QL_$_next_level, y.$node_$next))
    
    // havoc performed by other front resource
    
    
    inhale !(y_r.$QL_$_absstate == 0) && !(y_r.$QL_$_absstate == 1) && !(y_r.$QL_$_absstate >= 3 && y_r.$QL_$_absstate % 3 == 0) && !(y_r.$QL_$_absstate >= 4 && y_r.$QL_$_absstate % 3 == 1) && (y_r.$QL_$_absstate >= 5 && y_r.$QL_$_absstate % 3 == 2) ==> QL_interferenceReference_hf(10, y_r.$QL_$_next_id, y_r.$QL_$_next_level, y.$node_$next) == old[transitionPre0](QL_state(y_r.$QL_$_next_id, y_r.$QL_$_next_level, y.$node_$next))
    
    // ------- heap-read BEGIN ---------
    
    
    n := y.$node_$next
    
    // ------- heap-read END -----------
    
    
    
    // ------- assert BEGIN ------------
    
    
    assert acc(y_r.$QL_$_next_id, write) && true
    n_r := y_r.$QL_$_next_id
    
    // ------- assert END --------------
    
    
    
    // ------- assert BEGIN ------------
    
    
    assert acc(y_r.$QL_$_next_level, write) && true
    n_lvl := y_r.$QL_$_next_level
    
    // ------- assert END --------------
    
    
    
    // ------- assert BEGIN ------------
    
    
    assert (!(n == null) ? acc(QL(n_r, n_lvl, n), write) && (n_lvl >= 0 && true) : true)
    
    // ------- assert END --------------
    
    
    
    // ------- inhale BEGIN ------------
    
    
    inhale (!(n == null) ? acc(QL(n_r, n_lvl, n), write) && (n_lvl >= 0 && true) : true)
    
    // ------- inhale END --------------
    
    
    fold acc(QL(y_r, y_lvl, y), write)
    assert QL_state(y_r, y_lvl, y) == old[pre_open_region0](QL_state(y_r, y_lvl, y))
    $_levelVar_3 := $_levelVar_1
    
    // ------- open-region END ---------
    
    
    
    // ------- Stabilising regions Qu,QL (after open-region@162.5) BEGIN 
    
    
    label pre_stabilize7
    
    // Stabilising all instances of region Qu
    
    ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
    exhale acc(Qu_sk_fp(), write)
    inhale acc(Qu_sk_fp(), write)
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(11, $q_r, $q_lvl, $q)) } none < old[pre_stabilize7](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(11, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize7](Qu_state($q_r, $q_lvl, $q)) || false))))
    ___silicon_hack407_havoc_all_Qu()
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize7](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(11, $q_r, $q_lvl, $q)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize7](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(11, $q_r, $q_lvl, $q) == old[pre_stabilize7](Qu_state($q_r, $q_lvl, $q)))
    
    // Stabilising all instances of region QL
    
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    exhale acc(QL_sk_fp(), write)
    inhale acc(QL_sk_fp(), write)
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(11, $r, $lvl, $x)) } none < old[pre_stabilize7](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(11, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize7](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize7](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize7](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize7](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize7](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize7](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize7](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize7](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
    ___silicon_hack407_havoc_all_QL()
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize7](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(11, $r, $lvl, $x)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize7](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(11, $r, $lvl, $x) == old[pre_stabilize7](QL_state($r, $lvl, $x)))
    
    // ------- Stabilising regions Qu,QL (after open-region@162.5) END 
    
    
    
    // ------- if-then-else BEGIN ------
    
    
    if (n == null) {
      
      // ------- assign BEGIN ------------
      
      
      cont := false
      
      // ------- assign END --------------
      
      
      
      // ------- Stabilising regions Qu,QL (after assign@176.7) BEGIN 
      
      
      label pre_stabilize8
      
      // Stabilising all instances of region Qu
      
      ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
      exhale acc(Qu_sk_fp(), write)
      inhale acc(Qu_sk_fp(), write)
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(12, $q_r, $q_lvl, $q)) } none < old[pre_stabilize8](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(12, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize8](Qu_state($q_r, $q_lvl, $q)) || false))))
      ___silicon_hack407_havoc_all_Qu()
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize8](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(12, $q_r, $q_lvl, $q)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize8](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(12, $q_r, $q_lvl, $q) == old[pre_stabilize8](Qu_state($q_r, $q_lvl, $q)))
      
      // Stabilising all instances of region QL
      
      ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
      exhale acc(QL_sk_fp(), write)
      inhale acc(QL_sk_fp(), write)
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(12, $r, $lvl, $x)) } none < old[pre_stabilize8](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(12, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize8](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize8](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize8](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize8](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize8](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize8](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize8](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize8](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
      ___silicon_hack407_havoc_all_QL()
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize8](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(12, $r, $lvl, $x)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize8](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(12, $r, $lvl, $x) == old[pre_stabilize8](QL_state($r, $lvl, $x)))
      
      // ------- Stabilising regions Qu,QL (after assign@176.7) END 
      
      
      assert $_levelVar_3 == $_levelVar_3
    } else {
      $_levelVar_4 := $_levelVar_3
      
      // ------- assign BEGIN ------------
      
      
      y := n
      
      // ------- assign END --------------
      
      
      
      // ------- Stabilising regions Qu,QL (after assign@178.7) BEGIN 
      
      
      label pre_stabilize9
      
      // Stabilising all instances of region Qu
      
      ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
      exhale acc(Qu_sk_fp(), write)
      inhale acc(Qu_sk_fp(), write)
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(13, $q_r, $q_lvl, $q)) } none < old[pre_stabilize9](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(13, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize9](Qu_state($q_r, $q_lvl, $q)) || false))))
      ___silicon_hack407_havoc_all_Qu()
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize9](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(13, $q_r, $q_lvl, $q)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize9](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(13, $q_r, $q_lvl, $q) == old[pre_stabilize9](Qu_state($q_r, $q_lvl, $q)))
      
      // Stabilising all instances of region QL
      
      ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
      exhale acc(QL_sk_fp(), write)
      inhale acc(QL_sk_fp(), write)
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(13, $r, $lvl, $x)) } none < old[pre_stabilize9](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(13, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize9](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
      ___silicon_hack407_havoc_all_QL()
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize9](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(13, $r, $lvl, $x)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize9](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(13, $r, $lvl, $x) == old[pre_stabilize9](QL_state($r, $lvl, $x)))
      
      // ------- Stabilising regions Qu,QL (after assign@178.7) END 
      
      
      
      // ------- havoc BEGIN -------------
      
      
      y_r := havoc_Ref()
      
      // ------- havoc END ---------------
      
      
      
      // ------- assume BEGIN ------------
      
      
      inhale y_r == n_r
      
      // ------- assume END --------------
      
      
      
      // ------- havoc BEGIN -------------
      
      
      y_lvl := havoc_Int()
      
      // ------- havoc END ---------------
      
      
      
      // ------- assume BEGIN ------------
      
      
      inhale y_lvl == n_lvl
      
      // ------- assume END --------------
      
      
      
      // ------- Stabilising regions Qu,QL (after seq-comp@178.7) BEGIN 
      
      
      label pre_stabilize10
      
      // Stabilising all instances of region Qu
      
      ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
      exhale acc(Qu_sk_fp(), write)
      inhale acc(Qu_sk_fp(), write)
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(14, $q_r, $q_lvl, $q)) } none < old[pre_stabilize10](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(14, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize10](Qu_state($q_r, $q_lvl, $q)) || false))))
      ___silicon_hack407_havoc_all_Qu()
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize10](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(14, $q_r, $q_lvl, $q)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize10](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(14, $q_r, $q_lvl, $q) == old[pre_stabilize10](Qu_state($q_r, $q_lvl, $q)))
      
      // Stabilising all instances of region QL
      
      ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
      exhale acc(QL_sk_fp(), write)
      inhale acc(QL_sk_fp(), write)
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(14, $r, $lvl, $x)) } none < old[pre_stabilize10](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(14, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize10](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
      ___silicon_hack407_havoc_all_QL()
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize10](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(14, $r, $lvl, $x)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize10](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(14, $r, $lvl, $x) == old[pre_stabilize10](QL_state($r, $lvl, $x)))
      
      // ------- Stabilising regions Qu,QL (after seq-comp@178.7) END 
      
      
      assert $_levelVar_4 == $_levelVar_3
    }
    $_levelVar_5 := $_levelVar_3
    
    // ------- if-then-else END --------
    
    
    assert $_levelVar_5 == $_levelVar_1
  }
  $_levelVar_6 := $_levelVar_1
  
  // ------- while END ---------------
  
  
  
  // ------- Stabilising regions Qu,QL (after while@158.3) BEGIN 
  
  
  label pre_stabilize11
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(15, $q_r, $q_lvl, $q)) } none < old[pre_stabilize11](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(15, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize11](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize11](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(15, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize11](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(15, $q_r, $q_lvl, $q) == old[pre_stabilize11](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(15, $r, $lvl, $x)) } none < old[pre_stabilize11](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(15, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize11](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize11](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(15, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize11](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(15, $r, $lvl, $x) == old[pre_stabilize11](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after while@158.3) END 
  
  
}

method enqueue(s: Ref, lvl: Int, x: Ref, v: Int)
  requires acc(Qu(s, lvl, x), write) && (lvl >= 0 && Qu_state(s, lvl, x) == 0) && acc(Inv(v), write)
  ensures acc(Qu(s, lvl, x), write) && (lvl >= 0 && Qu_state(s, lvl, x) == 0)
{
  var y: Ref
  var h: Ref
  var t: Ref
  var y_r: Ref
  var y_lvl: Int
  var t_r: Ref
  var t_lvl: Int
  var b: Bool
  var cont: Bool
  var h_r: Ref
  var h_lvl: Int
  var t_a0: Int
  var $_levelVar_7: Int
  var $_levelVar_8: Int
  var $_levelVar_9: Int
  var $_levelVar_10: Int
  var $_levelVar_11: Int
  var $_levelVar_12: Int
  var $_levelVar_13: Int
  var $_levelVar_14: Int
  inhale $_levelVar_7 >= 0 && $_levelVar_7 > lvl
  assert $_levelVar_7 >= 0
  inhale acc(Qu_sk_fp(), write) && acc(QL_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_interferenceContext_fp($q_r, $q_lvl, $q), write))
  inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_interferenceContext_fp($r, $lvl, $x), write))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) BEGIN 
  
  
  label pre_infer3
  
  // Inferring interference all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(16, $q_r, $q_lvl, $q)) } none < old[pre_infer3](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(16, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_infer3](Qu_state($q_r, $q_lvl, $q)) || false))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_infer3](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(16, $q_r, $q_lvl, $q) == old[pre_infer3](Qu_state($q_r, $q_lvl, $q)))
  
  // Inferring interference all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(16, $r, $lvl, $x)) } none < old[pre_infer3](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(16, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_infer3](QL_state($r, $lvl, $x)) || (0 == old[pre_infer3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_infer3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_infer3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_infer3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer3](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_infer3](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(16, $r, $lvl, $x) == old[pre_infer3](QL_state($r, $lvl, $x)))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) END 
  
  
  
  // ------- new:node BEGIN ----------
  
  
  y := new($node_$value, $node_$next)
  y.$node_$value := v
  y.$node_$next := null
  
  // ------- new:node END ------------
  
  
  
  // ------- Stabilising regions Qu,QL (after new:node@204.3) BEGIN 
  
  
  label pre_stabilize12
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(17, $q_r, $q_lvl, $q)) } none < old[pre_stabilize12](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(17, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize12](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize12](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(17, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize12](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(17, $q_r, $q_lvl, $q) == old[pre_stabilize12](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(17, $r, $lvl, $x)) } none < old[pre_stabilize12](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(17, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize12](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize12](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(17, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize12](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(17, $r, $lvl, $x) == old[pre_stabilize12](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after new:node@204.3) END 
  
  
  
  // ------- assign BEGIN ------------
  
  
  cont := true
  
  // ------- assign END --------------
  
  
  
  // ------- Stabilising regions Qu,QL (after assign@206.3) BEGIN 
  
  
  label pre_stabilize13
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(18, $q_r, $q_lvl, $q)) } none < old[pre_stabilize13](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(18, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize13](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize13](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(18, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize13](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(18, $q_r, $q_lvl, $q) == old[pre_stabilize13](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(18, $r, $lvl, $x)) } none < old[pre_stabilize13](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(18, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize13](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize13](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize13](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize13](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize13](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize13](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize13](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize13](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize13](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(18, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize13](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(18, $r, $lvl, $x) == old[pre_stabilize13](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after assign@206.3) END 
  
  
  
  // ------- while BEGIN -------------
  
  
  label preWhile
  while (cont)
    invariant acc(Qu(s, lvl, x), write) && (lvl >= 0 && Qu_state(s, lvl, x) == 0)
    invariant (cont ? acc(y.$node_$value, write) && y.$node_$value == v && (acc(y.$node_$next, write) && y.$node_$next == null) && acc(Inv(v), write) : true) 
  {
    inhale acc(Qu_sk_fp(), write) && acc(QL_sk_fp(), write)
    
    // no init required
    
    
    
    // no init required
    
    
    inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_interferenceContext_fp($q_r, $q_lvl, $q), write))
    inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_interferenceContext_fp($r, $lvl, $x), write))
    inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_atomicity_context_fp($q_r, $q_lvl, $q), old[preWhile](perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)))))
    inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: { Qu_atomicity_context_df($q_r, $q_lvl, $q) } none < old[preWhile](perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q))) ==> Qu_atomicity_context_hf($q_r, $q_lvl, $q) == old[preWhile](Qu_atomicity_context_hf($q_r, $q_lvl, $q)))
    inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_atomicity_context_fp($r, $lvl, $x), old[preWhile](perm(QL_atomicity_context_fp($r, $lvl, $x)))))
    inhale (forall $r: Ref, $lvl: Int, $x: Ref :: { QL_atomicity_context_df($r, $lvl, $x) } none < old[preWhile](perm(QL_atomicity_context_fp($r, $lvl, $x))) ==> QL_atomicity_context_hf($r, $lvl, $x) == old[preWhile](QL_atomicity_context_hf($r, $lvl, $x)))
    
    // ------- Inferring interference context Qu,QL (infer context inside while) BEGIN 
    
    
    label pre_infer4
    
    // Inferring interference all instances of region Qu
    
    ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
    exhale acc(Qu_sk_fp(), write)
    inhale acc(Qu_sk_fp(), write)
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(19, $q_r, $q_lvl, $q)) } none < old[pre_infer4](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(19, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_infer4](Qu_state($q_r, $q_lvl, $q)) || false))))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_infer4](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(19, $q_r, $q_lvl, $q) == old[pre_infer4](Qu_state($q_r, $q_lvl, $q)))
    
    // Inferring interference all instances of region QL
    
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    exhale acc(QL_sk_fp(), write)
    inhale acc(QL_sk_fp(), write)
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(19, $r, $lvl, $x)) } none < old[pre_infer4](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(19, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_infer4](QL_state($r, $lvl, $x)) || (0 == old[pre_infer4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_infer4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_infer4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_infer4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer4](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_infer4](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(19, $r, $lvl, $x) == old[pre_infer4](QL_state($r, $lvl, $x)))
    
    // ------- Inferring interference context Qu,QL (infer context inside while) END 
    
    
    
    // ------- open-region BEGIN -------
    
    
    label pre_open_region
    assert $_levelVar_7 > lvl
    $_levelVar_8 := lvl
    unfold acc(Qu(s, lvl, x), write)
    label transitionPre
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    
    // no additional linking required
    
    
    
    // havoc performed by other front resource
    
    
    inhale true ==> QL_interferenceReference_hf(19, s.$Qu_$_sentinel_id, s.$Qu_$_sentinel_level, x.$queue_$sentinel) == old[transitionPre](QL_state(s.$Qu_$_sentinel_id, s.$Qu_$_sentinel_level, x.$queue_$sentinel))
    
    // ------- heap-read BEGIN ---------
    
    
    h := x.$queue_$sentinel
    
    // ------- heap-read END -----------
    
    
    
    // ------- assert BEGIN ------------
    
    
    assert acc(s.$Qu_$_sentinel_id, write) && true
    h_r := s.$Qu_$_sentinel_id
    
    // ------- assert END --------------
    
    
    
    // ------- assert BEGIN ------------
    
    
    assert acc(s.$Qu_$_sentinel_level, write) && true
    h_lvl := s.$Qu_$_sentinel_level
    
    // ------- assert END --------------
    
    
    
    // ------- assert BEGIN ------------
    
    
    assert acc(QL(h_r, h_lvl, h), write) && (h_lvl >= 0 && true)
    
    // ------- assert END --------------
    
    
    
    // ------- inhale BEGIN ------------
    
    
    inhale acc(QL(h_r, h_lvl, h), write) && (h_lvl >= 0 && true)
    
    // ------- inhale END --------------
    
    
    fold acc(Qu(s, lvl, x), write)
    assert Qu_state(s, lvl, x) == old[pre_open_region](Qu_state(s, lvl, x))
    $_levelVar_9 := $_levelVar_7
    
    // ------- open-region END ---------
    
    
    
    // ------- Stabilising regions Qu,QL (after open-region@213.5) BEGIN 
    
    
    label pre_stabilize14
    
    // Stabilising all instances of region Qu
    
    ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
    exhale acc(Qu_sk_fp(), write)
    inhale acc(Qu_sk_fp(), write)
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(20, $q_r, $q_lvl, $q)) } none < old[pre_stabilize14](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(20, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize14](Qu_state($q_r, $q_lvl, $q)) || false))))
    ___silicon_hack407_havoc_all_Qu()
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize14](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(20, $q_r, $q_lvl, $q)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize14](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(20, $q_r, $q_lvl, $q) == old[pre_stabilize14](Qu_state($q_r, $q_lvl, $q)))
    
    // Stabilising all instances of region QL
    
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    exhale acc(QL_sk_fp(), write)
    inhale acc(QL_sk_fp(), write)
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(20, $r, $lvl, $x)) } none < old[pre_stabilize14](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(20, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize14](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize14](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize14](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize14](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize14](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize14](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize14](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize14](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
    ___silicon_hack407_havoc_all_QL()
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize14](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(20, $r, $lvl, $x)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize14](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(20, $r, $lvl, $x) == old[pre_stabilize14](QL_state($r, $lvl, $x)))
    
    // ------- Stabilising regions Qu,QL (after open-region@213.5) END 
    
    
    
    // ------- call:getTail BEGIN ------
    
    
    assert true
    label pre_call0
    assert $_levelVar_9 >= 0 && $_levelVar_9 > h_lvl
    assert true
    exhale acc(QL(h_r, h_lvl, h), write) && (h_lvl >= 0 && true) && !(h == null)
    
    // ------- Stabilising regions Qu,QL (before call:getTail@225.5) BEGIN 
    
    
    label pre_stabilize15
    
    // Stabilising all instances of region Qu
    
    ___silicon_hack407_havoc_all_Qu()
    exhale acc(Qu_sk_fp(), write)
    inhale acc(Qu_sk_fp(), write)
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize15](perm(Qu($q_r, $q_lvl, $q))) ==> (none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && (Qu_state($q_r, $q_lvl, $q) == old[pre_stabilize15](Qu_state($q_r, $q_lvl, $q)) || false))
    
    // Stabilising all instances of region QL
    
    ___silicon_hack407_havoc_all_QL()
    exhale acc(QL_sk_fp(), write)
    inhale acc(QL_sk_fp(), write)
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize15](perm(QL($r, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> (QL_state($r, $lvl, $x) in QL_atomicity_context_hf($r, $lvl, $x))) && (QL_state($r, $lvl, $x) == old[pre_stabilize15](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize15](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize15](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize15](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize15](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize15](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize15](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize15](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))
    
    // ------- Stabilising regions Qu,QL (before call:getTail@225.5) END 
    
    
    t := havoc_Ref()
    t_r := havoc_Ref()
    t_lvl := havoc_Int()
    inhale acc(QL(t_r, t_lvl, t), write) && (t_lvl >= 0 && true) && !(t == null) && t_lvl <= h_lvl
    
    // ------- call:getTail END --------
    
    
    
    // ------- Stabilising regions Qu,QL (after call:getTail@225.5) BEGIN 
    
    
    label pre_stabilize16
    
    // Stabilising all instances of region Qu
    
    ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
    exhale acc(Qu_sk_fp(), write)
    inhale acc(Qu_sk_fp(), write)
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(21, $q_r, $q_lvl, $q)) } none < old[pre_stabilize16](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(21, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize16](Qu_state($q_r, $q_lvl, $q)) || false))))
    ___silicon_hack407_havoc_all_Qu()
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize16](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(21, $q_r, $q_lvl, $q)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize16](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(21, $q_r, $q_lvl, $q) == old[pre_stabilize16](Qu_state($q_r, $q_lvl, $q)))
    
    // Stabilising all instances of region QL
    
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    exhale acc(QL_sk_fp(), write)
    inhale acc(QL_sk_fp(), write)
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(21, $r, $lvl, $x)) } none < old[pre_stabilize16](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(21, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize16](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize16](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize16](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize16](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize16](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize16](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize16](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize16](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
    ___silicon_hack407_havoc_all_QL()
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize16](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(21, $r, $lvl, $x)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize16](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(21, $r, $lvl, $x) == old[pre_stabilize16](QL_state($r, $lvl, $x)))
    
    // ------- Stabilising regions Qu,QL (after call:getTail@225.5) END 
    
    
    
    // ------- inhale BEGIN ------------
    
    
    inhale acc(QL_Z(t_r), write)
    
    // ------- inhale END --------------
    
    
    
    // ------- use-atomic BEGIN --------
    
    
    label pre_use_atomic0
    assert perm(QL_atomicity_context_fp(t_r, t_lvl, t)) == none
    assert $_levelVar_9 > t_lvl
    $_levelVar_10 := t_lvl
    exhale acc(QL_Z(t_r), write)
    
    // ------- Stabilising regions Qu (before use-atomic@230.5) BEGIN 
    
    
    label pre_stabilize18
    
    // Stabilising all instances of region Qu
    
    ___silicon_hack407_havoc_all_Qu()
    exhale acc(Qu_sk_fp(), write)
    inhale acc(Qu_sk_fp(), write)
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize18](perm(Qu($q_r, $q_lvl, $q))) ==> (none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && (Qu_state($q_r, $q_lvl, $q) == old[pre_stabilize18](Qu_state($q_r, $q_lvl, $q)) || false))
    
    // ------- Stabilising regions Qu (before use-atomic@230.5) END 
    
    
    unfold acc(QL(t_r, t_lvl, t), write)
    label transitionPre2
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    
    // no additional linking required
    
    
    
    // havoc performed by other front resource
    
    
    inhale !(t_r.$QL_$_absstate == 0) && !(t_r.$QL_$_absstate == 1) && (t_r.$QL_$_absstate >= 3 && t_r.$QL_$_absstate % 3 == 0) ==> QL_interferenceReference_hf(21, t_r.$QL_$_next_id, t_r.$QL_$_next_level, t.$node_$next) == old[transitionPre2](QL_state(t_r.$QL_$_next_id, t_r.$QL_$_next_level, t.$node_$next))
    
    // havoc performed by other front resource
    
    
    inhale !(t_r.$QL_$_absstate == 0) && !(t_r.$QL_$_absstate == 1) && !(t_r.$QL_$_absstate >= 3 && t_r.$QL_$_absstate % 3 == 0) && (t_r.$QL_$_absstate >= 4 && t_r.$QL_$_absstate % 3 == 1) ==> QL_interferenceReference_hf(21, t_r.$QL_$_next_id, t_r.$QL_$_next_level, t.$node_$next) == old[transitionPre2](QL_state(t_r.$QL_$_next_id, t_r.$QL_$_next_level, t.$node_$next))
    
    // havoc performed by other front resource
    
    
    inhale !(t_r.$QL_$_absstate == 0) && !(t_r.$QL_$_absstate == 1) && !(t_r.$QL_$_absstate >= 3 && t_r.$QL_$_absstate % 3 == 0) && !(t_r.$QL_$_absstate >= 4 && t_r.$QL_$_absstate % 3 == 1) && (t_r.$QL_$_absstate >= 5 && t_r.$QL_$_absstate % 3 == 2) ==> QL_interferenceReference_hf(21, t_r.$QL_$_next_id, t_r.$QL_$_next_level, t.$node_$next) == old[transitionPre2](QL_state(t_r.$QL_$_next_id, t_r.$QL_$_next_level, t.$node_$next))
    
    // ------- Stabilising regions QL (before use-atomic@230.5) BEGIN 
    
    
    label pre_stabilize19
    
    // Stabilising all instances of region QL
    
    ___silicon_hack407_havoc_all_QL()
    exhale acc(QL_sk_fp(), write)
    inhale acc(QL_sk_fp(), write)
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize19](perm(QL($r, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> (QL_state($r, $lvl, $x) in QL_atomicity_context_hf($r, $lvl, $x))) && (QL_state($r, $lvl, $x) == old[pre_stabilize19](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize19](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize19](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize19](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize19](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize19](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize19](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize19](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))
    
    // ------- Stabilising regions QL (before use-atomic@230.5) END 
    
    
    inhale acc(QL_Z(t_r), write)
    
    // ------- call:CAS_next BEGIN -----
    
    
    assert true
    label pre_call
    assert $_levelVar_10 >= 0
    assert true
    exhale acc(t.$node_$next, write) && true
    
    // ------- Stabilising regions Qu,QL (before call:CAS_next@233.7) BEGIN 
    
    
    label pre_stabilize17
    
    // Stabilising all instances of region Qu
    
    ___silicon_hack407_havoc_all_Qu()
    exhale acc(Qu_sk_fp(), write)
    inhale acc(Qu_sk_fp(), write)
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize17](perm(Qu($q_r, $q_lvl, $q))) ==> (none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && (Qu_state($q_r, $q_lvl, $q) == old[pre_stabilize17](Qu_state($q_r, $q_lvl, $q)) || false))
    
    // Stabilising all instances of region QL
    
    ___silicon_hack407_havoc_all_QL()
    exhale acc(QL_sk_fp(), write)
    inhale acc(QL_sk_fp(), write)
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize17](perm(QL($r, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> (QL_state($r, $lvl, $x) in QL_atomicity_context_hf($r, $lvl, $x))) && (QL_state($r, $lvl, $x) == old[pre_stabilize17](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize17](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize17](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize17](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize17](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize17](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize17](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize17](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))
    
    // ------- Stabilising regions Qu,QL (before call:CAS_next@233.7) END 
    
    
    b := havoc_Bool()
    inhale (old[pre_call](t.$node_$next) == null ? b && (acc(t.$node_$next, write) && t.$node_$next == y) : !b && (acc(t.$node_$next, write) && t.$node_$next == old[pre_call](t.$node_$next)))
    
    // ------- call:CAS_next END -------
    
    
    
    // ------- if-then-else BEGIN ------
    
    
    if (b) {
      
      // ------- new:QL BEGIN ------------
      
      
      y_r := new($QL_$_absstate, $QL_$_next_id, $QL_$_next_level)
      inhale acc(QL_OWN(y_r), write)
      
      // ------- heap-write BEGIN --------
      
      
      y_r.$QL_$_absstate := 0
      
      // ------- heap-write END ----------
      
      
      
      // ------- havoc BEGIN -------------
      
      
      y_lvl := havoc_Int()
      
      // ------- havoc END ---------------
      
      
      
      // ------- assume BEGIN ------------
      
      
      inhale 0 < y_lvl && y_lvl < t_lvl
      
      // ------- assume END --------------
      
      
      fold acc(QL(y_r, y_lvl, y), write)
      
      // ------- new:QL END --------------
      
      
      
      // ------- assert BEGIN ------------
      
      
      assert acc(t_r.$QL_$_absstate, write) && true
      t_a0 := t_r.$QL_$_absstate
      
      // ------- assert END --------------
      
      
      
      // ------- assert BEGIN ------------
      
      
      assert t_a0 == 0 || t_a0 == 1
      
      // ------- assert END --------------
      
      
      
      // ------- heap-write BEGIN --------
      
      
      t_r.$QL_$_absstate := (t_a0 == 0 ? 3 : 4)
      
      // ------- heap-write END ----------
      
      
      
      // ------- heap-write BEGIN --------
      
      
      t_r.$QL_$_next_id := y_r
      
      // ------- heap-write END ----------
      
      
      
      // ------- heap-write BEGIN --------
      
      
      t_r.$QL_$_next_level := y_lvl
      
      // ------- heap-write END ----------
      
      
      assert $_levelVar_10 == $_levelVar_10
    }
    $_levelVar_11 := $_levelVar_10
    
    // ------- if-then-else END --------
    
    
    fold acc(QL(t_r, t_lvl, t), write)
    assert old[pre_use_atomic0](QL_state(t_r, t_lvl, t)) == QL_state(t_r, t_lvl, t) || 0 == old[pre_use_atomic0](QL_state(t_r, t_lvl, t)) && (QL_state(t_r, t_lvl, t) > 0 && QL_state(t_r, t_lvl, t) % 3 == 0) || 1 == old[pre_use_atomic0](QL_state(t_r, t_lvl, t)) && (QL_state(t_r, t_lvl, t) > 0 && QL_state(t_r, t_lvl, t) % 3 == 1)
    $_levelVar_12 := $_levelVar_9
    
    // ------- use-atomic END ----------
    
    
    
    // ------- Stabilising regions Qu,QL (after use-atomic@230.5) BEGIN 
    
    
    label pre_stabilize20
    
    // Stabilising all instances of region Qu
    
    ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
    exhale acc(Qu_sk_fp(), write)
    inhale acc(Qu_sk_fp(), write)
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(22, $q_r, $q_lvl, $q)) } none < old[pre_stabilize20](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(22, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize20](Qu_state($q_r, $q_lvl, $q)) || false))))
    ___silicon_hack407_havoc_all_Qu()
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize20](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(22, $q_r, $q_lvl, $q)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize20](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(22, $q_r, $q_lvl, $q) == old[pre_stabilize20](Qu_state($q_r, $q_lvl, $q)))
    
    // Stabilising all instances of region QL
    
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    exhale acc(QL_sk_fp(), write)
    inhale acc(QL_sk_fp(), write)
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(22, $r, $lvl, $x)) } none < old[pre_stabilize20](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(22, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize20](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize20](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize20](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize20](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize20](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize20](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize20](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize20](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
    ___silicon_hack407_havoc_all_QL()
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize20](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(22, $r, $lvl, $x)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize20](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(22, $r, $lvl, $x) == old[pre_stabilize20](QL_state($r, $lvl, $x)))
    
    // ------- Stabilising regions Qu,QL (after use-atomic@230.5) END 
    
    
    
    // ------- if-then-else BEGIN ------
    
    
    if (b) {
      
      // ------- assign BEGIN ------------
      
      
      cont := false
      
      // ------- assign END --------------
      
      
      
      // ------- Stabilising regions Qu,QL (after assign@257.7) BEGIN 
      
      
      label pre_stabilize21
      
      // Stabilising all instances of region Qu
      
      ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
      exhale acc(Qu_sk_fp(), write)
      inhale acc(Qu_sk_fp(), write)
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(23, $q_r, $q_lvl, $q)) } none < old[pre_stabilize21](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(23, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize21](Qu_state($q_r, $q_lvl, $q)) || false))))
      ___silicon_hack407_havoc_all_Qu()
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize21](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(23, $q_r, $q_lvl, $q)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize21](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(23, $q_r, $q_lvl, $q) == old[pre_stabilize21](Qu_state($q_r, $q_lvl, $q)))
      
      // Stabilising all instances of region QL
      
      ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
      exhale acc(QL_sk_fp(), write)
      inhale acc(QL_sk_fp(), write)
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(23, $r, $lvl, $x)) } none < old[pre_stabilize21](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(23, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize21](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize21](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize21](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize21](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize21](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize21](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize21](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize21](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
      ___silicon_hack407_havoc_all_QL()
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize21](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(23, $r, $lvl, $x)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize21](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(23, $r, $lvl, $x) == old[pre_stabilize21](QL_state($r, $lvl, $x)))
      
      // ------- Stabilising regions Qu,QL (after assign@257.7) END 
      
      
      assert $_levelVar_12 == $_levelVar_12
    }
    $_levelVar_13 := $_levelVar_12
    
    // ------- if-then-else END --------
    
    
    assert $_levelVar_13 == $_levelVar_7
  }
  $_levelVar_14 := $_levelVar_7
  
  // ------- while END ---------------
  
  
  
  // ------- Stabilising regions Qu,QL (after while@208.3) BEGIN 
  
  
  label pre_stabilize22
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(24, $q_r, $q_lvl, $q)) } none < old[pre_stabilize22](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(24, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize22](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize22](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(24, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize22](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(24, $q_r, $q_lvl, $q) == old[pre_stabilize22](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(24, $r, $lvl, $x)) } none < old[pre_stabilize22](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(24, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize22](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize22](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize22](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize22](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize22](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize22](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize22](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize22](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize22](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(24, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize22](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(24, $r, $lvl, $x) == old[pre_stabilize22](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after while@208.3) END 
  
  
}

method dequeue(q_r: Ref, q_lvl: Int, q: Ref) returns (success: Bool, v: Int)
  requires acc(Qu(q_r, q_lvl, q), write) && (q_lvl >= 0 && Qu_state(q_r, q_lvl, q) == 0)
  ensures (success ? acc(Inv(v), write) : true)
{
  var sl: Ref
  var hd: Ref
  var done: Bool
  var sl_r0: Ref
  var sl_lvl0: Int
  var sl_a0: Int
  var hd_r0: Ref
  var hd_lvl0: Int
  var hd_a0: Int
  var sl_r1: Ref
  var sl_lvl1: Int
  var sl1: Ref
  var sl_a1: Int
  var hd1: Ref
  var hd_r1: Ref
  var hd_lvl1: Int
  var u40: Int
  var v0: Int
  var $_levelVar_15: Int
  var $_levelVar_16: Int
  var $_levelVar_17: Int
  var $_levelVar_18: Int
  var $_levelVar_19: Int
  var $_levelVar_20: Int
  var $_levelVar_21: Int
  var $_levelVar_22: Int
  var $_levelVar_23: Int
  var $_levelVar_24: Int
  var $_levelVar_25: Int
  var $_levelVar_26: Int
  var $_levelVar_27: Int
  var $_levelVar_28: Int
  var $_levelVar_29: Int
  var $_levelVar_30: Int
  var $_levelVar_31: Int
  var $_levelVar_32: Int
  var $_levelVar_33: Int
  var $_levelVar_34: Int
  inhale $_levelVar_15 >= 0 && $_levelVar_15 > q_lvl
  assert $_levelVar_15 >= 0
  inhale acc(Qu_sk_fp(), write) && acc(QL_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_interferenceContext_fp($q_r, $q_lvl, $q), write))
  inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_interferenceContext_fp($r, $lvl, $x), write))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) BEGIN 
  
  
  label pre_infer5
  
  // Inferring interference all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(25, $q_r, $q_lvl, $q)) } none < old[pre_infer5](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(25, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_infer5](Qu_state($q_r, $q_lvl, $q)) || false))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_infer5](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(25, $q_r, $q_lvl, $q) == old[pre_infer5](Qu_state($q_r, $q_lvl, $q)))
  
  // Inferring interference all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(25, $r, $lvl, $x)) } none < old[pre_infer5](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(25, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_infer5](QL_state($r, $lvl, $x)) || (0 == old[pre_infer5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_infer5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_infer5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_infer5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer5](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_infer5](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(25, $r, $lvl, $x) == old[pre_infer5](QL_state($r, $lvl, $x)))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) END 
  
  
  
  // ------- assign BEGIN ------------
  
  
  done := false
  
  // ------- assign END --------------
  
  
  
  // ------- Stabilising regions Qu,QL (after assign@270.3) BEGIN 
  
  
  label pre_stabilize23
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(26, $q_r, $q_lvl, $q)) } none < old[pre_stabilize23](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(26, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize23](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize23](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(26, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize23](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(26, $q_r, $q_lvl, $q) == old[pre_stabilize23](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(26, $r, $lvl, $x)) } none < old[pre_stabilize23](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(26, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize23](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize23](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize23](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize23](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize23](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize23](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize23](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize23](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize23](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(26, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize23](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(26, $r, $lvl, $x) == old[pre_stabilize23](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after assign@270.3) END 
  
  
  
  // ------- assign BEGIN ------------
  
  
  success := false
  
  // ------- assign END --------------
  
  
  
  // ------- Stabilising regions Qu,QL (after assign@271.3) BEGIN 
  
  
  label pre_stabilize24
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(27, $q_r, $q_lvl, $q)) } none < old[pre_stabilize24](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(27, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize24](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize24](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(27, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize24](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(27, $q_r, $q_lvl, $q) == old[pre_stabilize24](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(27, $r, $lvl, $x)) } none < old[pre_stabilize24](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(27, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize24](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize24](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize24](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize24](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize24](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize24](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize24](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize24](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize24](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(27, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize24](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(27, $r, $lvl, $x) == old[pre_stabilize24](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after assign@271.3) END 
  
  
  
  // ------- while BEGIN -------------
  
  
  label preWhile2
  while (!done)
    invariant acc(Qu(q_r, q_lvl, q), write) && (q_lvl >= 0 && Qu_state(q_r, q_lvl, q) == 0)
    invariant (success ? acc(Inv(v), write) : true) 
  {
    inhale acc(Qu_sk_fp(), write) && acc(QL_sk_fp(), write)
    
    // no init required
    
    
    
    // no init required
    
    
    inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_interferenceContext_fp($q_r, $q_lvl, $q), write))
    inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_interferenceContext_fp($r, $lvl, $x), write))
    inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_atomicity_context_fp($q_r, $q_lvl, $q), old[preWhile2](perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)))))
    inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: { Qu_atomicity_context_df($q_r, $q_lvl, $q) } none < old[preWhile2](perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q))) ==> Qu_atomicity_context_hf($q_r, $q_lvl, $q) == old[preWhile2](Qu_atomicity_context_hf($q_r, $q_lvl, $q)))
    inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_atomicity_context_fp($r, $lvl, $x), old[preWhile2](perm(QL_atomicity_context_fp($r, $lvl, $x)))))
    inhale (forall $r: Ref, $lvl: Int, $x: Ref :: { QL_atomicity_context_df($r, $lvl, $x) } none < old[preWhile2](perm(QL_atomicity_context_fp($r, $lvl, $x))) ==> QL_atomicity_context_hf($r, $lvl, $x) == old[preWhile2](QL_atomicity_context_hf($r, $lvl, $x)))
    
    // ------- Inferring interference context Qu,QL (infer context inside while) BEGIN 
    
    
    label pre_infer6
    
    // Inferring interference all instances of region Qu
    
    ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
    exhale acc(Qu_sk_fp(), write)
    inhale acc(Qu_sk_fp(), write)
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(28, $q_r, $q_lvl, $q)) } none < old[pre_infer6](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(28, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_infer6](Qu_state($q_r, $q_lvl, $q)) || false))))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_infer6](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(28, $q_r, $q_lvl, $q) == old[pre_infer6](Qu_state($q_r, $q_lvl, $q)))
    
    // Inferring interference all instances of region QL
    
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    exhale acc(QL_sk_fp(), write)
    inhale acc(QL_sk_fp(), write)
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(28, $r, $lvl, $x)) } none < old[pre_infer6](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(28, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_infer6](QL_state($r, $lvl, $x)) || (0 == old[pre_infer6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_infer6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_infer6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_infer6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer6](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_infer6](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(28, $r, $lvl, $x) == old[pre_infer6](QL_state($r, $lvl, $x)))
    
    // ------- Inferring interference context Qu,QL (infer context inside while) END 
    
    
    
    // ------- open-region BEGIN -------
    
    
    label pre_open_region2
    assert $_levelVar_15 > q_lvl
    $_levelVar_16 := q_lvl
    unfold acc(Qu(q_r, q_lvl, q), write)
    label transitionPre3
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    
    // no additional linking required
    
    
    
    // havoc performed by other front resource
    
    
    inhale true ==> QL_interferenceReference_hf(28, q_r.$Qu_$_sentinel_id, q_r.$Qu_$_sentinel_level, q.$queue_$sentinel) == old[transitionPre3](QL_state(q_r.$Qu_$_sentinel_id, q_r.$Qu_$_sentinel_level, q.$queue_$sentinel))
    
    // ------- heap-read BEGIN ---------
    
    
    sl := q.$queue_$sentinel
    
    // ------- heap-read END -----------
    
    
    
    // ------- assert BEGIN ------------
    
    
    assert acc(q_r.$Qu_$_sentinel_id, write) && true
    sl_r0 := q_r.$Qu_$_sentinel_id
    
    // ------- assert END --------------
    
    
    
    // ------- assert BEGIN ------------
    
    
    assert acc(q_r.$Qu_$_sentinel_level, write) && true
    sl_lvl0 := q_r.$Qu_$_sentinel_level
    
    // ------- assert END --------------
    
    
    
    // ------- assert BEGIN ------------
    
    
    assert acc(QL(sl_r0, sl_lvl0, sl), write) && (sl_lvl0 >= 0 && true)
    sl_a0 := QL_state(sl_r0, sl_lvl0, sl)
    
    // ------- assert END --------------
    
    
    
    // ------- inhale BEGIN ------------
    
    
    inhale acc(QL(sl_r0, sl_lvl0, sl), write) && (sl_lvl0 >= 0 && true)
    
    // ------- inhale END --------------
    
    
    
    // ------- assert BEGIN ------------
    
    
    assert sl_a0 >= 0
    
    // ------- assert END --------------
    
    
    
    // ------- assert BEGIN ------------
    
    
    assert sl_a0 % 3 == 1
    
    // ------- assert END --------------
    
    
    fold acc(Qu(q_r, q_lvl, q), write)
    assert Qu_state(q_r, q_lvl, q) == old[pre_open_region2](Qu_state(q_r, q_lvl, q))
    $_levelVar_17 := $_levelVar_15
    
    // ------- open-region END ---------
    
    
    
    // ------- Stabilising regions Qu,QL (after open-region@278.5) BEGIN 
    
    
    label pre_stabilize25
    
    // Stabilising all instances of region Qu
    
    ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
    exhale acc(Qu_sk_fp(), write)
    inhale acc(Qu_sk_fp(), write)
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(29, $q_r, $q_lvl, $q)) } none < old[pre_stabilize25](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(29, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize25](Qu_state($q_r, $q_lvl, $q)) || false))))
    ___silicon_hack407_havoc_all_Qu()
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize25](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(29, $q_r, $q_lvl, $q)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize25](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(29, $q_r, $q_lvl, $q) == old[pre_stabilize25](Qu_state($q_r, $q_lvl, $q)))
    
    // Stabilising all instances of region QL
    
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    exhale acc(QL_sk_fp(), write)
    inhale acc(QL_sk_fp(), write)
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(29, $r, $lvl, $x)) } none < old[pre_stabilize25](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(29, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize25](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize25](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize25](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize25](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize25](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize25](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize25](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize25](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
    ___silicon_hack407_havoc_all_QL()
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize25](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(29, $r, $lvl, $x)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize25](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(29, $r, $lvl, $x) == old[pre_stabilize25](QL_state($r, $lvl, $x)))
    
    // ------- Stabilising regions Qu,QL (after open-region@278.5) END 
    
    
    
    // ------- open-region BEGIN -------
    
    
    label pre_open_region3
    assert $_levelVar_17 > sl_lvl0
    $_levelVar_18 := sl_lvl0
    unfold acc(QL(sl_r0, sl_lvl0, sl), write)
    label transitionPre4
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    
    // no additional linking required
    
    
    
    // havoc performed by other front resource
    
    
    inhale !(sl_r0.$QL_$_absstate == 0) && !(sl_r0.$QL_$_absstate == 1) && (sl_r0.$QL_$_absstate >= 3 && sl_r0.$QL_$_absstate % 3 == 0) ==> QL_interferenceReference_hf(29, sl_r0.$QL_$_next_id, sl_r0.$QL_$_next_level, sl.$node_$next) == old[transitionPre4](QL_state(sl_r0.$QL_$_next_id, sl_r0.$QL_$_next_level, sl.$node_$next))
    
    // havoc performed by other front resource
    
    
    inhale !(sl_r0.$QL_$_absstate == 0) && !(sl_r0.$QL_$_absstate == 1) && !(sl_r0.$QL_$_absstate >= 3 && sl_r0.$QL_$_absstate % 3 == 0) && (sl_r0.$QL_$_absstate >= 4 && sl_r0.$QL_$_absstate % 3 == 1) ==> QL_interferenceReference_hf(29, sl_r0.$QL_$_next_id, sl_r0.$QL_$_next_level, sl.$node_$next) == old[transitionPre4](QL_state(sl_r0.$QL_$_next_id, sl_r0.$QL_$_next_level, sl.$node_$next))
    
    // havoc performed by other front resource
    
    
    inhale !(sl_r0.$QL_$_absstate == 0) && !(sl_r0.$QL_$_absstate == 1) && !(sl_r0.$QL_$_absstate >= 3 && sl_r0.$QL_$_absstate % 3 == 0) && !(sl_r0.$QL_$_absstate >= 4 && sl_r0.$QL_$_absstate % 3 == 1) && (sl_r0.$QL_$_absstate >= 5 && sl_r0.$QL_$_absstate % 3 == 2) ==> QL_interferenceReference_hf(29, sl_r0.$QL_$_next_id, sl_r0.$QL_$_next_level, sl.$node_$next) == old[transitionPre4](QL_state(sl_r0.$QL_$_next_id, sl_r0.$QL_$_next_level, sl.$node_$next))
    
    // ------- heap-read BEGIN ---------
    
    
    hd := sl.$node_$next
    
    // ------- heap-read END -----------
    
    
    
    // ------- if-then-else BEGIN ------
    
    
    if (!(hd == null)) {
      
      // ------- assert BEGIN ------------
      
      
      assert acc(sl_r0.$QL_$_next_id, write) && true
      hd_r0 := sl_r0.$QL_$_next_id
      
      // ------- assert END --------------
      
      
      
      // ------- assert BEGIN ------------
      
      
      assert acc(sl_r0.$QL_$_next_level, write) && true
      hd_lvl0 := sl_r0.$QL_$_next_level
      
      // ------- assert END --------------
      
      
      
      // ------- assert BEGIN ------------
      
      
      assert acc(QL(hd_r0, hd_lvl0, hd), write) && (hd_lvl0 >= 0 && true)
      hd_a0 := QL_state(hd_r0, hd_lvl0, hd)
      
      // ------- assert END --------------
      
      
      
      // ------- inhale BEGIN ------------
      
      
      inhale acc(QL(hd_r0, hd_lvl0, hd), write) && (hd_lvl0 >= 0 && true)
      
      // ------- inhale END --------------
      
      
      assert $_levelVar_18 == $_levelVar_18
    }
    $_levelVar_19 := $_levelVar_18
    
    // ------- if-then-else END --------
    
    
    fold acc(QL(sl_r0, sl_lvl0, sl), write)
    assert QL_state(sl_r0, sl_lvl0, sl) == old[pre_open_region3](QL_state(sl_r0, sl_lvl0, sl))
    $_levelVar_20 := $_levelVar_17
    
    // ------- open-region END ---------
    
    
    
    // ------- Stabilising regions Qu,QL (after open-region@292.5) BEGIN 
    
    
    label pre_stabilize26
    
    // Stabilising all instances of region Qu
    
    ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
    exhale acc(Qu_sk_fp(), write)
    inhale acc(Qu_sk_fp(), write)
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(30, $q_r, $q_lvl, $q)) } none < old[pre_stabilize26](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(30, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize26](Qu_state($q_r, $q_lvl, $q)) || false))))
    ___silicon_hack407_havoc_all_Qu()
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize26](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(30, $q_r, $q_lvl, $q)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize26](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(30, $q_r, $q_lvl, $q) == old[pre_stabilize26](Qu_state($q_r, $q_lvl, $q)))
    
    // Stabilising all instances of region QL
    
    ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
    exhale acc(QL_sk_fp(), write)
    inhale acc(QL_sk_fp(), write)
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(30, $r, $lvl, $x)) } none < old[pre_stabilize26](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(30, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize26](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize26](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize26](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize26](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize26](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize26](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize26](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize26](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
    ___silicon_hack407_havoc_all_QL()
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize26](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(30, $r, $lvl, $x)))
    
    // havoc performed by other front resource
    
    
    inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize26](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(30, $r, $lvl, $x) == old[pre_stabilize26](QL_state($r, $lvl, $x)))
    
    // ------- Stabilising regions Qu,QL (after open-region@292.5) END 
    
    
    
    // ------- if-then-else BEGIN ------
    
    
    if (hd == null) {
      
      // ------- assign BEGIN ------------
      
      
      done := true
      
      // ------- assign END --------------
      
      
      
      // ------- Stabilising regions Qu,QL (after assign@307.7) BEGIN 
      
      
      label pre_stabilize27
      
      // Stabilising all instances of region Qu
      
      ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
      exhale acc(Qu_sk_fp(), write)
      inhale acc(Qu_sk_fp(), write)
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(31, $q_r, $q_lvl, $q)) } none < old[pre_stabilize27](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(31, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize27](Qu_state($q_r, $q_lvl, $q)) || false))))
      ___silicon_hack407_havoc_all_Qu()
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize27](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(31, $q_r, $q_lvl, $q)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize27](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(31, $q_r, $q_lvl, $q) == old[pre_stabilize27](Qu_state($q_r, $q_lvl, $q)))
      
      // Stabilising all instances of region QL
      
      ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
      exhale acc(QL_sk_fp(), write)
      inhale acc(QL_sk_fp(), write)
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(31, $r, $lvl, $x)) } none < old[pre_stabilize27](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(31, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize27](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize27](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize27](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize27](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize27](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize27](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize27](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize27](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
      ___silicon_hack407_havoc_all_QL()
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize27](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(31, $r, $lvl, $x)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize27](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(31, $r, $lvl, $x) == old[pre_stabilize27](QL_state($r, $lvl, $x)))
      
      // ------- Stabilising regions Qu,QL (after assign@307.7) END 
      
      
      
      // ------- assign BEGIN ------------
      
      
      success := false
      
      // ------- assign END --------------
      
      
      
      // ------- Stabilising regions Qu,QL (after assign@308.7) BEGIN 
      
      
      label pre_stabilize28
      
      // Stabilising all instances of region Qu
      
      ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
      exhale acc(Qu_sk_fp(), write)
      inhale acc(Qu_sk_fp(), write)
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(32, $q_r, $q_lvl, $q)) } none < old[pre_stabilize28](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(32, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize28](Qu_state($q_r, $q_lvl, $q)) || false))))
      ___silicon_hack407_havoc_all_Qu()
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize28](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(32, $q_r, $q_lvl, $q)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize28](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(32, $q_r, $q_lvl, $q) == old[pre_stabilize28](Qu_state($q_r, $q_lvl, $q)))
      
      // Stabilising all instances of region QL
      
      ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
      exhale acc(QL_sk_fp(), write)
      inhale acc(QL_sk_fp(), write)
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(32, $r, $lvl, $x)) } none < old[pre_stabilize28](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(32, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize28](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize28](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize28](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize28](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize28](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize28](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize28](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize28](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
      ___silicon_hack407_havoc_all_QL()
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize28](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(32, $r, $lvl, $x)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize28](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(32, $r, $lvl, $x) == old[pre_stabilize28](QL_state($r, $lvl, $x)))
      
      // ------- Stabilising regions Qu,QL (after assign@308.7) END 
      
      
      assert $_levelVar_20 == $_levelVar_20
    } else {
      $_levelVar_21 := $_levelVar_20
      
      // ------- use-atomic BEGIN --------
      
      
      label pre_use_atomic
      assert perm(Qu_atomicity_context_fp(q_r, q_lvl, q)) == none
      assert $_levelVar_21 > q_lvl
      $_levelVar_22 := q_lvl
      exhale acc(Qu_G(q_r), write)
      
      // ------- Stabilising regions QL (before use-atomic@312.7) BEGIN 
      
      
      label pre_stabilize34
      
      // Stabilising all instances of region QL
      
      ___silicon_hack407_havoc_all_QL()
      exhale acc(QL_sk_fp(), write)
      inhale acc(QL_sk_fp(), write)
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize34](perm(QL($r, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> (QL_state($r, $lvl, $x) in QL_atomicity_context_hf($r, $lvl, $x))) && (QL_state($r, $lvl, $x) == old[pre_stabilize34](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize34](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize34](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize34](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize34](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize34](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize34](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize34](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))
      
      // ------- Stabilising regions QL (before use-atomic@312.7) END 
      
      
      unfold acc(Qu(q_r, q_lvl, q), write)
      label transitionPre5
      ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
      
      // no additional linking required
      
      
      
      // havoc performed by other front resource
      
      
      inhale true ==> QL_interferenceReference_hf(32, q_r.$Qu_$_sentinel_id, q_r.$Qu_$_sentinel_level, q.$queue_$sentinel) == old[transitionPre5](QL_state(q_r.$Qu_$_sentinel_id, q_r.$Qu_$_sentinel_level, q.$queue_$sentinel))
      
      // ------- Stabilising regions Qu (before use-atomic@312.7) BEGIN 
      
      
      label pre_stabilize35
      
      // Stabilising all instances of region Qu
      
      ___silicon_hack407_havoc_all_Qu()
      exhale acc(Qu_sk_fp(), write)
      inhale acc(Qu_sk_fp(), write)
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize35](perm(Qu($q_r, $q_lvl, $q))) ==> (none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && (Qu_state($q_r, $q_lvl, $q) == old[pre_stabilize35](Qu_state($q_r, $q_lvl, $q)) || false))
      
      // ------- Stabilising regions Qu (before use-atomic@312.7) END 
      
      
      inhale acc(Qu_G(q_r), write)
      
      // ------- assert BEGIN ------------
      
      
      assert acc(q_r.$Qu_$_sentinel_id, write) && true
      sl_r1 := q_r.$Qu_$_sentinel_id
      
      // ------- assert END --------------
      
      
      
      // ------- assert BEGIN ------------
      
      
      assert acc(q_r.$Qu_$_sentinel_level, write) && true
      sl_lvl1 := q_r.$Qu_$_sentinel_level
      
      // ------- assert END --------------
      
      
      
      // ------- assert BEGIN ------------
      
      
      assert acc(q.$queue_$sentinel, write) && true
      sl1 := q.$queue_$sentinel
      
      // ------- assert END --------------
      
      
      
      // ------- assert BEGIN ------------
      
      
      assert acc(QL(sl_r1, sl_lvl1, sl1), write) && (sl_lvl1 >= 0 && true)
      sl_a1 := QL_state(sl_r1, sl_lvl1, sl1)
      
      // ------- assert END --------------
      
      
      
      // ------- call:CAS_sentinel BEGIN -
      
      
      assert true
      label pre_call2
      assert $_levelVar_22 >= 0
      assert true
      exhale acc(q.$queue_$sentinel, write) && true
      
      // ------- Stabilising regions Qu,QL (before call:CAS_sentinel@323.11) BEGIN 
      
      
      label pre_stabilize29
      
      // Stabilising all instances of region Qu
      
      ___silicon_hack407_havoc_all_Qu()
      exhale acc(Qu_sk_fp(), write)
      inhale acc(Qu_sk_fp(), write)
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize29](perm(Qu($q_r, $q_lvl, $q))) ==> (none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && (Qu_state($q_r, $q_lvl, $q) == old[pre_stabilize29](Qu_state($q_r, $q_lvl, $q)) || false))
      
      // Stabilising all instances of region QL
      
      ___silicon_hack407_havoc_all_QL()
      exhale acc(QL_sk_fp(), write)
      inhale acc(QL_sk_fp(), write)
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize29](perm(QL($r, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> (QL_state($r, $lvl, $x) in QL_atomicity_context_hf($r, $lvl, $x))) && (QL_state($r, $lvl, $x) == old[pre_stabilize29](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize29](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize29](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize29](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize29](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize29](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize29](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize29](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))
      
      // ------- Stabilising regions Qu,QL (before call:CAS_sentinel@323.11) END 
      
      
      success := havoc_Bool()
      inhale (old[pre_call2](q.$queue_$sentinel) == sl ? success && (acc(q.$queue_$sentinel, write) && q.$queue_$sentinel == hd) : !success && (acc(q.$queue_$sentinel, write) && q.$queue_$sentinel == old[pre_call2](q.$queue_$sentinel)))
      
      // ------- call:CAS_sentinel END ---
      
      
      
      // ------- if-then-else BEGIN ------
      
      
      if (success) {
        
        // ------- assert BEGIN ------------
        
        
        assert sl1 == sl
        
        // ------- assert END --------------
        
        
        
        // ------- assume BEGIN ------------
        
        
        inhale sl_r1 == sl_r0 && sl_lvl1 == sl_lvl0
        
        // ------- assume END --------------
        
        
        
        // ------- assert BEGIN ------------
        
        
        assert sl_a1 >= 0
        
        // ------- assert END --------------
        
        
        
        // ------- assert BEGIN ------------
        
        
        assert sl_a1 % 3 == 1
        
        // ------- assert END --------------
        
        
        
        // ------- heap-write BEGIN --------
        
        
        q_r.$Qu_$_sentinel_id := hd_r0
        
        // ------- heap-write END ----------
        
        
        
        // ------- heap-write BEGIN --------
        
        
        q_r.$Qu_$_sentinel_level := hd_lvl0
        
        // ------- heap-write END ----------
        
        
        
        // ------- use-atomic BEGIN --------
        
        
        label pre_use_atomic2
        assert perm(QL_atomicity_context_fp(sl_r1, sl_lvl0, sl)) == none
        assert $_levelVar_22 > sl_lvl0
        $_levelVar_23 := sl_lvl0
        exhale acc(QL_OWN(sl_r1), write)
        
        // ------- Stabilising regions Qu (before use-atomic@335.13) BEGIN 
        
        
        label pre_stabilize32
        
        // Stabilising all instances of region Qu
        
        ___silicon_hack407_havoc_all_Qu()
        exhale acc(Qu_sk_fp(), write)
        inhale acc(Qu_sk_fp(), write)
        inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize32](perm(Qu($q_r, $q_lvl, $q))) ==> (none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && (Qu_state($q_r, $q_lvl, $q) == old[pre_stabilize32](Qu_state($q_r, $q_lvl, $q)) || false))
        
        // ------- Stabilising regions Qu (before use-atomic@335.13) END 
        
        
        unfold acc(QL(sl_r1, sl_lvl0, sl), write)
        label transitionPre6
        ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
        
        // no additional linking required
        
        
        
        // havoc performed by other front resource
        
        
        inhale !(sl_r1.$QL_$_absstate == 0) && !(sl_r1.$QL_$_absstate == 1) && (sl_r1.$QL_$_absstate >= 3 && sl_r1.$QL_$_absstate % 3 == 0) ==> QL_interferenceReference_hf(32, sl_r1.$QL_$_next_id, sl_r1.$QL_$_next_level, sl.$node_$next) == old[transitionPre6](QL_state(sl_r1.$QL_$_next_id, sl_r1.$QL_$_next_level, sl.$node_$next))
        
        // havoc performed by other front resource
        
        
        inhale !(sl_r1.$QL_$_absstate == 0) && !(sl_r1.$QL_$_absstate == 1) && !(sl_r1.$QL_$_absstate >= 3 && sl_r1.$QL_$_absstate % 3 == 0) && (sl_r1.$QL_$_absstate >= 4 && sl_r1.$QL_$_absstate % 3 == 1) ==> QL_interferenceReference_hf(32, sl_r1.$QL_$_next_id, sl_r1.$QL_$_next_level, sl.$node_$next) == old[transitionPre6](QL_state(sl_r1.$QL_$_next_id, sl_r1.$QL_$_next_level, sl.$node_$next))
        
        // havoc performed by other front resource
        
        
        inhale !(sl_r1.$QL_$_absstate == 0) && !(sl_r1.$QL_$_absstate == 1) && !(sl_r1.$QL_$_absstate >= 3 && sl_r1.$QL_$_absstate % 3 == 0) && !(sl_r1.$QL_$_absstate >= 4 && sl_r1.$QL_$_absstate % 3 == 1) && (sl_r1.$QL_$_absstate >= 5 && sl_r1.$QL_$_absstate % 3 == 2) ==> QL_interferenceReference_hf(32, sl_r1.$QL_$_next_id, sl_r1.$QL_$_next_level, sl.$node_$next) == old[transitionPre6](QL_state(sl_r1.$QL_$_next_id, sl_r1.$QL_$_next_level, sl.$node_$next))
        
        // ------- Stabilising regions QL (before use-atomic@335.13) BEGIN 
        
        
        label pre_stabilize33
        
        // Stabilising all instances of region QL
        
        ___silicon_hack407_havoc_all_QL()
        exhale acc(QL_sk_fp(), write)
        inhale acc(QL_sk_fp(), write)
        inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize33](perm(QL($r, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> (QL_state($r, $lvl, $x) in QL_atomicity_context_hf($r, $lvl, $x))) && (QL_state($r, $lvl, $x) == old[pre_stabilize33](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize33](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize33](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize33](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize33](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize33](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize33](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize33](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))
        
        // ------- Stabilising regions QL (before use-atomic@335.13) END 
        
        
        inhale acc(QL_OWN(sl_r1), write)
        
        // ------- assert BEGIN ------------
        
        
        assert acc(sl.$node_$next, write) && true
        hd1 := sl.$node_$next
        
        // ------- assert END --------------
        
        
        
        // ------- if-then-else BEGIN ------
        
        
        if (!(hd1 == hd)) {
          
          // ------- assume BEGIN ------------
          
          
          inhale false
          
          // ------- assume END --------------
          
          
          assert $_levelVar_23 == $_levelVar_23
        }
        $_levelVar_24 := $_levelVar_23
        
        // ------- if-then-else END --------
        
        
        
        // ------- assert BEGIN ------------
        
        
        assert acc(sl_r1.$QL_$_next_id, write) && true && (acc(sl_r1.$QL_$_next_level, write) && true)
        hd_r1 := sl_r1.$QL_$_next_id
        hd_lvl1 := sl_r1.$QL_$_next_level
        
        // ------- assert END --------------
        
        
        
        // ------- assume BEGIN ------------
        
        
        inhale hd_r1 == hd_r0 && hd_lvl1 == hd_lvl0
        
        // ------- assume END --------------
        
        
        
        // ------- assert BEGIN ------------
        
        
        assert sl_a1 % 3 == 1
        
        // ------- assert END --------------
        
        
        
        // ------- assert BEGIN ------------
        
        
        assert sl_a1 >= 4
        
        // ------- assert END --------------
        
        
        
        // ------- heap-write BEGIN --------
        
        
        sl_r1.$QL_$_absstate := sl_a1 + 1
        
        // ------- heap-write END ----------
        
        
        
        // ------- assert BEGIN ------------
        
        
        assert sl_a1 + 1 >= 5
        
        // ------- assert END --------------
        
        
        
        // ------- assert BEGIN ------------
        
        
        assert (sl_a1 + 1) % 3 == 2
        
        // ------- assert END --------------
        
        
        
        // ------- use-atomic BEGIN --------
        
        
        label pre_use_atomic3
        assert perm(QL_atomicity_context_fp(hd_r0, hd_lvl0, hd)) == none
        assert $_levelVar_24 > hd_lvl0
        $_levelVar_25 := hd_lvl0
        exhale acc(QL_OWN(hd_r0), write)
        
        // ------- Stabilising regions Qu (before use-atomic@363.15) BEGIN 
        
        
        label pre_stabilize30
        
        // Stabilising all instances of region Qu
        
        ___silicon_hack407_havoc_all_Qu()
        exhale acc(Qu_sk_fp(), write)
        inhale acc(Qu_sk_fp(), write)
        inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize30](perm(Qu($q_r, $q_lvl, $q))) ==> (none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && (Qu_state($q_r, $q_lvl, $q) == old[pre_stabilize30](Qu_state($q_r, $q_lvl, $q)) || false))
        
        // ------- Stabilising regions Qu (before use-atomic@363.15) END 
        
        
        unfold acc(QL(hd_r0, hd_lvl0, hd), write)
        label transitionPre7
        ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
        
        // no additional linking required
        
        
        
        // havoc performed by other front resource
        
        
        inhale !(hd_r0.$QL_$_absstate == 0) && !(hd_r0.$QL_$_absstate == 1) && (hd_r0.$QL_$_absstate >= 3 && hd_r0.$QL_$_absstate % 3 == 0) ==> QL_interferenceReference_hf(32, hd_r0.$QL_$_next_id, hd_r0.$QL_$_next_level, hd.$node_$next) == old[transitionPre7](QL_state(hd_r0.$QL_$_next_id, hd_r0.$QL_$_next_level, hd.$node_$next))
        
        // havoc performed by other front resource
        
        
        inhale !(hd_r0.$QL_$_absstate == 0) && !(hd_r0.$QL_$_absstate == 1) && !(hd_r0.$QL_$_absstate >= 3 && hd_r0.$QL_$_absstate % 3 == 0) && (hd_r0.$QL_$_absstate >= 4 && hd_r0.$QL_$_absstate % 3 == 1) ==> QL_interferenceReference_hf(32, hd_r0.$QL_$_next_id, hd_r0.$QL_$_next_level, hd.$node_$next) == old[transitionPre7](QL_state(hd_r0.$QL_$_next_id, hd_r0.$QL_$_next_level, hd.$node_$next))
        
        // havoc performed by other front resource
        
        
        inhale !(hd_r0.$QL_$_absstate == 0) && !(hd_r0.$QL_$_absstate == 1) && !(hd_r0.$QL_$_absstate >= 3 && hd_r0.$QL_$_absstate % 3 == 0) && !(hd_r0.$QL_$_absstate >= 4 && hd_r0.$QL_$_absstate % 3 == 1) && (hd_r0.$QL_$_absstate >= 5 && hd_r0.$QL_$_absstate % 3 == 2) ==> QL_interferenceReference_hf(32, hd_r0.$QL_$_next_id, hd_r0.$QL_$_next_level, hd.$node_$next) == old[transitionPre7](QL_state(hd_r0.$QL_$_next_id, hd_r0.$QL_$_next_level, hd.$node_$next))
        
        // ------- Stabilising regions QL (before use-atomic@363.15) BEGIN 
        
        
        label pre_stabilize31
        
        // Stabilising all instances of region QL
        
        ___silicon_hack407_havoc_all_QL()
        exhale acc(QL_sk_fp(), write)
        inhale acc(QL_sk_fp(), write)
        inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize31](perm(QL($r, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> (QL_state($r, $lvl, $x) in QL_atomicity_context_hf($r, $lvl, $x))) && (QL_state($r, $lvl, $x) == old[pre_stabilize31](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize31](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize31](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize31](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize31](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize31](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize31](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize31](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))
        
        // ------- Stabilising regions QL (before use-atomic@363.15) END 
        
        
        inhale acc(QL_OWN(hd_r0), write)
        
        // ------- assert BEGIN ------------
        
        
        assert acc(hd_r0.$QL_$_absstate, write) && true
        u40 := hd_r0.$QL_$_absstate
        
        // ------- assert END --------------
        
        
        
        // ------- assert BEGIN ------------
        
        
        assert acc(hd.$node_$value, write) && true
        v0 := hd.$node_$value
        
        // ------- assert END --------------
        
        
        
        // ------- assert BEGIN ------------
        
        
        assert u40 % 3 == 0
        
        // ------- assert END --------------
        
        
        
        // ------- assert BEGIN ------------
        
        
        assert u40 == 0 || u40 >= 3
        
        // ------- assert END --------------
        
        
        
        // ------- assert BEGIN ------------
        
        
        assert acc(Inv(v0), write)
        
        // ------- assert END --------------
        
        
        
        // ------- assume BEGIN ------------
        
        
        inhale u40 == 0
        
        // ------- assume END --------------
        
        
        
        // ------- heap-write BEGIN --------
        
        
        hd_r0.$QL_$_absstate := u40 + 1
        
        // ------- heap-write END ----------
        
        
        fold acc(QL(hd_r0, hd_lvl0, hd), write)
        assert old[pre_use_atomic3](QL_state(hd_r0, hd_lvl0, hd)) == QL_state(hd_r0, hd_lvl0, hd) || 0 == old[pre_use_atomic3](QL_state(hd_r0, hd_lvl0, hd)) && QL_state(hd_r0, hd_lvl0, hd) >= 3 || 1 == old[pre_use_atomic3](QL_state(hd_r0, hd_lvl0, hd)) && (QL_state(hd_r0, hd_lvl0, hd) > 0 && QL_state(hd_r0, hd_lvl0, hd) % 3 == 2) || old[pre_use_atomic3](QL_state(hd_r0, hd_lvl0, hd)) + 1 == QL_state(hd_r0, hd_lvl0, hd) && (old[pre_use_atomic3](QL_state(hd_r0, hd_lvl0, hd)) >= 0 && old[pre_use_atomic3](QL_state(hd_r0, hd_lvl0, hd)) % 3 == 0) || old[pre_use_atomic3](QL_state(hd_r0, hd_lvl0, hd)) + 1 == QL_state(hd_r0, hd_lvl0, hd) && (old[pre_use_atomic3](QL_state(hd_r0, hd_lvl0, hd)) > 0 && old[pre_use_atomic3](QL_state(hd_r0, hd_lvl0, hd)) % 3 == 1) || old[pre_use_atomic3](QL_state(hd_r0, hd_lvl0, hd)) + 2 == QL_state(hd_r0, hd_lvl0, hd) && (old[pre_use_atomic3](QL_state(hd_r0, hd_lvl0, hd)) > 0 && old[pre_use_atomic3](QL_state(hd_r0, hd_lvl0, hd)) % 3 == 0)
        $_levelVar_26 := $_levelVar_24
        
        // ------- use-atomic END ----------
        
        
        
        // ------- assert BEGIN ------------
        
        
        assert acc(QL(hd_r0, hd_lvl0, hd), write) && (hd_lvl0 >= 0 && true)
        
        // ------- assert END --------------
        
        
        
        // ------- inhale BEGIN ------------
        
        
        inhale acc(QL(hd_r0, hd_lvl0, hd), write) && (hd_lvl0 >= 0 && true)
        
        // ------- inhale END --------------
        
        
        fold acc(QL(sl_r1, sl_lvl0, sl), write)
        assert old[pre_use_atomic2](QL_state(sl_r1, sl_lvl0, sl)) == QL_state(sl_r1, sl_lvl0, sl) || 0 == old[pre_use_atomic2](QL_state(sl_r1, sl_lvl0, sl)) && QL_state(sl_r1, sl_lvl0, sl) >= 3 || 1 == old[pre_use_atomic2](QL_state(sl_r1, sl_lvl0, sl)) && (QL_state(sl_r1, sl_lvl0, sl) > 0 && QL_state(sl_r1, sl_lvl0, sl) % 3 == 2) || old[pre_use_atomic2](QL_state(sl_r1, sl_lvl0, sl)) + 1 == QL_state(sl_r1, sl_lvl0, sl) && (old[pre_use_atomic2](QL_state(sl_r1, sl_lvl0, sl)) >= 0 && old[pre_use_atomic2](QL_state(sl_r1, sl_lvl0, sl)) % 3 == 0) || old[pre_use_atomic2](QL_state(sl_r1, sl_lvl0, sl)) + 1 == QL_state(sl_r1, sl_lvl0, sl) && (old[pre_use_atomic2](QL_state(sl_r1, sl_lvl0, sl)) > 0 && old[pre_use_atomic2](QL_state(sl_r1, sl_lvl0, sl)) % 3 == 1) || old[pre_use_atomic2](QL_state(sl_r1, sl_lvl0, sl)) + 2 == QL_state(sl_r1, sl_lvl0, sl) && (old[pre_use_atomic2](QL_state(sl_r1, sl_lvl0, sl)) > 0 && old[pre_use_atomic2](QL_state(sl_r1, sl_lvl0, sl)) % 3 == 0)
        $_levelVar_27 := $_levelVar_22
        
        // ------- use-atomic END ----------
        
        
        assert $_levelVar_27 == $_levelVar_22
      }
      $_levelVar_28 := $_levelVar_22
      
      // ------- if-then-else END --------
      
      
      fold acc(Qu(q_r, q_lvl, q), write)
      assert old[pre_use_atomic](Qu_state(q_r, q_lvl, q)) == Qu_state(q_r, q_lvl, q)
      $_levelVar_29 := $_levelVar_21
      
      // ------- use-atomic END ----------
      
      
      
      // ------- Stabilising regions Qu,QL (after use-atomic@312.7) BEGIN 
      
      
      label pre_stabilize36
      
      // Stabilising all instances of region Qu
      
      ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
      exhale acc(Qu_sk_fp(), write)
      inhale acc(Qu_sk_fp(), write)
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(33, $q_r, $q_lvl, $q)) } none < old[pre_stabilize36](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(33, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize36](Qu_state($q_r, $q_lvl, $q)) || false))))
      ___silicon_hack407_havoc_all_Qu()
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize36](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(33, $q_r, $q_lvl, $q)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize36](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(33, $q_r, $q_lvl, $q) == old[pre_stabilize36](Qu_state($q_r, $q_lvl, $q)))
      
      // Stabilising all instances of region QL
      
      ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
      exhale acc(QL_sk_fp(), write)
      inhale acc(QL_sk_fp(), write)
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(33, $r, $lvl, $x)) } none < old[pre_stabilize36](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(33, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize36](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize36](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize36](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize36](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize36](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize36](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize36](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize36](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
      ___silicon_hack407_havoc_all_QL()
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize36](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(33, $r, $lvl, $x)))
      
      // havoc performed by other front resource
      
      
      inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize36](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(33, $r, $lvl, $x) == old[pre_stabilize36](QL_state($r, $lvl, $x)))
      
      // ------- Stabilising regions Qu,QL (after use-atomic@312.7) END 
      
      
      
      // ------- if-then-else BEGIN ------
      
      
      if (success) {
        
        // ------- open-region BEGIN -------
        
        
        label pre_open_region4
        assert $_levelVar_29 > hd_lvl0
        $_levelVar_30 := hd_lvl0
        unfold acc(QL(hd_r0, hd_lvl0, hd), write)
        label transitionPre8
        ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
        
        // no additional linking required
        
        
        
        // havoc performed by other front resource
        
        
        inhale !(hd_r0.$QL_$_absstate == 0) && !(hd_r0.$QL_$_absstate == 1) && (hd_r0.$QL_$_absstate >= 3 && hd_r0.$QL_$_absstate % 3 == 0) ==> QL_interferenceReference_hf(33, hd_r0.$QL_$_next_id, hd_r0.$QL_$_next_level, hd.$node_$next) == old[transitionPre8](QL_state(hd_r0.$QL_$_next_id, hd_r0.$QL_$_next_level, hd.$node_$next))
        
        // havoc performed by other front resource
        
        
        inhale !(hd_r0.$QL_$_absstate == 0) && !(hd_r0.$QL_$_absstate == 1) && !(hd_r0.$QL_$_absstate >= 3 && hd_r0.$QL_$_absstate % 3 == 0) && (hd_r0.$QL_$_absstate >= 4 && hd_r0.$QL_$_absstate % 3 == 1) ==> QL_interferenceReference_hf(33, hd_r0.$QL_$_next_id, hd_r0.$QL_$_next_level, hd.$node_$next) == old[transitionPre8](QL_state(hd_r0.$QL_$_next_id, hd_r0.$QL_$_next_level, hd.$node_$next))
        
        // havoc performed by other front resource
        
        
        inhale !(hd_r0.$QL_$_absstate == 0) && !(hd_r0.$QL_$_absstate == 1) && !(hd_r0.$QL_$_absstate >= 3 && hd_r0.$QL_$_absstate % 3 == 0) && !(hd_r0.$QL_$_absstate >= 4 && hd_r0.$QL_$_absstate % 3 == 1) && (hd_r0.$QL_$_absstate >= 5 && hd_r0.$QL_$_absstate % 3 == 2) ==> QL_interferenceReference_hf(33, hd_r0.$QL_$_next_id, hd_r0.$QL_$_next_level, hd.$node_$next) == old[transitionPre8](QL_state(hd_r0.$QL_$_next_id, hd_r0.$QL_$_next_level, hd.$node_$next))
        
        // ------- heap-read BEGIN ---------
        
        
        v := hd.$node_$value
        
        // ------- heap-read END -----------
        
        
        fold acc(QL(hd_r0, hd_lvl0, hd), write)
        assert QL_state(hd_r0, hd_lvl0, hd) == old[pre_open_region4](QL_state(hd_r0, hd_lvl0, hd))
        $_levelVar_31 := $_levelVar_29
        
        // ------- open-region END ---------
        
        
        
        // ------- Stabilising regions Qu,QL (after open-region@387.9) BEGIN 
        
        
        label pre_stabilize37
        
        // Stabilising all instances of region Qu
        
        ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
        exhale acc(Qu_sk_fp(), write)
        inhale acc(Qu_sk_fp(), write)
        inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(34, $q_r, $q_lvl, $q)) } none < old[pre_stabilize37](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(34, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize37](Qu_state($q_r, $q_lvl, $q)) || false))))
        ___silicon_hack407_havoc_all_Qu()
        inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize37](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(34, $q_r, $q_lvl, $q)))
        
        // havoc performed by other front resource
        
        
        inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize37](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(34, $q_r, $q_lvl, $q) == old[pre_stabilize37](Qu_state($q_r, $q_lvl, $q)))
        
        // Stabilising all instances of region QL
        
        ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
        exhale acc(QL_sk_fp(), write)
        inhale acc(QL_sk_fp(), write)
        inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(34, $r, $lvl, $x)) } none < old[pre_stabilize37](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(34, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize37](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize37](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize37](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize37](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize37](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize37](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize37](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize37](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
        ___silicon_hack407_havoc_all_QL()
        inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize37](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(34, $r, $lvl, $x)))
        
        // havoc performed by other front resource
        
        
        inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize37](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(34, $r, $lvl, $x) == old[pre_stabilize37](QL_state($r, $lvl, $x)))
        
        // ------- Stabilising regions Qu,QL (after open-region@387.9) END 
        
        
        assert $_levelVar_31 == $_levelVar_29
      }
      $_levelVar_32 := $_levelVar_29
      
      // ------- if-then-else END --------
      
      
      assert $_levelVar_32 == $_levelVar_20
    }
    $_levelVar_33 := $_levelVar_20
    
    // ------- if-then-else END --------
    
    
    assert $_levelVar_33 == $_levelVar_15
  }
  $_levelVar_34 := $_levelVar_15
  
  // ------- while END ---------------
  
  
  
  // ------- Stabilising regions Qu,QL (after while@273.3) BEGIN 
  
  
  label pre_stabilize38
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(35, $q_r, $q_lvl, $q)) } none < old[pre_stabilize38](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(35, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_stabilize38](Qu_state($q_r, $q_lvl, $q)) || false))))
  ___silicon_hack407_havoc_all_Qu()
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize38](perm(Qu($q_r, $q_lvl, $q))) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_interferenceSet_hf(35, $q_r, $q_lvl, $q)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize38](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(35, $q_r, $q_lvl, $q) == old[pre_stabilize38](Qu_state($q_r, $q_lvl, $q)))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(35, $r, $lvl, $x)) } none < old[pre_stabilize38](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(35, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_stabilize38](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize38](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize38](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize38](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize38](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize38](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize38](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize38](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  ___silicon_hack407_havoc_all_QL()
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize38](perm(QL($r, $lvl, $x))) ==> (QL_state($r, $lvl, $x) in QL_interferenceSet_hf(35, $r, $lvl, $x)))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize38](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(35, $r, $lvl, $x) == old[pre_stabilize38](QL_state($r, $lvl, $x)))
  
  // ------- Stabilising regions Qu,QL (after while@273.3) END 
  
  
}

method CAS_next(x: Ref, now: Ref, thn: Ref) returns (ret: Bool)
  requires acc(x.$node_$next, write) && true
  ensures (old(x.$node_$next) == now ? ret && (acc(x.$node_$next, write) && x.$node_$next == thn) : !ret && (acc(x.$node_$next, write) && x.$node_$next == old(x.$node_$next)))


method CAS_sentinel(x: Ref, now: Ref, thn: Ref) returns (ret: Bool)
  requires acc(x.$queue_$sentinel, write) && true
  ensures (old(x.$queue_$sentinel) == now ? ret && (acc(x.$queue_$sentinel, write) && x.$queue_$sentinel == thn) : !ret && (acc(x.$queue_$sentinel, write) && x.$queue_$sentinel == old(x.$queue_$sentinel)))


method $_Qu_interpretation_stability_check(q_r: Ref, q_lvl: Int, q: Ref)
{
  inhale acc(Qu_sk_fp(), write) && acc(QL_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_interferenceContext_fp($q_r, $q_lvl, $q), write))
  inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_interferenceContext_fp($r, $lvl, $x), write))
  inhale acc(q.$queue_$sentinel, write) && true && !(q.$queue_$sentinel == null) && (acc(q_r.$Qu_$_sentinel_id, write) && true) && (acc(q_r.$Qu_$_sentinel_level, write) && true) && q_r.$Qu_$_sentinel_level < q_lvl && (acc(QL(q_r.$Qu_$_sentinel_id, q_r.$Qu_$_sentinel_level, q.$queue_$sentinel), write) && (q_r.$Qu_$_sentinel_level >= 0 && true)) && QL_state(q_r.$Qu_$_sentinel_id, q_r.$Qu_$_sentinel_level, q.$queue_$sentinel) >= 0 && QL_state(q_r.$Qu_$_sentinel_id, q_r.$Qu_$_sentinel_level, q.$queue_$sentinel) % 3 == 1 && acc(QL_OWN(q_r.$Qu_$_sentinel_id), write)
  
  // ------- Stabilising regions Qu,QL (check stability of region interpretation) BEGIN 
  
  
  label pre_stabilize39
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize39](perm(Qu($q_r, $q_lvl, $q))) ==> (none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && (Qu_state($q_r, $q_lvl, $q) == old[pre_stabilize39](Qu_state($q_r, $q_lvl, $q)) || false))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize39](perm(QL($r, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> (QL_state($r, $lvl, $x) in QL_atomicity_context_hf($r, $lvl, $x))) && (QL_state($r, $lvl, $x) == old[pre_stabilize39](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize39](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize39](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize39](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize39](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize39](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize39](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize39](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))
  
  // ------- Stabilising regions Qu,QL (check stability of region interpretation) END 
  
  
  assert acc(q.$queue_$sentinel, write) && true && !(q.$queue_$sentinel == null) && (acc(q_r.$Qu_$_sentinel_id, write) && true) && (acc(q_r.$Qu_$_sentinel_level, write) && true) && q_r.$Qu_$_sentinel_level < q_lvl && (acc(QL(q_r.$Qu_$_sentinel_id, q_r.$Qu_$_sentinel_level, q.$queue_$sentinel), write) && (q_r.$Qu_$_sentinel_level >= 0 && true)) && QL_state(q_r.$Qu_$_sentinel_id, q_r.$Qu_$_sentinel_level, q.$queue_$sentinel) >= 0 && QL_state(q_r.$Qu_$_sentinel_id, q_r.$Qu_$_sentinel_level, q.$queue_$sentinel) % 3 == 1 && acc(QL_OWN(q_r.$Qu_$_sentinel_id), write)
}

method $_Qu_action_transitivity_check()
{
  var G: Bool
  var aState: Int
  var bState: Int
  var cState: Int
  inhale aState == bState
  inhale bState == cState
  assert aState == cState
}

method $_QL_interpretation_stability_check(r: Ref, lvl: Int, x: Ref)
{
  inhale acc(Qu_sk_fp(), write) && acc(QL_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_interferenceContext_fp($q_r, $q_lvl, $q), write))
  inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_interferenceContext_fp($r, $lvl, $x), write))
  inhale acc(x.$node_$value, write) && true && (acc(x.$node_$next, write) && true) && (acc(r.$QL_$_absstate, write) && true) && (acc(r.$QL_$_next_id, write) && true) && (acc(r.$QL_$_next_level, write) && true) && (x.$node_$next == null || r.$QL_$_next_level < lvl) && (r.$QL_$_absstate == 0 ? acc(Inv(x.$node_$value), write) && x.$node_$next == null : (r.$QL_$_absstate == 1 ? x.$node_$next == null : (r.$QL_$_absstate >= 3 && r.$QL_$_absstate % 3 == 0 ? acc(Inv(x.$node_$value), write) && acc(QL_OWN(r.$QL_$_next_id), write) && (acc(QL(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next), write) && (r.$QL_$_next_level >= 0 && true)) && QL_state(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next) % 3 == 0 && !(x.$node_$next == null) : (r.$QL_$_absstate >= 4 && r.$QL_$_absstate % 3 == 1 ? acc(QL_OWN(r.$QL_$_next_id), write) && (acc(QL(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next), write) && (r.$QL_$_next_level >= 0 && true)) && QL_state(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next) % 3 == 0 && !(x.$node_$next == null) : (r.$QL_$_absstate >= 5 && r.$QL_$_absstate % 3 == 2 ? acc(QL_OWN(r), write) && (acc(QL(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next), write) && (r.$QL_$_next_level >= 0 && true)) && !(x.$node_$next == null) : false)))))
  
  // ------- Stabilising regions Qu,QL (check stability of region interpretation) BEGIN 
  
  
  label pre_stabilize40
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize40](perm(Qu($q_r, $q_lvl, $q))) ==> (none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && (Qu_state($q_r, $q_lvl, $q) == old[pre_stabilize40](Qu_state($q_r, $q_lvl, $q)) || false))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize40](perm(QL($r, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> (QL_state($r, $lvl, $x) in QL_atomicity_context_hf($r, $lvl, $x))) && (QL_state($r, $lvl, $x) == old[pre_stabilize40](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize40](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize40](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize40](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize40](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize40](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize40](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize40](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))
  
  // ------- Stabilising regions Qu,QL (check stability of region interpretation) END 
  
  
  assert acc(x.$node_$value, write) && true && (acc(x.$node_$next, write) && true) && (acc(r.$QL_$_absstate, write) && true) && (acc(r.$QL_$_next_id, write) && true) && (acc(r.$QL_$_next_level, write) && true) && (x.$node_$next == null || r.$QL_$_next_level < lvl) && (r.$QL_$_absstate == 0 ? acc(Inv(x.$node_$value), write) && x.$node_$next == null : (r.$QL_$_absstate == 1 ? x.$node_$next == null : (r.$QL_$_absstate >= 3 && r.$QL_$_absstate % 3 == 0 ? acc(Inv(x.$node_$value), write) && acc(QL_OWN(r.$QL_$_next_id), write) && (acc(QL(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next), write) && (r.$QL_$_next_level >= 0 && true)) && QL_state(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next) % 3 == 0 && !(x.$node_$next == null) : (r.$QL_$_absstate >= 4 && r.$QL_$_absstate % 3 == 1 ? acc(QL_OWN(r.$QL_$_next_id), write) && (acc(QL(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next), write) && (r.$QL_$_next_level >= 0 && true)) && QL_state(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next) % 3 == 0 && !(x.$node_$next == null) : (r.$QL_$_absstate >= 5 && r.$QL_$_absstate % 3 == 2 ? acc(QL_OWN(r), write) && (acc(QL(r.$QL_$_next_id, r.$QL_$_next_level, x.$node_$next), write) && (r.$QL_$_next_level >= 0 && true)) && !(x.$node_$next == null) : false)))))
}

method $_QL_action_transitivity_check()
{
  var Z: Bool
  var OWN: Bool
  var $_action_n_0_x: Int
  var $_action_n_1_x: Int
  var $_action_n_2_x: Int
  var $_action_n_3_x: Int
  var $_action_n_4_x: Int
  var $_action_n_5_x: Int
  var $_action_n_6_x: Int
  var $_action_n_0_y: Int
  var $_action_n_1_y: Int
  var $_action_n_2_y: Int
  var $_action_n_3_y: Int
  var $_action_n_4_y: Int
  var $_action_n_5_y: Int
  var $_action_n_6_y: Int
  var aState: Int
  var bState: Int
  var cState: Int
  inhale aState == bState || 0 == aState && $_action_n_0_x == bState && $_action_n_0_x >= 3 && OWN || 1 == aState && $_action_n_1_x == bState && ($_action_n_1_x > 0 && $_action_n_1_x % 3 == 2) && OWN || 0 == aState && $_action_n_2_x == bState && ($_action_n_2_x > 0 && $_action_n_2_x % 3 == 0) && Z || 1 == aState && $_action_n_3_x == bState && ($_action_n_3_x > 0 && $_action_n_3_x % 3 == 1) && Z || $_action_n_4_x == aState && $_action_n_4_x + 1 == bState && ($_action_n_4_x >= 0 && $_action_n_4_x % 3 == 0) && OWN || $_action_n_5_x == aState && $_action_n_5_x + 1 == bState && ($_action_n_5_x > 0 && $_action_n_5_x % 3 == 1) && OWN || $_action_n_6_x == aState && $_action_n_6_x + 2 == bState && ($_action_n_6_x > 0 && $_action_n_6_x % 3 == 0) && OWN
  inhale bState == cState || 0 == bState && $_action_n_0_y == cState && $_action_n_0_y >= 3 && OWN || 1 == bState && $_action_n_1_y == cState && ($_action_n_1_y > 0 && $_action_n_1_y % 3 == 2) && OWN || 0 == bState && $_action_n_2_y == cState && ($_action_n_2_y > 0 && $_action_n_2_y % 3 == 0) && Z || 1 == bState && $_action_n_3_y == cState && ($_action_n_3_y > 0 && $_action_n_3_y % 3 == 1) && Z || $_action_n_4_y == bState && $_action_n_4_y + 1 == cState && ($_action_n_4_y >= 0 && $_action_n_4_y % 3 == 0) && OWN || $_action_n_5_y == bState && $_action_n_5_y + 1 == cState && ($_action_n_5_y > 0 && $_action_n_5_y % 3 == 1) && OWN || $_action_n_6_y == bState && $_action_n_6_y + 2 == cState && ($_action_n_6_y > 0 && $_action_n_6_y % 3 == 0) && OWN
  assert aState == cState || 0 == aState && cState == cState && cState >= 3 && OWN || 1 == aState && cState == cState && (cState > 0 && cState % 3 == 2) && OWN || 0 == aState && cState == cState && (cState > 0 && cState % 3 == 0) && Z || 1 == aState && cState == cState && (cState > 0 && cState % 3 == 1) && Z || aState == aState && aState + 1 == cState && (aState >= 0 && aState % 3 == 0) && OWN || aState == aState && aState + 1 == cState && (aState > 0 && aState % 3 == 1) && OWN || aState == aState && aState + 2 == cState && (aState > 0 && aState % 3 == 0) && OWN
}

method $_makeQueue_condition_stability_precondition_check(r: Ref, lvl: Int, ret: Ref)
{
  var $_levelVar_37: Int
  var x: Ref
  var y: Ref
  var rs: Ref
  var rlvl: Int
  inhale $_levelVar_37 >= 0
  inhale acc(Qu_sk_fp(), write) && acc(QL_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_interferenceContext_fp($q_r, $q_lvl, $q), write))
  inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_interferenceContext_fp($r, $lvl, $x), write))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) BEGIN 
  
  
  label pre_infer9
  
  // Inferring interference all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(38, $q_r, $q_lvl, $q)) } none < old[pre_infer9](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(38, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_infer9](Qu_state($q_r, $q_lvl, $q)) || false))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_infer9](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(38, $q_r, $q_lvl, $q) == old[pre_infer9](Qu_state($q_r, $q_lvl, $q)))
  
  // Inferring interference all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(38, $r, $lvl, $x)) } none < old[pre_infer9](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(38, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_infer9](QL_state($r, $lvl, $x)) || (0 == old[pre_infer9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_infer9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_infer9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_infer9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer9](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_infer9](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(38, $r, $lvl, $x) == old[pre_infer9](QL_state($r, $lvl, $x)))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) END 
  
  
  
  // ------- Stabilising regions Qu,QL (check stability of method condition) BEGIN 
  
  
  label pre_stabilize41
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize41](perm(Qu($q_r, $q_lvl, $q))) ==> (none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && (Qu_state($q_r, $q_lvl, $q) == old[pre_stabilize41](Qu_state($q_r, $q_lvl, $q)) || false))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize41](perm(QL($r, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> (QL_state($r, $lvl, $x) in QL_atomicity_context_hf($r, $lvl, $x))) && (QL_state($r, $lvl, $x) == old[pre_stabilize41](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize41](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize41](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize41](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize41](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize41](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize41](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize41](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))
  
  // ------- Stabilising regions Qu,QL (check stability of method condition) END 
  
  
  assert true
}

method $_getTail_condition_stability_precondition_check(r: Ref, lvl: Int, x: Ref, y: Ref, y_r: Ref, y_lvl: Int)
  requires acc(QL(r, lvl, x), write) && (lvl >= 0 && true) && !(x == null)
{
  var $_levelVar_38: Int
  var n: Ref
  var cont: Bool
  inhale $_levelVar_38 >= 0 && $_levelVar_38 > lvl
  inhale acc(Qu_sk_fp(), write) && acc(QL_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_interferenceContext_fp($q_r, $q_lvl, $q), write))
  inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_interferenceContext_fp($r, $lvl, $x), write))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) BEGIN 
  
  
  label pre_infer10
  
  // Inferring interference all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(39, $q_r, $q_lvl, $q)) } none < old[pre_infer10](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(39, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_infer10](Qu_state($q_r, $q_lvl, $q)) || false))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_infer10](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(39, $q_r, $q_lvl, $q) == old[pre_infer10](Qu_state($q_r, $q_lvl, $q)))
  
  // Inferring interference all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(39, $r, $lvl, $x)) } none < old[pre_infer10](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(39, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_infer10](QL_state($r, $lvl, $x)) || (0 == old[pre_infer10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_infer10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_infer10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_infer10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer10](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_infer10](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(39, $r, $lvl, $x) == old[pre_infer10](QL_state($r, $lvl, $x)))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) END 
  
  
  
  // ------- Stabilising regions Qu,QL (check stability of method condition) BEGIN 
  
  
  label pre_stabilize42
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize42](perm(Qu($q_r, $q_lvl, $q))) ==> (none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && (Qu_state($q_r, $q_lvl, $q) == old[pre_stabilize42](Qu_state($q_r, $q_lvl, $q)) || false))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize42](perm(QL($r, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> (QL_state($r, $lvl, $x) in QL_atomicity_context_hf($r, $lvl, $x))) && (QL_state($r, $lvl, $x) == old[pre_stabilize42](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize42](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize42](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize42](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize42](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize42](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize42](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize42](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))
  
  // ------- Stabilising regions Qu,QL (check stability of method condition) END 
  
  
  assert acc(QL(r, lvl, x), write) && (lvl >= 0 && true) && !(x == null)
}

method $_enqueue_condition_stability_precondition_check(s: Ref, lvl: Int, x: Ref, v: Int)
  requires acc(Qu(s, lvl, x), write) && (lvl >= 0 && Qu_state(s, lvl, x) == 0) && acc(Inv(v), write)
{
  var $_levelVar_39: Int
  var y: Ref
  var h: Ref
  var t: Ref
  var y_r: Ref
  var y_lvl: Int
  var t_r: Ref
  var t_lvl: Int
  var b: Bool
  var cont: Bool
  inhale $_levelVar_39 >= 0 && $_levelVar_39 > lvl
  inhale acc(Qu_sk_fp(), write) && acc(QL_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_interferenceContext_fp($q_r, $q_lvl, $q), write))
  inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_interferenceContext_fp($r, $lvl, $x), write))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) BEGIN 
  
  
  label pre_infer11
  
  // Inferring interference all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(40, $q_r, $q_lvl, $q)) } none < old[pre_infer11](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(40, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_infer11](Qu_state($q_r, $q_lvl, $q)) || false))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_infer11](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(40, $q_r, $q_lvl, $q) == old[pre_infer11](Qu_state($q_r, $q_lvl, $q)))
  
  // Inferring interference all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(40, $r, $lvl, $x)) } none < old[pre_infer11](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(40, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_infer11](QL_state($r, $lvl, $x)) || (0 == old[pre_infer11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_infer11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_infer11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_infer11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer11](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_infer11](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(40, $r, $lvl, $x) == old[pre_infer11](QL_state($r, $lvl, $x)))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) END 
  
  
  
  // ------- Stabilising regions Qu,QL (check stability of method condition) BEGIN 
  
  
  label pre_stabilize43
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize43](perm(Qu($q_r, $q_lvl, $q))) ==> (none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && (Qu_state($q_r, $q_lvl, $q) == old[pre_stabilize43](Qu_state($q_r, $q_lvl, $q)) || false))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize43](perm(QL($r, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> (QL_state($r, $lvl, $x) in QL_atomicity_context_hf($r, $lvl, $x))) && (QL_state($r, $lvl, $x) == old[pre_stabilize43](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize43](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize43](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize43](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize43](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize43](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize43](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize43](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))
  
  // ------- Stabilising regions Qu,QL (check stability of method condition) END 
  
  
  assert acc(Qu(s, lvl, x), write) && (lvl >= 0 && Qu_state(s, lvl, x) == 0) && acc(Inv(v), write)
}

method $_dequeue_condition_stability_precondition_check(q_r: Ref, q_lvl: Int, q: Ref, success: Bool, v: Int)
  requires acc(Qu(q_r, q_lvl, q), write) && (q_lvl >= 0 && Qu_state(q_r, q_lvl, q) == 0)
{
  var $_levelVar_40: Int
  var sl: Ref
  var hd: Ref
  var done: Bool
  inhale $_levelVar_40 >= 0 && $_levelVar_40 > q_lvl
  inhale acc(Qu_sk_fp(), write) && acc(QL_sk_fp(), write)
  
  // no init required
  
  
  
  // no init required
  
  
  inhale (forall $q_r: Ref, $q_lvl: Int, $q: Ref :: acc(Qu_interferenceContext_fp($q_r, $q_lvl, $q), write))
  inhale (forall $r: Ref, $lvl: Int, $x: Ref :: acc(QL_interferenceContext_fp($r, $lvl, $x), write))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) BEGIN 
  
  
  label pre_infer12
  
  // Inferring interference all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu_interferenceContext_fp()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: (forall $$_m: Int :: { ($$_m in Qu_interferenceSet_df(41, $q_r, $q_lvl, $q)) } none < old[pre_infer12](perm(Qu($q_r, $q_lvl, $q))) ==> ($$_m in Qu_interferenceSet_hf(41, $q_r, $q_lvl, $q)) == ((none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> ($$_m in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && ($$_m == old[pre_infer12](Qu_state($q_r, $q_lvl, $q)) || false))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_infer12](perm(Qu($q_r, $q_lvl, $q))) ==> Qu_interferenceReference_hf(41, $q_r, $q_lvl, $q) == old[pre_infer12](Qu_state($q_r, $q_lvl, $q)))
  
  // Inferring interference all instances of region QL
  
  ___silicon_hack407_havoc_all_QL_interferenceContext_fp()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: (forall $$_m: Int :: { ($$_m in QL_interferenceSet_df(41, $r, $lvl, $x)) } none < old[pre_infer12](perm(QL($r, $lvl, $x))) ==> ($$_m in QL_interferenceSet_hf(41, $r, $lvl, $x)) == ((none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> ($$_m in QL_atomicity_context_hf($r, $lvl, $x))) && ($$_m == old[pre_infer12](QL_state($r, $lvl, $x)) || (0 == old[pre_infer12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_infer12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_infer12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_infer12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_infer12](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == $$_m && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))))
  
  // havoc performed by other front resource
  
  
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_infer12](perm(QL($r, $lvl, $x))) ==> QL_interferenceReference_hf(41, $r, $lvl, $x) == old[pre_infer12](QL_state($r, $lvl, $x)))
  
  // ------- Inferring interference context Qu,QL (beginning of non atomic procedure) END 
  
  
  
  // ------- Stabilising regions Qu,QL (check stability of method condition) BEGIN 
  
  
  label pre_stabilize44
  
  // Stabilising all instances of region Qu
  
  ___silicon_hack407_havoc_all_Qu()
  exhale acc(Qu_sk_fp(), write)
  inhale acc(Qu_sk_fp(), write)
  inhale (forperm $q_r: Ref, $q_lvl: Int, $q: Ref [Qu($q_r, $q_lvl, $q)] :: none < old[pre_stabilize44](perm(Qu($q_r, $q_lvl, $q))) ==> (none < perm($q_r.$diamond) && none < perm(Qu_atomicity_context_fp($q_r, $q_lvl, $q)) ==> (Qu_state($q_r, $q_lvl, $q) in Qu_atomicity_context_hf($q_r, $q_lvl, $q))) && (Qu_state($q_r, $q_lvl, $q) == old[pre_stabilize44](Qu_state($q_r, $q_lvl, $q)) || false))
  
  // Stabilising all instances of region QL
  
  ___silicon_hack407_havoc_all_QL()
  exhale acc(QL_sk_fp(), write)
  inhale acc(QL_sk_fp(), write)
  inhale (forperm $r: Ref, $lvl: Int, $x: Ref [QL($r, $lvl, $x)] :: none < old[pre_stabilize44](perm(QL($r, $lvl, $x))) ==> (none < perm($r.$diamond) && none < perm(QL_atomicity_context_fp($r, $lvl, $x)) ==> (QL_state($r, $lvl, $x) in QL_atomicity_context_hf($r, $lvl, $x))) && (QL_state($r, $lvl, $x) == old[pre_stabilize44](QL_state($r, $lvl, $x)) || (0 == old[pre_stabilize44](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && QL_sk_$_action_n($r, $lvl, $x) >= 3 && perm(QL_OWN($r)) == none || 1 == old[pre_stabilize44](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 2) && perm(QL_OWN($r)) == none || 0 == old[pre_stabilize44](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && true || 1 == old[pre_stabilize44](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && true || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize44](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) >= 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize44](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 1 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 1) && perm(QL_OWN($r)) == none || QL_sk_$_action_n($r, $lvl, $x) == old[pre_stabilize44](QL_state($r, $lvl, $x)) && QL_sk_$_action_n($r, $lvl, $x) + 2 == QL_state($r, $lvl, $x) && (QL_sk_$_action_n($r, $lvl, $x) > 0 && QL_sk_$_action_n($r, $lvl, $x) % 3 == 0) && perm(QL_OWN($r)) == none)))
  
  // ------- Stabilising regions Qu,QL (check stability of method condition) END 
  
  
  assert acc(Qu(q_r, q_lvl, q), write) && (q_lvl >= 0 && Qu_state(q_r, q_lvl, q) == 0)
}